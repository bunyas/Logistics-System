@model mascis.fo_ClientFeedback

@{
    ViewBag.Title = "Test";
    Layout = "~/Views/Shared/_LayoutHSIP.cshtml";
}

<h2>Test</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>fo_ClientFeedback</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.FacilityCode, "Facility Name", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("FacilityCode", (IEnumerable<SelectListItem>)ViewData["Facilities"], htmlAttributes: new { @class = "form-control", @onChange = "SelectedFacilityValue(this)" })
                @Html.ValidationMessageFor(model => model.FacilityCode, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FeedbackDate, "Date of FeedBack", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FeedbackDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FeedbackDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ContactPersonCode, "Contact person", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.EditorFor(model => model.ContactPersonCode, new { htmlAttributes = new { @class = "form-control" } })*@
                @Html.DropDownList("ContactPersonCode", new SelectList(ViewBag.Contacts as System.Collections.IEnumerable,
     "cp_code", "cp_name", "-select-"), htmlAttributes: new { @class = "form-control select-add-placeholder", @onChange = "SelectedContactValue(this)" })
                @Html.ValidationMessageFor(model => model.ContactPersonCode, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ContactPersonDesg, "Title", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("ContactPersonDesg", new SelectList(ViewBag.Designations as System.Collections.IEnumerable,
     "title_code", "title_desc", "-select-"), htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ContactPersonDesg, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group" hidden="hidden">
            @Html.LabelFor(model => model.ContactPerson, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ContactPerson, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ContactPerson, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group" hidden="hidden">
            @Html.LabelFor(model => model.ContactPersonDesignation, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ContactPersonDesignation, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ContactPersonDesignation, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ContactPersonTele, "Telephone number", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ContactPersonTele, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ContactPersonTele, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SCTO_visited, "Has the SCTO visited in the past one or two months?", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("SCTO_visited", new SelectList(ViewBag.YesNo as System.Collections.IEnumerable,
     "yes_no_id", "yes_no_desc", "-select-"), htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.SCTO_visited, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SCTOs_visited, "Choose the SCTO that visited", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.EditorFor(model => model.SCTOs_visited, new { htmlAttributes = new { @class = "form-control" } })*@
                @Html.DropDownList("SCTOs_visited", new SelectList(ViewBag.Scto as System.Collections.IEnumerable,
     "SCTO", "SCTO", "-select-"), htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.SCTOs_visited, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group" id="LastVist">
            @Html.LabelFor(model => model.SCTO_LastVist, "when did she/he last visit?", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.SCTO_LastVist, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.SCTO_LastVist, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
        @Html.LabelFor(model => model.MAUL_Services, "How do you find MAUL services?", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("MAUL_Services", new SelectList(ViewBag.MAUL_Service as System.Collections.IEnumerable,
     "Id", "ServiceLevel", "-select-"), htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.MAUL_Services, "", new { @class = "text-danger" })
        </div>
    </div>

        <div class="form-group">
        @Html.LabelFor(model => model.AnyAreas_of_Concern, "Any areas of concern for MAUL’s intervention?", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("AnyAreas_of_Concern", new SelectList(ViewBag.YesNo as System.Collections.IEnumerable,
     "yes_no_id", "yes_no_desc", "-select-"), htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.AnyAreas_of_Concern, "", new { @class = "text-danger" })
        </div>
    </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Areas_of_Concern,"Please list them down", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Areas_of_Concern, 5, 280, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Areas_of_Concern, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Better_Service, "What can we do to serve you better?", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Better_Service, 5, 280, new { htmlAttributes = new { @class = "form-control", @style = "width:280px; height:200px;" } })
                @Html.ValidationMessageFor(model => model.Better_Service, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
<script>
    $(function () {
        $(".select-add-placeholder").prepend("<option value='' selected>-select-</option>");
    });
    function SelectedFacilityValue(e) {
        var selected = e.value;
        alert(selected);
    }
    function SelectedContactValue(e) {
        var selectedText = e.options[e.selectedIndex].innerHTML;
        var selected = e.value;
        //alert(selected);
        $("#ContactPerson").val(selectedText);
         $.ajax({
             url: 'GetContactTitle?cp_code=' + selected,
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            type: 'GET',
            success: function (datadetails) {

                if (datadetails > 0) {
                     var des= $('#ContactPersonDesg').ejDropDownList({

                        dataSource: @Html.Raw(Json.Encode(ViewBag.Designations)),
                        enabled: true,
                        width: "290px",
                        //cssClass: "dropdown",
                        readOnly: true,
                        fields: { value: "title_code", text: "title_desc" },
                    }).data("ejDropDownList");
                     des.selectItemByValue(datadetails);
                     $("#ContactPersonDesignation").val($('#ContactPersonDesg').data("ejDropDownList").option("text"));
                }

            },
            error: function (_error) {
                console.log(_error);
                alert("error")
            }
        });
    }
</script>
@*@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}*@
