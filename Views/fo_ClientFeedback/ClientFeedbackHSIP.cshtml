
@{
    ViewBag.Title = "Client Feedback";
    if (User.IsInRole("MonitoringAndEvaluationOfficer"))
    {
        Layout = "~/Views/Shared/_LayoutHSIP.cshtml";
    }
    else if (User.IsInRole("CCU"))
    {
        Layout = "~/Views/Shared/_LayoutCCU.cshtml";
    }
    else if (User.IsInRole("SCTO"))
    {
        Layout = "~/Views/Shared/_LayoutRFSO.cshtml";
    }
}

@*<h2>ClientFeedbackHSIP</h2>*@

<div id="ControlRegion">
    @(Html.EJ().Grid<object>("Grid")
         .Datasource(ds => ds.Json((IEnumerable<object>)ViewBag.datasource).UpdateURL("DialogInsert").InsertURL("DialogInsert").RemoveURL("DialogDelete").Adaptor(AdaptorType.RemoteSaveAdaptor))

       // .Datasource(datasource => datasource.URL("GetComplaints")/*.UpdateURL("DialogUpdate").InsertURL("DialogInsert")*/.RemoveURL("DialogDelete").Adaptor(AdaptorType.UrlAdaptor))
       .AllowSearching(true)
    .EditSettings(edit => { edit.AllowAdding().AllowDeleting().AllowEditing().EditMode(EditMode.DialogTemplate).DialogEditorTemplateID("#template"); })

    .ContextMenuSettings(contextMenu =>
    {
        contextMenu.EnableContextMenu();
    })
    .AllowPaging()
    .AllowScrolling()
    .ScrollSettings(col => { col.Width(1300); })
     .AllowFiltering().ShowColumnChooser()
    .AllowResizing()
    .FilterSettings(filter => { filter.FilterType(FilterType.Excel); })
    .ToolbarSettings(toolbar =>
    {
        toolbar.ShowToolbar().ToolbarItems(items =>
        {
            //items.AddTool(ToolBarItems.Add);
            items.AddTool(ToolBarItems.Edit);
            //items.AddTool(ToolBarItems.Update);
            //items.AddTool(ToolBarItems.Cancel);
            items.AddTool(ToolBarItems.Search);
        });
    })
    .Columns(col =>
    {

        col.Field("ID").IsPrimaryKey(true).Visible(false).HeaderText("ID").Width(200).Add();
        col.Field("FacilityCode").HeaderText("Health Facility").ForeignKeyField("FacilityCode").ForeignKeyValue("Facility").DataSource((IEnumerable<object>)ViewBag.Facilities).Width(200).Add();
        col.Field("FeedbackDate").HeaderText("Date").Width(100).Format("{0:dd/MM/yyyy}").Add();
        col.Field("ContactPersonCode").HeaderText("ContactPersonCode").ForeignKeyField("cp_code").ForeignKeyValue("cp_name").DataSource((IEnumerable<object>)ViewBag.Contacts).Width(200).Add();
        col.Field("ContactPersonDesg").HeaderText("ContactPersonDesg").ForeignKeyField("title_code").ForeignKeyValue("title_desc").DataSource((IEnumerable<object>)ViewBag.Designations).Width(200).Add();
        //col.Field("ContactPerson").HeaderText("Contact Person").Width(200).Add();
        //col.Field("ContactPersonDesignation").HeaderText("Designation").Width(200).Add();

        //col.Field("ContactPersonTele").HeaderText("Tel. No").Width(200).Add();
        //col.Field("SCTO_visited").HeaderText("SC-TO visited").Width(70).Add();
        //col.Field("SCTOs_visited").HeaderText("SC-TOs").Width(200).Add();
        //col.Field("SCTO_LastVist").HeaderText("SC-TO LastVist").Width(200).Add();
        //col.Field("MAUL_Services").HeaderText("How do you find MAUL services?").Width(200).Add();
        //col.Field("AnyAreas_of_Concern").HeaderText("Any Concerns").Width(200).Add();
        //col.Field("Areas_of_Concern").HeaderText("Areas of Concern").Width(200).Add();
        //col.Field("Better_Service").HeaderText("What can we do to serve you better?").Width(200).Add();

    })
    .ClientSideEvents(eve => { /*eve.Load("onLoad");*/ eve.ActionComplete("edit"); }))

</div>

<script type="text/template" id="template">
    <b>CLIENT FEEDBACK FORM</b>
    <div id="defaultTab">
        <table cellspacing="5">
            <tr>
                <td style="text-align: left;" hidden="hidden">ID</td>
                <td style="text-align: left" hidden="hidden"> <input type="text" id="ID" name="ID" value="{{:ID}}" class="e-field e-ejinputtext valid " /> </td>
                <td style="text-align: left;">Health Facility</td>
                <td style="text-align: left"> <input type="text" id="FacilityCode" name="FacilityCode" value="{{:FacilityCode}}" class="e-field e-ejinputtext valid " /> </td>
                <td style="text-align: left;">Date</td>
                <td style="text-align: left"> <input type="text" id="FeedbackDate" name="FeedbackDate" value="{{:FeedbackDate}}" class="e-field e-ejinputtext valid " /> </td>

            </tr>
            <tr>
                <td style="text-align: left;">Contact Person</td>
                <td style="text-align: left"> <input type="text" id="ContactPersonCode" name="ContactPersonCode" value="{{:ContactPersonCode}}" class="e-field e-ejinputtext valid " /> </td>
                <td style="text-align: left;">Designation</td>
                <td style="text-align: left"> <input type="text" id="ContactPersonDesg" name="ContactPersonDesg" value="{{:ContactPersonDesg}}" class="e-field e-ejinputtext valid " /> </td>
                <td style="text-align: left;">Tel No</td>
                <td style="text-align: left"> <input type="text" id="ContactPersonTele" name="ContactPersonTele" value="{{:ContactPersonTele}}" class="e-field e-ejinputtext valid " /> </td>
            </tr>
            <tr hidden="hidden">
                <td style="text-align: left;">Contact Person</td>
                <td style="text-align: left"> <input type="text" id="ContactPerson" name="ContactPerson" value="{{:ContactPerson}}" class="e-field e-ejinputtext valid" /> </td>
                <td style="text-align: left;">Designation</td>
                <td style="text-align: left"> <input type="text" id="ContactPersonDesignation" name="ContactPersonDesignation" value="{{:ContactPersonDesignation}}" class="e-field e-ejinputtext valid" /> </td>
                <td></td>
                <td></td>
            </tr>
        </table>
        <table cellspacing="5">
            <tr>
                <td style="text-align: left;" @*colspan="2"*@>Has the SC-TO  visited in the past one or two months?</td>
                <td style="text-align: left"> <input type="text" id="SCTO_visited" name="SCTO_visited" value="{{:SCTO_visited}}" class="e-field e-ejinputtext valid" /> </td>
            </tr>
            <tr>
                <td style="text-align: left;" id="SCTO_LastVist_lbl">If No when did she/he last visit?</td>
                <td style="text-align: left" id="SCTO_LastVist_txt"> <input type="text" id="SCTO_LastVist" name="SCTO_LastVist" value="{{:SCTO_LastVist}}" class="e-field e-ejinputtext valid " /> </td>

            </tr>
            <tr>
                <td style="text-align: left;" id="SCTOs_lbl"> Mention names of SCTOs that visited</td>
                <td id="SCTOs_txt">
                    <textarea  readonly="readonly" name="SCTOs_visited" class="form-control" value="{{:SCTOs_visited}}" cols="90" rows="2" style="max-width:100%">{{:SCTOs_visited}}</textarea>
                </td>

            </tr>
            <tr>
                <td style="text-align: left;" @*colspan="2"*@>How do you find MAUL services?</td>
                <td style="text-align: left"> <input type="text" id="MAUL_Services" name="MAUL_Services" value="{{:MAUL_Services}}" class="e-field e-ejinputtext valid " /> </td>
            </tr>
            <tr>
                <td style="text-align: left;" @*colspan="2"*@>Any areas of concern for MAUL’s intervention? </td>
                <td style="text-align: left"> <input type="text" id="AnyAreas_of_Concern" name="AnyAreas_of_Concern" value="{{:AnyAreas_of_Concern}}" class="e-field e-ejinputtext valid " /> </td>

            </tr>
            <tr>
                <td style="text-align: left;" id="Areas_of_Concern_lbl">Areas of Concern</td>

                <td id="Areas_of_Concern_txt">
                    <textarea readonly="readonly" name="Areas_of_Concern" class="form-control" value="{{:Areas_of_Concern}}" cols="90" rows="2" style="max-width:100%">{{:Areas_of_Concern}}</textarea>
                </td>

            </tr>
            <tr>
                <td style="text-align: left;">What can we do to serve you better?</td>

                <td colspan=5>
                    <textarea readonly="readonly" name="Better_Service" class="form-control" value="{{:Better_Service}}" cols="90" rows="2" style="max-width:100%">{{:Better_Service}}</textarea>
                </td>

            </tr>


        </table>
        <div id="dialog">

        </div>



    </div>

</script>



<script>

    function open(args) {

        var objDialog = $("#Grid").data("ejGrid");
        var $dialogWrapper = objDialog.element.find("#" + objDialog._id + "_dialogEdit_wrapper");
        $dialogWrapper.css("top", "12px");
        $dialogWrapper.css("left", "12px");
    }

    function edit(args) {

        if (args.requestType == "beginedit" || args.requestType == "add") {
            $($("#EditDialog_Grid_Save").hide()).after('<button id="save" type="button" onclick="savess();" class="btn btn-success btn-sm" > <span class="glyphicon glyphicon-save"></span> Save</button>');

            $("#" + this._id + "_dialogEdit").ejDialog({ open: "open" })

            $("#save").css({ "width": "100px", "height": "50px", "font-size": "17px", "margin-left": "190px", "visibility":"hidden" });
            $("#EditDialog_Grid_Cancel").ejButton("destroy");
            $($("#EditDialog_Grid_Cancel").hide()).after(' <button type="button" id="cancel" onclick="cancelss()" class="btn btn-danger btn-sm" ><span class="glyphicon glyphicon-remove-circle"></span> Cancel</button>');
            $("#cancel").css({ "width": "100px", "height": "50px", "float": "right", "margin-left": "10px", "margin-top": "20px", "margin-bottom": "10px" });

            $("#FeedbackDate").ejDateTimePicker(
                {
                    maxDate: new Date(), value: new Date(new Date($("#FeedbackDate").attr("value"))),
                    validationRules: {
                        required: true
                    }, readOnly: true,
                    dateFormat: "dd/MM/yyyy",
                    validationMessage: {
                        required: "Feedback Date is Required"
                    }, width: 240
                }
            );
            $("#SCTO_LastVist").ejDatePicker({ maxDate: dateString(), readOnly: true, dateFormat: "dd/MM/yyyy",/*maxDate: new Date(),*/ value: new Date(new Date($("#SCTO_LastVist").attr("value"))), width:400 });

            //if (args.requestType == "beginedit") {
            //    $("#SCTO_LastVist").ejDatePicker({
            //        minDate: new Date(new Date($("#SCTO_LastVist").attr("value"))), maxDate: new Date(), value: new Date(new Date($("#SCTO_LastVist").attr("value")))
            //    });
            //}

            var YesNo =@Html.Raw(Json.Encode(ViewBag.YesNo));
            var Facilities =@Html.Raw(Json.Encode(ViewBag.Facilities));
            var contacts =@Html.Raw(Json.Encode(ViewBag.contacts));
            var maul_Services =@Html.Raw(Json.Encode(ViewBag.MAUL_Service));
            var designations =@Html.Raw(Json.Encode(ViewBag.Designations));

            var ASDropDownList = $('#FacilityCode').ejDropDownList({
                dataSource: Facilities,
                width:240,
                fields: { value: "FacilityCode", text: "Facility" }, readOnly: true,
                selectedItemIndex: 0,
                //change: "setContactdetails",
            }).data("ejDropDownList");

            var SCTODDList = $('#SCTO_visited').ejDropDownList({
                dataSource: YesNo,
                width: 400, readOnly: true,
                fields: { value: "yes_no_id", text: "yes_no_desc" },
                change: "setSCTOdetails",
                //showCheckbox: true,
            }).data("ejDropDownList");

            var MSDDList = $('#MAUL_Services').ejDropDownList({
                dataSource: maul_Services,
                width: 400, readOnly: true,
                fields: { value: "Id", text: "ServiceLevel" },
            }).data("ejDropDownList");
            $('#ContactPersonCode').ejDropDownList({
                dataSource: contacts,
                width: 240, readOnly: true,
                fields: { value: "cp_code", text: "cp_name" },
                change: "setContactdetails",
            }).data("ejDropDownList");
            $('#ContactPersonDesg').ejDropDownList({
                dataSource: designations,
                width: 240, readOnly: true,
                fields: { value: "title_code", text: "title_desc" },
            }).data("ejDropDownList");

            var MSDDList = $('#AnyAreas_of_Concern').ejDropDownList({
                dataSource: YesNo,
                width: 400, readOnly: true,
                fields: { value: "yes_no_id", text: "yes_no_desc" },
                change: "setAreas_of_Concern",
                //showCheckbox: true,
            }).data("ejDropDownList");

            $('#SCTO_LastVist_lbl').hide();
            $('#SCTO_LastVist_txt').hide();

            $('#SCTOs_txt').hide();
            $('#SCTOs_lbl').hide();

            $('#Areas_of_Concern_txt').hide();
            $('#Areas_of_Concern_lbl').hide();
        }
    }

    ///Function to return the dd-mm-YYYY format
    function dateString() {
        var date_complaint = new Date(); //        date = new Date('2013-08-03T02:00:00Z');
        var year = date_complaint.getFullYear();
        var month = date_complaint.getMonth() + 1;
        var dt = date_complaint.getDate();
        //Restrict this to a max of a month back
        //If the month is Jan, the latest that can be selected is  Dec last year
        //alert(year + '-' + month + '-' + dt);
        if (month ==1) {
            month = 11;
            year--;
        }
        else if (month == 2) {
            month = 12;
            year--;
        }
        else {
            month = month-2;
        }
       // alert(year + '-' + month + '-' + dt);
        dt = 1; // The first day of the 2nd last month
        var DateStr = (year + '-' + month + '-' + dt );
        var myDate = new Date(DateStr);
        return (myDate);
    }

    $.validator.setDefaults({
        //to validate all fields(hidden also)
        ignore: [],

        errorClass: 'e-validation-error',
        //it specifies the error message display position
        errorPlacement: function (error, element) {
            $(error).insertAfter(element.closest(".e-widget"));
        },
    });

    function setSCTOdetails(e) {
        var mComplainant = e.text; //Name
        var SCTOvalue = e.value;
        //alert(e.value);

        if (SCTOvalue == 1)
        {
            $('#SCTO_LastVist_lbl').hide();
            $('#SCTO_LastVist_txt').hide();

            $('#SCTOs_txt').show();
            $('#SCTOs_lbl').show();
        }
        else
        {
            $('#SCTO_LastVist_lbl').show();
            $('#SCTO_LastVist_txt').show();

            $('#SCTOs_txt').hide();
            $('#SCTOs_lbl').hide();
        }
    }

    function setAreas_of_Concern(e) {
        var SCTOvalue = e.value;
        //alert(e.value);

        if (SCTOvalue == 1) {
            $('#Areas_of_Concern_txt').show();
            $('#Areas_of_Concern_lbl').show();
        }
        else {
            $('#Areas_of_Concern_txt').hide();
            $('#Areas_of_Concern_lbl').hide();
        }
    }

    //function setContactdetails(e) {
    //    $('#ContactPerson').val(null);
    //    $('#ContactPersonCode').val(null);
    //    $('#ContactPersonDesg').val(null);
    //    $('#ContactPersonDesignation').val(null);

    //    var contactsDDList = $('#ContactPersonCode').ejDropDownList({
    //        dataSource: null,
    //        width: "240px",
    //        fields: { value: "cp_code", text: "cp_name" },
    //        change: "setTitle",
    //    }).data("ejDropDownList");
    //    var facid = e.value;
    //    // alert(e.value);
    //     // When you use .Where(c => c.title_code...  the result is an array
    //                //alert(titledetails[0].title_desc);

    //                //When you use .FirstOrDefault(c => c.title_code  ...
    //                 //alert(contactdetails.title_desc);
    //                // console.log(JSON.stringify(titledetails));
    //    //contactPerson(int? cp_code)
    //    $.ajax({
    //        url: 'contactPersons?cp_facility=' + facid,
    //        contentType: "application/json; charset=utf-8",
    //        dataType: "json",
    //        type: 'GET',
    //        success: function (contactdetails) {
    //            console.log(JSON.stringify(contactdetails));
    //            if (Object.keys(contactdetails).length > 0) {
    //                var contactsList = $('#ContactPersonCode').ejDropDownList({
    //                    dataSource: contactdetails,
    //                    width: "240px",
    //                    fields: { value: "cp_code", text: "cp_name" },
    //                    change: "setTitle",
    //                }).data("ejDropDownList");
    //            }
    //        },
    //    });

    //}
    //function setTitle(args) {
    //    $('#ContactPerson').val(null);
    //    $('#ContactPersonCode').val(null);
    //    $('#ContactPersonDesg').val(null);
    //    $('#ContactPersonDesignation').val(null);

    //    if (args == null || args === 'undefined') {
    //        return;
    //    }
    //    var conCode = $('#ContactPersonCode').data("ejDropDownList");
    //    var cCode = conCode.option("value");
    //    var cName = conCode.option("text");


    //    $('#ContactPerson').val(cName);


    //    $.ajax({
    //        url: 'contactPerson?cp_code=' + cCode,
    //        contentType: "application/json; charset=utf-8",
    //        dataType: "json",
    //        type: 'GET',
    //        success: function (titledetails) {
    //            if (Object.keys(titledetails).length > 0) {

    //                // When you use .Where(c => c.title_code...  the result is an array
    //                //alert(titledetails[0].title_desc);

    //                //When you use .FirstOrDefault(c => c.title_code  ...
    //                //alert(contactdetails.title_desc);
    //                // console.log(JSON.stringify(titledetails));ContactPersonCode

    //                $('#ContactPersonDesg').val(titledetails.cp_title);
    //                setTitleLabel(titledetails.cp_title);
    //                //$('#ContactPersonDesignation').val(titledetails.title_desc);

    //            }
    //            //else {
    //            //    alert('Potea');
    //            //}
    //        },
    //    });
    //}

    //function setTitleLabel(args) {
    //    if (args == null || args === 'undefined') {
    //        return;
    //    }


    //    $.ajax({
    //        url: 'contactTitle?title_code=' + args,
    //        contentType: "application/json; charset=utf-8",
    //        dataType: "json",
    //        type: 'GET',
    //        success: function (titledetails) {
    //            if (Object.keys(titledetails).length > 0) {

    //                $('#ContactPersonDesignation').val(titledetails.title_desc);

    //                //$('#ContactPersonDesignation').val(titledetails.title_desc);

    //            }
    //            //else {
    //            //    alert('Potea');
    //            //}
    //        },
    //    });
    //}
</script>

<script>
    function savess() {
        var obj = $("#Grid").ejGrid("instance");
        obj.endEdit();
        //$(function () {
        //    $("#dialog").ejDialog();
        //});
    }
    function cancelss() {
        var obj = $("#Grid").ejGrid("instance")
        obj.cancelEdit();
    }
</script>
<script>

    $(function () {
        $("#btnOpen").ejButton({ size: "medium", type: "button", height: 30, width: 150 });
        $("#btnOpen").click({ changeTitle: "Title", type: "1" }, onOpen);
    });

    function onOpen(event) {
        var data = $("#basicDialog").ejDialog("instance");
        data.setTitle(event.data.changeTitle);
        if (event.data.type == 0) {
            $("#basicDialog").ejDialog("open");
            $("#basicDialog").ejDialog({ enableModal: false });
        }
        else if (event.data.type == 1) {
            $("#basicDialog").ejDialog("open");
            $("#basicDialog").ejDialog({ enableModal: true });
        }
    }
</script>


<style>
    .e-grid .e-groupdroparea, /*GroupDropArea */
    .e-grid .e-groupdroparea:hover, /*GroupDropArea Hover*/
    .e-grid .e-cloneproperties, /*Column header clone during dragging header*/
    .e-grid .e-groupheadercell:hover, /*HeaderCell in GroupDropArea*/
    .e-grid td.e-active, /*During Row Selected*/
    /*For pager items and their hover*/
    .e-pager .e-currentitem,
    .e-pager .e-currentitem:hover,
    .e-pager .e-link:hover,
    .e-pager .e-icon:hover {
        background-color: #ea1b8d;
    }

    .e-grid .e-gridheader /*For line that separates the grid header and content*/ {
        border-bottom-color: #ea1b8d;
    }

    .e-grid tr.e-hover /*For row hover*/ {
        background-color: #e66aae;
        color: #FFFFFF;
    }

    .e-grid .e-alt_row /*For Alternate row color*/ {
        background-color: #E5E4E2; /*#99CFE3;*/
    }
</style>

<style>
    .e-grid .e-dialog .gridform .e-rowcell {
        padding: .5em;
        border-bottom: 1px solid #c8c8c8;
        border-left: 1px solid #c8c8c8;
    }
</style>
<style>
    .panel-default > .panel-heading {
        background-color: #451bb1 /*#3e1111*/;
        color: white;
        /*background-color:silver;*/
        /*color: white;*/
    }
</style>

<style type="text/css" class="cssStyles">
    .control {
        margin-left: 30px;
    }

    .ctrllabel {
        padding-top: 15px;
    }

    .control {
        margin-left: 20px;
    }

    .frame {
        height: 250px;
        width: 1000px;
    }

    .frame1 {
        height: 240px;
        width: 900px;
    }

    .txt {
        display: block;
        margin-bottom: 12px;
    }
</style>

<style>
    #lblComplaintTitle {
        /*font-size: 24px;*/
        background-color: white;
        color: #c9252b;
        vertical-align: top;
        /*width: 700px;*/
    }

    .redLabels {
        /*font-size: 24px;*/
        background-color: white;
        color: #ff0000;
        vertical-align: top;
        font-weight: bold;
        /*width: 700px;*/
    }

    .myDiv {
        font-size: 18px;
        background-color: white;
        color: orangered;
        vertical-align: top;
        text-align: center;
        /*width: 700px;*/
    }
</style>

<style>
    .e-grid .e-dialog .gridform .e-rowcell {
        padding: .5em;
    }

    .custom.e-js .e-header {
        background: #c9252b;
    }

    .custom.e-js .e-content {
        background: #ddd;
    }

    .custom .e-rbn-button.e-btn.e-select {
        background: #f5f5f5;
        color: #333;
    }

    .tabstyle {
        background: #F9F9F9;
        border-radius: 10px;
        border: 1px solid #99CFE3;
        display: block;
    }

    .longcolumns {
        width: 600px !important;
        margin: 0 auto !important;
        position: relative !important;
        border-right: 5px #666 outset !important;
        border-left: 5px #666 outset !important;
    }
</style>

<script>
    function setContactdetails(e) {

        var mComplainantCategory = e.value;
        var name = e.text;
        $("#ContactPerson").val(name);
        $.ajax({
            url: 'GetContactTitle?cp_code=' + mComplainantCategory,
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            type: 'GET',
            success: function (datadetails) {

                if (datadetails > 0) {
                     var des= $('#ContactPersonDesg').ejDropDownList({

                        dataSource: @Html.Raw(Json.Encode(ViewBag.Designations)),
                        enabled: true,
                        width: "250px",
                        readOnly: true,
                        fields: { value: "title_code", text: "title_desc" },
                     }).data("ejDropDownList");

                     des.selectItemByValue(datadetails);
                     $("#ContactPersonDesignation").val($('#ContactPersonDesg').data("ejDropDownList").option("text"));
                }

            },
            error: function (_error) {
                console.log(_error);
                alert("error")
            }
        });
        $.ajax({
            url: 'GetTelephone?cp_code=' + mComplainantCategory,
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            type: 'GET',
            success: function (datadetails) {
                $('#ContactPersonTele').val(datadetails.ct_telephone);

            },
        });

    }
</script>

