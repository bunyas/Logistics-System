
@{
    ViewBag.Title = "ExpiryTracking";
    Layout = "~/Views/Shared/_LayoutHSIP.cshtml";
}

<!-- Breadcrumbs-->
<ol class="breadcrumb" style="margin-top:30px;">
    <li class="breadcrumb-item">
        <a href="#">Dashboard</a>
    </li>
    <li class="breadcrumb-item active">Expiry tracking</li>
</ol>

<div class="panel panel-default">
    <div class="panel-heading">
        <div class="row">

            <div class="col-md-1"><h6>From:</h6></div>
            <div class="col-md-3">
                <input type="text" id="dp_start_date" name="dp_start_date" class=" e-field e-ejinputtext valid" style="width:100%" />
            </div>
            <div class="col-md-1"><h6 style="float:right;">TO:</h6></div>
            <div class="col-md-3">
                <input type="text" id="dp_end_date" name="dp_end_date" class=" e-field e-ejinputtext valid" style="width:100%" />
            </div>
            <div class="col-md-2">
                <input id="LoadDatabtn" class="btn btn-sm btn-primary" type="button" value="Load Records" onclick="myfunc()" />
            </div>
        </div>
    </div>
</div>

@{Html.EJ().Tab("defaultTabs").Items(data =>
    {
    data.Add().ID("FefoUse").Text("Expiry Fefo use").ContentTemplate(@<div>

        @(Html.EJ().Grid<object>("FefoGrid")
            .Datasource((IEnumerable<object>)ViewBag.Fefo)
            .ShowColumnChooser()
             .ToolbarSettings(toolBar => toolBar.ShowToolbar().ToolbarItems(items =>
             {
                 items.AddTool(ToolBarItems.ExcelExport);
             }))
     .AllowSorting() .AllowFiltering().ShowColumnChooser().AllowGrouping().AllowTextWrap().AllowPaging().PageSettings(page => page.PageSize(20)).IsResponsive().AllowResizeToFit()
        .AllowScrolling().ScrollSettings(scroll => { scroll.Width("100%"); }).FilterSettings(filter => { filter.FilterType(FilterType.Excel); })
          .ShowStackedHeader()
        .StackedHeaderRows(row =>
        {
            row.StackedHeaderColumns(column =>
            {
                column.HeaderText("Are Drugs with shorter expiry dates strategically placed for easy access?").Tooltip("Are Drugs with shorter expiry dates strategically placed for easy access?").Column(col =>
                {
                    col.Add("Dispensary");
                    col.Add("Lab");
                    col.Add("Store");
                }).Add();
            }).Add();
        })
        .Columns(col =>

        {
            col.Field("facility_code").HeaderText("Facility code").IsPrimaryKey(true).TextAlign(TextAlign.Left).Width("100").AllowEditing().Add();

            col.Field("SAP_Code").HeaderText("SAP code").TextAlign(TextAlign.Left).Priority(4).Width("100").AllowEditing().Add();

            col.Field("District_Name").HeaderText("District").Width("100").AllowEditing().Add();

            col.Field("ImplimentingPartnerDescription").HeaderText("IP").TextAlign(TextAlign.Left).Priority(4).Width("100").AllowEditing().Add();
            col.Field("ComprehensiveImplimentingPartnerDescription").HeaderText("Comprehensive IP").TextAlign(TextAlign.Left).Width("100").AllowEditing().Add();

            col.Field("Level_desc").HeaderText("Level of care").TextAlign(TextAlign.Left).Priority(4).Width("100").AllowEditing().Add();

            col.Field("CDCRegion").HeaderText("CDC Region").Width("100").AllowEditing().Add();

            col.Field("date_of_visit").HeaderText("Date of visit").IsPrimaryKey(true).TextAlign(TextAlign.Left).Priority(4).Width(100).Format("{0:dd/MM/yyyy}").Add();
            col.Field("SCTO").HeaderText("SCTO").TextAlign(TextAlign.Left).Width("100").AllowEditing().Add();

            col.Field("Facility").HeaderText("Facility name").TextAlign(TextAlign.Left).Priority(4).Width("150").AllowEditing().Add();

            col.Field("Dispensary").HeaderText("Dispensary").Width("150").AllowFiltering(false).Add();

            col.Field("Lab").HeaderText("Laboratory").Width("150").AllowFiltering(false).Add();

            col.Field("Store").HeaderText("Store").TextAlign(TextAlign.Left).Priority(4).Width("150").AllowFiltering(false).Add();

            col.Field("Score").HeaderText("Score").TextAlign(TextAlign.Left).Priority(4).Width("70").AllowFiltering(false).Add();
            col.Field("Percentage").HeaderText("Percentage Score").TextAlign(TextAlign.Left).Priority(4).Width("100").AllowFiltering(false).Add();

        }).ClientSideEvents(evt => evt.ToolbarClick("OnToolbarClick")))
    </div>);
    data.Add().ID("ExpiryPresence").Text("Presence of expired commodities").ContentTemplate(@<div>

        @(Html.EJ().Grid<object>("PresenceGrid")
            .Datasource((IEnumerable<object>)ViewBag.ExpiryPresence)
            .ShowColumnChooser()
             .ToolbarSettings(toolBar => toolBar.ShowToolbar().ToolbarItems(items =>
             {
                 items.AddTool(ToolBarItems.ExcelExport);
             }))
     .AllowSorting() .AllowFiltering().ShowColumnChooser().AllowGrouping().AllowTextWrap().AllowPaging().PageSettings(page => page.PageSize(20)).IsResponsive().AllowResizeToFit()
        .AllowScrolling().ScrollSettings(scroll => { scroll.Width("100%"); }).FilterSettings(filter => { filter.FilterType(FilterType.Excel); })
            .ShowStackedHeader()
        .StackedHeaderRows(row =>
        {
            row.StackedHeaderColumns(column =>
            {
                column.HeaderText(" Are there expired products at the site?").Tooltip("Are Drugs with shorter expiry dates strategically placed for easy access?").Column(col =>
                {
                    col.Add("ARVs");
                    col.Add("Lab");
                    col.Add("Oppo");
                }).Add();
            }).Add();
        })
        .Columns(col =>

            {

                col.Field("facility_code").HeaderText("Facility code").IsPrimaryKey(true).TextAlign(TextAlign.Left).Width("100").AllowEditing().Add();

                col.Field("SAP_Code").HeaderText("SAP code").TextAlign(TextAlign.Left).Priority(4).Width("100").AllowEditing().Add();

                col.Field("District_Name").HeaderText("District").Width("100").AllowEditing().Add();

                col.Field("ImplimentingPartnerDescription").HeaderText("IP").TextAlign(TextAlign.Left).Priority(4).Width("100").AllowEditing().Add();
                col.Field("ComprehensiveImplimentingPartnerDescription").HeaderText("Comprehensive IP").TextAlign(TextAlign.Left).Width("100").AllowEditing().Add();

                col.Field("Level_desc").HeaderText("Level of care").TextAlign(TextAlign.Left).Priority(4).Width("100").AllowEditing().Add();

                col.Field("CDCRegion").HeaderText("CDC Region").Width("100").AllowEditing().Add();

                col.Field("date_of_visit").HeaderText("Date of visit").IsPrimaryKey(true).TextAlign(TextAlign.Left).Priority(4).Width(100).Format("{0:dd/MM/yyyy}").Add();
                col.Field("SCTO").HeaderText("SCTO").TextAlign(TextAlign.Left).Width("100").AllowEditing().Add();

                col.Field("Facility").HeaderText("Facility name").TextAlign(TextAlign.Left).Priority(4).Width("150").AllowEditing().Add();

                col.Field("ARVs").HeaderText("ARVs").Width("120").AllowFiltering(false).Add();

                col.Field("Lab").HeaderText("Laboratory Commodities").Width("250").AllowFiltering(false).Add();

                col.Field("Oppo").HeaderText("Opportunistic Infection Drugs").TextAlign(TextAlign.Left).Priority(4).Width("250").AllowFiltering(false).Add();

                col.Field("Q_1").HeaderText("If (a) is yes, are the drugs stored separately from viable stock?").Width("250").AllowFiltering(false).Add();

                col.Field("Q_2").HeaderText(" Is there a standard process for disposing off expired drugs?").Width("250").AllowFiltering(false).Add();

                col.Field("Q_3").HeaderText("If (c) is Yes, is the process strictly adhered to?").TextAlign(TextAlign.Left).Priority(4).Width("250").AllowFiltering(false).Add();

                col.Field("Score").HeaderText("Score").TextAlign(TextAlign.Left).Priority(4).Width("100").AllowFiltering(false).Add();
                col.Field("Percentage").HeaderText("Percentage Score").TextAlign(TextAlign.Left).Priority(4).Width("100").AllowFiltering(false).Add();
            }).ClientSideEvents(evt => evt.ToolbarClick("OnToolbarClick1")))
    </div>);
    data.Add().ID("TrackingTools").Text("Expiry tracking tools").ContentTemplate(@<div>

        @(Html.EJ().Grid<object>("TrackingToolGrid")
            .Datasource((IEnumerable<object>)ViewBag.ExpiryTracking)
            .ShowColumnChooser()
             .ToolbarSettings(toolBar => toolBar.ShowToolbar().ToolbarItems(items =>
             {
                 items.AddTool(ToolBarItems.ExcelExport);
             }))
     .AllowSorting() .AllowFiltering().ShowColumnChooser().AllowGrouping().AllowTextWrap().AllowPaging().PageSettings(page => page.PageSize(20)).IsResponsive().AllowResizeToFit()
        .AllowScrolling().ScrollSettings(scroll => { scroll.Width("100%"); }).FilterSettings(filter => { filter.FilterType(FilterType.Excel); })
            .ShowStackedHeader()
        .StackedHeaderRows(row =>
        {
            row.StackedHeaderColumns(column =>
            {
                column.HeaderText("Are there tools in place for tracking expiries?").Tooltip("Are there tools in place for tracking expiries?").Column(col =>
                {
                    col.Add("ARVs");
                    col.Add("Lab");
                    col.Add("Oppo");
                }).Add();
                column.HeaderText("Are there records of expired commodities?").Tooltip("Are there records of expired commodities?").Column(col =>
                {
                    col.Add("ARVs_1");
                    col.Add("Lab_1");
                    col.Add("Oppo_1");
                }).Add();

            }).Add();
        })
        .Columns(col =>

            {

                col.Field("facility_code").HeaderText("Facility code").IsPrimaryKey(true).TextAlign(TextAlign.Left).Width("100").AllowEditing().Add();

                col.Field("SAP_Code").HeaderText("SAP code").TextAlign(TextAlign.Left).Priority(4).Width("100").AllowEditing().Add();

                col.Field("District_Name").HeaderText("District").Width("100").AllowEditing().Add();

                col.Field("ImplimentingPartnerDescription").HeaderText("IP").TextAlign(TextAlign.Left).Priority(4).Width("100").AllowEditing().Add();

                col.Field("ComprehensiveImplimentingPartnerDescription").HeaderText("Comprehensive IP").TextAlign(TextAlign.Left).Width("100").AllowEditing().Add();

                col.Field("Level_desc").HeaderText("Level of care").TextAlign(TextAlign.Left).Priority(4).Width("100").AllowEditing().Add();

                col.Field("CDCRegion").HeaderText("CDC Region").Width("100").AllowEditing().Add();

                col.Field("date_of_visit").HeaderText("Date of visit").IsPrimaryKey(true).TextAlign(TextAlign.Left).Priority(4).Width(100).Format("{0:dd/MM/yyyy}").Add();

                col.Field("SCTO").HeaderText("SCTO").TextAlign(TextAlign.Left).Width("100").AllowEditing().Add();

                col.Field("Facility").HeaderText("Facility name").TextAlign(TextAlign.Left).Priority(4).Width("150").AllowEditing().Add();

                col.Field("ARVs").HeaderText("ARVs").Width("100").AllowFiltering(false).Add();

                col.Field("Lab").HeaderText("Laboratory Commodities").Width("250").AllowFiltering(false).Add();

                col.Field("Oppo").HeaderText("Opportunistic Infection Drugs").TextAlign(TextAlign.Left).Priority(4).Width("250").AllowFiltering(false).Add();

                col.Field("ARVs_1").HeaderText("ARVs").Width("100").AllowFiltering(false).Add();

                col.Field("Lab_1").HeaderText("Laboratory Commodities").Width("250").AllowFiltering(false).Add();

                col.Field("Oppo_1").HeaderText("Opportunistic Infection Drugs").TextAlign(TextAlign.Left).Priority(4).Width("250").AllowFiltering(false).Add();

                col.Field("Score").HeaderText("Score").TextAlign(TextAlign.Left).Priority(4).Width("100").AllowFiltering(false).Add();
                col.Field("Percentage").HeaderText("Percentage Score").TextAlign(TextAlign.Left).Priority(4).Width("100").AllowFiltering(false).Add();

            }).ClientSideEvents(evt => evt.ToolbarClick("OnToolbarClick2")))
    </div>);
    }).Render();}

<script>
    $(function () {
        $("#dp_start_date").ejDatePicker(
            {
                width: '240px',
                dateFormat: "dd/MM/yyyy"
            }
        );
        $("#dp_end_date").ejDatePicker(
            {
                width: '240px',
                dateFormat: "dd/MM/yyyy"
            }
        );
    });
    function OnToolbarClick(args) {
        if (args.itemName.indexOf("Export") > -1) {//if no selectedRecords, currenviewdata will be exported
            this.model["FefoUseData"] = JSON.stringify(this.model.dataSource, null, 2147483644);
        }
    }
    function OnToolbarClick1(args) {
        if (args.itemName.indexOf("Export") > -1) {//if no selectedRecords, currenviewdata will be exported
            this.model["ExpiryData"] = JSON.stringify(this.model.dataSource, null, 2147483644);
        }
    }
    function OnToolbarClick2(args) {
        if (args.itemName.indexOf("Export") > -1) {//if no selectedRecords, currenviewdata will be exported
            this.model["TrackingData"] = JSON.stringify(this.model.dataSource, null, 2147483644);
        }
    }
    function myfunc() {
        var dateobject = $("#dp_start_date").data("ejDatePicker");
        var StartDate = dateobject.getValue();
        var dateobject1 = $("#dp_end_date").data("ejDatePicker");
        var EndDate = dateobject1.getValue();
        $.ajax({
            url: "BindFefoUse",
            type: "Get",
            dataType: "json",
            data: {
                "startMonth": StartDate,
                "endMonth": EndDate
            },
            success: function (data) {
                var formatData = ej.parseJSON(data);
                var grid = $("#FefoGrid").ejGrid("instance");
                grid.dataSource(data);
                grid.dataSource(formatData);
            }
        });
        $.ajax({
            url: "BindExpiryPresence",
            type: "Get",
            dataType: "json",
            data: {
                "startMonth": StartDate,
                "endMonth": EndDate
            },
            success: function (data) {
                var formatData = ej.parseJSON(data);
                var grid = $("#PresenceGrid").ejGrid("instance");
                grid.dataSource(data);
                grid.dataSource(formatData);

            }
        });
        $.ajax({
            url: "BindTrackingTools",
            type: "Get",
            dataType: "json",
            data: {
                "startMonth": StartDate,
                "endMonth": EndDate
            },
            success: function (data) {
                var formatData = ej.parseJSON(data);
                var grid = $("#TrackingToolGrid").ejGrid("instance");
                grid.dataSource(data);
                grid.dataSource(formatData);
            }
        });
    }
</script>

