
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_LayoutHSIP.cshtml";
}
@section BreadCrumb{
    <div class="row">
        <div class="col-lg-12">
            <ol class="breadcrumb">
                <li>
                    @Html.ActionLink("Home", "IndexHSIP", "Home")
                </li>
                <li>
                    @Html.ActionLink("Allocation Index", "AllocationHSIPIndex", "LMIS_ART")
                </li>
                <li class="active">
                    <strong>ART: Allocations</strong>
                </li>
            </ol>
        </div>
    </div>

}
@using (Html.BeginForm())
{

@(Html.EJ().Grid<object>
        ("Grid")
        .Datasource(datasource => datasource.URL("GetAllocation?param_ot="+ViewBag.ot+ "&param_pc=" + ViewBag.pc).BatchURL("UpdateAllocationHSIP").Adaptor(AdaptorType.UrlAdaptor))
        .AllowPaging()
        .AllowTextWrap()
        .AllowGrouping()
        //.AllowScrolling()
        //   .ScrollSettings(col => { col.Width(550).Height(300).EnableVirtualization(true); })
        //.Query("ej.Query().addParams('param_sd'," + "'" + @Request.Params["start_date"] + "'" + ").addParams('param_ed'," + "'" + @Request.Params["end_date"] + "'" + ")")
        //.Query("ej.Query().addParams('param_sd','2015-04-01 00:00:00.000').addParams('param_ed','2015-05-31 00:00:00.000').addParams('param_pc','110001')")
        //.Query("ej.Query().addParams('param_sd'," + "'" + @Request.Params["start_date"] + "'" + ").addParams('param_ed'," + "'" + @Request.Params["end_date"] + "'" + ")")

        //.AllowScrolling()
        //.ScrollSettings(scroll =>
        //{
        //    scroll.AllowVirtualScrolling().Height(500).Width(0).
        //    VirtualScrollMode(VirtualScrollMode.Normal);
        //})
        .AllowKeyboardNavigation(true)
        .GroupSettings(group => { group.ShowGroupedColumn(true); })
        .TextWrapSettings(wrap => { wrap.WrapMode(WrapMode.Both); })
        .AllowScrolling(true)
        .AllowSorting(true)
        .EditSettings(edit => { edit.AllowAdding().AllowDeleting().AllowEditing().EditMode(EditMode.Batch); })
            .ToolbarSettings(toolbar =>
            {
                toolbar.ShowToolbar().ToolbarItems(items =>
                {
                    //items.AddTool(ToolBarItems.Add);
                    items.AddTool(ToolBarItems.Edit);
                    items.AddTool(ToolBarItems.Update);
                    items.AddTool(ToolBarItems.Cancel);
                });
            })
        .Columns(col =>
        {
            col.Field("OrderNumber").AllowEditing(false).HeaderText("Order No.").IsPrimaryKey(true).Width(200).Add();
            col.Field("StartDate").AllowEditing(false).Visible(false).HeaderText("Start of reporting period").Format("{0:dd/MM/yyyy}").Add();
            col.Field("EndDate").AllowEditing(false).Visible(false).HeaderText("End of reporting period").Format("{0:dd/MM/yyyy}").Add();
            col.Field("DrugCode").AllowEditing(false).Width(80).HeaderText("Product Code").IsPrimaryKey(true).Add();
            col.Field("FacilityCode").AllowEditing(false).Width(250).HeaderText("Facility").ForeignKeyField("FacilityCode").ForeignKeyValue("Facility").DataSource((IEnumerable<object>)ViewBag.FacilityDataSource).IsPrimaryKey(true).Width(200).Add();
            //col.Field("DatePrepared").AllowEditing(false).Width(80).HeaderText("DatePrepared").Format("{0:dd/MM/yyyy}").Add();
            col.Field("OpeningBalance").AllowEditing(false).HeaderText("Opening Balance").Width(80).Add();
            col.Field("QuantityRecieved").AllowEditing(false).HeaderText("Quantity Received").Width(80).Add();
            col.Field("ART_eMTCT_Consumption").AllowEditing(false).HeaderText("ART / eMTCT Consumption").Width(80).Add();
            col.Field("Losses_Adjustments").AllowEditing(false).HeaderText("Losses / Adjustments").Width(80).Add();
            col.Field("DaysOutOfStockDuring2Months").AllowEditing(false).HeaderText("Days Out Of Stock").Width(80).Add();
            col.Field("AdjustedAMC").AllowEditing(false).HeaderText("Adjusted AMC").Width(80).Add();
            col.Field("ClosingBalance").AllowEditing(false).HeaderText("Closing Balance").Width(80).Add();
            col.Field("Months_Stock_atHand").AllowEditing(false).HeaderText("Months Of Stock").Width(80).Add();
            col.Field("Quantity_Required_Current_Patients").AllowEditing(false).HeaderText("Quantity Required For Current Patients").Width(80).Add();
            col.Field("Quantity_Allocated").AllowEditing(true).HeaderText("Quantity Allocated").EditType(EditingType.NumericEdit).NumericEditOptions(new Syncfusion.JavaScript.Models.EditorProperties() { MinValue=0}).CssClass("customCSS").Width(80).Add();
            col.Field("Notes").AllowEditing(false).HeaderText("Notes").Width(200).Add();
            col.Field("RFSONotes").AllowEditing(true).HeaderText("SCTO Notes").Width(200).Add();

        })

)
}
<style>
    .customCSS.e-rowcell {
        background-color: #EFF5FB;
        /*font-family: 'Bell MT';
        font-style: italic;
        font-size: 20px;*/
        font: large bolder;
        font-weight: bolder;
        font-family: 'Times New Roman', Times, serif;
    }
</style>

 <style>
    .e-grid .e-groupdroparea, /*GroupDropArea */
    .e-grid .e-groupdroparea:hover, /*GroupDropArea Hover*/
    .e-grid .e-cloneproperties, /*Column header clone during dragging header*/
    .e-grid .e-groupheadercell:hover, /*HeaderCell in GroupDropArea*/
    .e-grid td.e-active, /*During Row Selected*/
    /*For pager items and their hover*/
    .e-pager .e-currentitem,
    .e-pager .e-currentitem:hover,
    .e-pager .e-link:hover,
    .e-pager .e-icon:hover {
        background-color: #ea1b8d;
    }

    .e-grid .e-gridheader /*For line that separates the grid header and content*/ {
        border-bottom-color: #ea1b8d;
    }

    .e-grid tr.e-hover /*For row hover*/ {
        background-color: #e66aae;
        color: #FFFFFF;
    }

    .e-grid .e-alt_row /*For Alternate row color*/ {
        background-color: #E5E4E2; /*#99CFE3;*/
    }
</style>

<style>
    .e-grid .e-dialog .gridform .e-rowcell {
        padding: .5em;
        border-bottom: 1px solid #c8c8c8;
        border-left: 1px solid #c8c8c8;
    }
</style>
<style>
    .panel-default > .panel-heading {
        background-color: #451bb1 /*#3e1111*/;
        color: white;
        /*background-color:silver;*/
        /*color: white;*/
    }
</style>

<style type="text/css" class="cssStyles">
    .control {
        margin-left: 30px;
    }

    .ctrllabel {
        padding-top: 15px;
    }

    .control {
        margin-left: 20px;
    }

    .frame {
        height: 250px;
        width: 1000px;
    }

    .frame1 {
        height: 240px;
        width: 900px;
    }

    .txt {
        display: block;
        margin-bottom: 12px;
    }
</style>

<style>
    #lblComplaintTitle {
        /*font-size: 24px;*/
        background-color: white;
        color: #c9252b;
        vertical-align: top;
        /*width: 700px;*/
    }

    .redLabels {
        /*font-size: 24px;*/
        background-color: white;
        color: #ff0000;
        vertical-align: top;
        font-weight: bold;
        /*width: 700px;*/
    }

    .myDiv {
        font-size: 18px;
        background-color: white;
        color: orangered;
        vertical-align: top;
        text-align: center;
        /*width: 700px;*/
    }
</style>

<style>
    .e-grid .e-dialog .gridform .e-rowcell {
        padding: .5em;
    }

    .custom.e-js .e-header {
        background: #c9252b;
    }

    .custom.e-js .e-content {
        background: #ddd;
    }

    .custom .e-rbn-button.e-btn.e-select {
        background: #f5f5f5;
        color: #333;
    }

    .tabstyle {
        background: #F9F9F9;
        border-radius: 10px;
        border: 1px solid #99CFE3;
        display: block;
    }

    .longcolumns {
        width: 600px !important;
        margin: 0 auto !important;
        position: relative !important;
        border-right: 5px #666 outset !important;
        border-left: 5px #666 outset !important;
    }
</style>