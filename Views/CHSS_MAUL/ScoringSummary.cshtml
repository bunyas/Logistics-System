
@{
    ViewBag.Title = "ScoringSummary";
    Layout = "~/Views/Shared/_LayoutHSIP.cshtml";
}

<!-- Breadcrumbs-->
<ol class="breadcrumb" style="margin-top:30px;">
    <li class="breadcrumb-item">
        <a href="#">Dashboard</a>
    </li>
    <li class="breadcrumb-item active">Scoring summary</li>
</ol>
<div class="panel panel-default">
    <div class="panel-heading">
        <div class="row">

            <div class="col-md-1"><h6>From:</h6></div>
            <div class="col-md-3">
                <input type="text" id="dp_start_date" name="dp_start_date" class=" e-field e-ejinputtext valid" style="width:100%" />
            </div>
            <div class="col-md-1"><h6 style="float:right;">TO:</h6></div>
            <div class="col-md-3">
                <input type="text" id="dp_end_date" name="dp_end_date" class=" e-field e-ejinputtext valid" style="width:100%" />
            </div>
            <div class="col-md-2">
                <input id="LoadDatabtn" class="btn btn-sm btn-primary" type="button" value="Load Records" onclick="myfunc()" />
            </div>
        </div>
    </div>
</div>
<div class="panel panel-default">
    <div class="panel-body">
    @(Html.EJ().Grid<object>("ScoringGrid")
            .Datasource((IEnumerable<object>)ViewBag.ScoreSum)
            .ShowColumnChooser()
             .ToolbarSettings(toolBar => toolBar.ShowToolbar().ToolbarItems(items =>
             {
                 items.AddTool(ToolBarItems.ExcelExport);
             }))
     .AllowSorting() .AllowFiltering().ShowColumnChooser().AllowGrouping().AllowTextWrap().AllowPaging().PageSettings(page => page.PageSize(20)).IsResponsive().AllowResizeToFit()
        .AllowScrolling().ScrollSettings(scroll => { scroll.Width("100%"); }).FilterSettings(filter => { filter.FilterType(FilterType.Excel); })
         .ShowStackedHeader()
        .StackedHeaderRows(row =>
        {
            row.StackedHeaderColumns(column =>
            {
                column.HeaderText("ART Patient Care and Management (4)").Tooltip("ART Patient Care and Management (4)").Column(col =>
                {
                    col.Add("ART_Availability");
                    col.Add("ART_DispensingLog");
                    col.Add("ART_Register");
                    col.Add("ART_Treatment");
                    col.Add("ART_Total");
                    col.Add("ART_Spars_Total");
                }).Add();
                column.HeaderText("Stock Management (6)").Tooltip("Stock Management (6)").Column(col =>
                {
                    col.Add("Stock_Card");
                    col.Add("Physical_Count");
                    col.Add("Stock_Card_Fill");
                    col.Add("Updating_Stock_Card");
                    col.Add("Stock_Book_Use");
                    col.Add("AMC");
                    col.Add("Stock_Total");
                    col.Add("Stock_Spars_Total");
                }).Add();
                column.HeaderText("Traceability of commodities at the facility (4)").Tooltip("Traceability of commodities at the facility (4)").Column(col =>
                {
                    col.Add("Requisition_System");
                    col.Add("Supplier");
                    col.Add("Facility_Store");
                    col.Add("Issued_to_Patients");
                    col.Add("Traceability_Total");
                    col.Add("Traceability_Spars_Total");
                }).Add();
                column.HeaderText("ART Ordering and reporting quality (4)").Tooltip("ART Ordering and reporting quality (4)").Column(col =>
                {
                    col.Add("Report_Availability");
                    col.Add("Order_Accuracy");
                    col.Add("Patient_report");
                    col.Add("Test_Kits");
                    col.Add("Order_Total");
                    col.Add("Order_Spars_Total");
                }).Add();
                column.HeaderText("Stores Management (4)").Tooltip("Stores Management (4)").Column(col =>
                {
                    col.Add("Cleanliness");
                    col.Add("Storage_System");
                    col.Add("Storage_Condition");
                    col.Add("Storage_Practice");
                    col.Add("Store_Total");
                    col.Add("Store_Spars_Total");
                }).Add();
                column.HeaderText("Expiry Tracking (3)").Tooltip("Expiry Tracking (3)").Column(col =>
                {
                    col.Add("FEFO_Use");
                    col.Add("Expiry_Presence");
                    col.Add("Tacking_tools");
                    col.Add("Expiry_Total");
                    col.Add("Expiry_Spars_Total");
                }).Add();

            }).Add();
        })
        .Columns(col =>

        {
            col.Field("facility_code").HeaderText("Facility code").IsPrimaryKey(true).TextAlign(TextAlign.Left).Width("100").AllowEditing().Add();

            col.Field("SAP_Code").HeaderText("SAP code").TextAlign(TextAlign.Left).Priority(4).Width("100").AllowEditing().Add();

            col.Field("District_Name").HeaderText("District").Width("100").AllowEditing().Add();

            col.Field("ImplimentingPartnerDescription").HeaderText("IP").TextAlign(TextAlign.Left).Priority(4).Width("100").AllowEditing().Add();

            col.Field("ComprehensiveImplimentingPartnerDescription").HeaderText("Comprehensive IP").TextAlign(TextAlign.Left).Width("100").AllowEditing().Add();

            col.Field("Level_desc").HeaderText("Level of care").TextAlign(TextAlign.Left).Priority(4).Width("100").AllowEditing().Add();

            col.Field("CDCRegion").HeaderText("CDC Region").Width("100").AllowEditing().Add();

            col.Field("date_of_visit").HeaderText("Date of visit").IsPrimaryKey(true).TextAlign(TextAlign.Left).Priority(4).Width(100).Format("{0:dd/MM/yyyy}").Add();

            col.Field("SCTO").HeaderText("SCTO").TextAlign(TextAlign.Left).Width("100").AllowEditing().Add();

            col.Field("Facility").HeaderText("Facility name").TextAlign(TextAlign.Left).Priority(4).Width("150").AllowEditing().Add();

            col.Field("ART_Availability").HeaderText("Availability of required tools and reference materials at the health facility").Width("150").AllowFiltering(false).Add();

            col.Field("ART_DispensingLog").HeaderText("Correct filling of ART/EMTCT Dispensing Log").Width("150").AllowFiltering(false).Add();

            col.Field("ART_Register").HeaderText("Correct filling of ART register").TextAlign(TextAlign.Left).Priority(4).Width("150").AllowFiltering(false).Add();

            col.Field("ART_Treatment").HeaderText("Adherence to ART treatment guidelines – ART initiation").Width("150").AllowFiltering(false).Add();

            col.Field("ART_Total").HeaderText("ART Patient TOTAL").Width("100").AllowFiltering(false).Add();

            col.Field("ART_Spars_Total").HeaderText("ART Patient Spider Graph Score").Width("100").AllowFiltering(false).Add();

            col.Field("Stock_Card").HeaderText("Stock card availability").Width("150").AllowFiltering(false).Add();

            col.Field("Physical_Count").HeaderText("Physical count carried out for last 3months").Width("150").AllowFiltering(false).Add();

            col.Field("Stock_Card_Fill").HeaderText("Correct filing of stock card").TextAlign(TextAlign.Left).Priority(4).Width("150").AllowFiltering(false).Add();

            col.Field("Updating_Stock_Card").HeaderText("Updating of stock cards").Width("150").AllowFiltering(false).Add();

            col.Field("Stock_Book_Use").HeaderText("Correct use of stock book").Width("150").AllowFiltering(false).Add();

            col.Field("AMC").HeaderText("Accuracy of AMC").Width("150").AllowFiltering(false).Add();

            col.Field("Stock_Total").HeaderText("STOCK TOTAL").Width("100").AllowFiltering(false).Add();

            col.Field("Stock_Spars_Total").HeaderText("STOCK Spider Graph Score").Width("100").AllowFiltering(false).Add();

            col.Field("Requisition_System").HeaderText("System of requisitioning of ART items from the store to the dispensary.").TextAlign(TextAlign.Left).Priority(4).Width("150").AllowFiltering(false).Add();

            col.Field("Supplier").HeaderText("Traceability of commodities from supplier/warehouse to facility store").Width("150").AllowFiltering(false).Add();

            col.Field("Facility_Store").HeaderText("Traceability of commodities facility store to ART dispensing unit").Width("150").AllowFiltering(false).Add();

            col.Field("Issued_to_Patients").HeaderText("Traceability of commodities issued to patients").Width("150").AllowFiltering(false).Add();

            col.Field("Traceability_Total").HeaderText("Traceability TOTAL").Width("100").AllowFiltering(false).Add();

            col.Field("Traceability_Spars_Total").HeaderText("Traceability Spider Graph Score").Width("100").AllowFiltering(false).Add();

            col.Field("Report_Availability").HeaderText("Availability of ARV Order/Report and submission method").TextAlign(TextAlign.Left).Priority(4).Width("150").AllowFiltering(false).Add();

            col.Field("Order_Accuracy").HeaderText("Accuracy of ART and E-MTCT Medicines Order ").Width("150").AllowFiltering(false).Add();

            col.Field("Patient_report").HeaderText("Accuracy of Patient Report").Width("150").AllowFiltering(false).Add();

            col.Field("Test_Kits").HeaderText("Accuracy of HIV test kits order").Width("150").AllowFiltering(false).Add();

            col.Field("Order_Total").HeaderText("Ordering TOTAL").Width("100").AllowFiltering(false).Add();

            col.Field("Order_Spars_Total").HeaderText("Ordering Spider Graph Score").Width("100").AllowFiltering(false).Add();

            col.Field("Cleanliness").HeaderText("Cleanliness of the Pharmacy, store and Laboratory").Width("100").AllowFiltering(false).Add();

            col.Field("Storage_System").HeaderText("System for storage of medicines and health Supplies").TextAlign(TextAlign.Left).Priority(4).Width("150").AllowFiltering(false).Add();

            col.Field("Storage_Condition").HeaderText("Storage conditions").Width("150").AllowFiltering(false).Add();

            col.Field("Storage_Practice").HeaderText("Storage Practices of medicines").Width("150").AllowFiltering(false).Add();

            col.Field("Store_Total").HeaderText("Storage Total").Width("100").AllowFiltering(false).Add();

            col.Field("Store_Spars_Total").HeaderText("Storage Spider Graph Score").Width("100").AllowFiltering(false).Add();

            col.Field("FEFO_Use").HeaderText("Use of FEFO").TextAlign(TextAlign.Left).Priority(4).Width("150").AllowFiltering(false).Add();

            col.Field("Expiry_Presence").HeaderText("Persence of Expires").Width("150").AllowFiltering(false).Add();

            col.Field("Tacking_tools").HeaderText("Tools for tracking Expiries").Width("150").AllowFiltering(false).Add();

            col.Field("Expiry_Total").HeaderText("Expiry Total").Width("100").AllowFiltering(false).Add();

            col.Field("Expiry_Spars_Total").HeaderText("Expiry Spider Graph Score").Width("100").AllowFiltering(false).Add();

            col.Field("Final_Total").HeaderText("ART SPARS Total Score").Width("150").AllowFiltering(false).Add();

            col.Field("Final_Spars_Total").HeaderText("SPARS+ Total Score").Width("100").AllowFiltering(false).Add();

            col.Field("Score").HeaderText("ART SPARS Percentage Score").Width("100").AllowFiltering(false).Add();

            col.Field("Spars_Score").HeaderText("SPARS+ Percentage Score").Width("100").AllowFiltering(false).Add();

        }).ClientSideEvents(evt => evt.ToolbarClick("OnToolbarClick")))
    </div>
</div>

<script>
    $(function () {
        $("#dp_start_date").ejDatePicker(
            {
                width: '240px',
                dateFormat: "dd/MM/yyyy"
            }
        );
        $("#dp_end_date").ejDatePicker(
            {
                width: '240px',
                dateFormat: "dd/MM/yyyy"
            }
        );
    });
    function OnToolbarClick(args) {
        if (args.itemName.indexOf("Export") > -1) {//if no selectedRecords, currenviewdata will be exported
            this.model["ScoringData"] = JSON.stringify(this.model.dataSource, null, 2147483644);
        }
    }
    function myfunc() {
        var dateobject = $("#dp_start_date").data("ejDatePicker");
        var StartDate = dateobject.getValue();
        var dateobject1 = $("#dp_end_date").data("ejDatePicker");
        var EndDate = dateobject1.getValue();
        $.ajax({
            url: "BindScores",
            type: "Get",
            dataType: "json",
            data: {
                "startMonth": StartDate,
                "endMonth": EndDate
            },
            success: function (data) {
                var formatData = ej.parseJSON(data);
                var grid = $("#ScoringGrid").ejGrid("instance");
                grid.dataSource(data);
                grid.dataSource(formatData);
            }
        });
    }
</script>

