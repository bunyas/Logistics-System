
@{
    ViewBag.Title = "Query";
    Layout = "~/Views/Shared/_LayoutMAULT.cshtml";
}
@section BreadCrumb{
    <div class="row">
        <div class="col-lg-12">
            <ol class="breadcrumb">
                <li>
                    @Html.ActionLink("Home", "IndexMAULT", "Home")
                </li>
                <li class="active">
                    <strong>HIV Testkits: Query</strong>
                </li>
            </ol>
        </div>
    </div>

}
@using (Html.BeginForm("Query", "LMIS_HIVTestKits", FormMethod.Post))
{
    <div class="row">

        <div class="col-lg-3">
            <p>Start Of Reporting Period</p>
            <p><input type="text" id="dp_start_date" name="dp_start_date" class="e-field e-ejinputtext valid" /></p>
        </div>
        <div class="col-lg-3">
            <p>End Of Reporting Period</p>
            <p><input type="text" id="dp_end_date" name="dp_end_date" class="e-field e-ejinputtext valid" /></p>
        </div>
        <div class="col-lg-3">
            <br />
            @Html.EJ().Button("Load").Type(ButtonType.Submit).Size(ButtonSize.Large).Text("Load")
        </div>
    </div>

}<br />
@(Html.EJ().Grid<object>
        ("Grid")
        .Datasource(datasource => datasource.URL("DataSourceGetAll").Adaptor(AdaptorType.UrlAdaptor))
        .AllowPaging()
         .AllowFiltering().ShowColumnChooser()
        .AllowTextWrap()
        .AllowGrouping()
        .ShowColumnChooser()
        .AllowScrolling()
        //.ScrollSettings(scroll =>
        //{
        //    scroll.AllowVirtualScrolling().Height(500).Width(0).
        //    VirtualScrollMode(VirtualScrollMode.Normal);
        //})
        .AllowKeyboardNavigation(true)
        .GroupSettings(group => { group.ShowGroupedColumn(true); })
        .TextWrapSettings(wrap => { wrap.WrapMode(WrapMode.Both); })
        .FilterSettings(filter => { filter.FilterType(FilterType.Excel); })
        .AllowSearching().SearchSettings(search =>
        {
            search.Fields(fields =>
            {
                //fields.Add("Outcome");
                //fields.Add("Output");
                //fields.Add("Indicator");
                //fields.Add("Indicator_2");
                //fields.Add("PerformanceTargetNotes");
                //fields.Add("ExplanatoryNotes");
            });
            search.Operator(Operator.Contains);
            search.IgnoreCase(true);
        })
        .EditSettings(edit => { edit.AllowAdding().AllowDeleting().AllowEditing().EditMode(EditMode.DialogTemplate).DialogEditorTemplateID("#template"); })
            .ToolbarSettings(toolbar =>
            {
                toolbar.ShowToolbar().ToolbarItems(items =>
                {
                    items.AddTool(ToolBarItems.Add);
                    items.AddTool(ToolBarItems.Edit);
                    items.AddTool(ToolBarItems.Update);
                    items.AddTool(ToolBarItems.Cancel);
                    items.AddTool(ToolBarItems.Search);
                });
            })
        .Columns(col =>
        {
            col.Field("DeliveryZoneCode").HeaderText("Sector").Width("80px").Add();
            col.Field("ImplimentingPartnerCode").HeaderText("IP").ForeignKeyField("ImplementingPartnerCode").ForeignKeyValue("ImplementingPartnerDescription").DataSource((IEnumerable<object>)ViewBag.IPDataSource).Width("150px").Add();
            col.Field("DistrrictCode").HeaderText("District").ForeignKeyField("ID").ForeignKeyValue("DESC").DataSource((IEnumerable<object>)ViewBag.DistrictDataSource).Width("100px").Add();
            col.Field("SAP_Code").HeaderText("SAP Code").Width("80px").Add();
            col.Field("FacilityCode").HeaderText("Facility Code").Width("80px").Add();
            col.Field("FacilityCode").HeaderText("Facility").ForeignKeyField("ID").ForeignKeyValue("DESC").DataSource((IEnumerable<object>)ViewBag.FacilityDataSource).Width("250px").Add();
            col.Field("SupportedByMAUL").HeaderText("Supported By MAUL").Width("80px").Add();
            col.Field("IsAccredited").HeaderText("Accredited").Width("80px").Add();
            col.Field("level_of_care").HeaderText("LoC").ForeignKeyField("level_of_care_code").ForeignKeyValue("level_of_care").DataSource((IEnumerable<object>)ViewBag.LoCDataSource).Width("80px").Add();
            col.Field("StartDate").HeaderText("Start Date").Width("80px").Format("{0:dd/MM/yyyy}").Add();
            col.Field("EndDate").HeaderText("End Date").Width("80px").Format("{0:dd/MM/yyyy}").Add();
            col.Field("DatePrepared").HeaderText("Date Prepared").Width("80px").Format("{0:dd/MM/yyyy}").Add();
            col.Field("product_code").HeaderText("Product Code").Width("80px").Add();
            col.Field("Product_SAP_Code").HeaderText("Product SAP Code").Width("80px").Add();
            col.Field("product_description").HeaderText("Product").Width("300px").Add();
            col.Field("strength").HeaderText("Strength").Width("80px").Add();
            col.Field("packsize").HeaderText("Packsize").Width("80px").Add();
            col.Field("carton_size_pkt").HeaderText("Carton Size (ptk)").Width("80px").Add();
            col.Field("carton_weight_kg").HeaderText("Carton Weight (kg)").Width("80px").Add();
            col.Field("Basic_Unit").HeaderText("Basic Unit").Width("80px").Add();
            col.Field("approved_MOH_NTG").HeaderText("Approved MOH NTG").Width("80px").Add();
            col.Field("approved_WHO").HeaderText("Approved WHO").Width("80px").Add();
            col.Field("approved_FDA").HeaderText("Approved FDA").Width("80px").Add();
            col.Field("nda_registration").Width("80px").HeaderText("NDA Registration").Add();

            col.Field("No_Test_Start_2Months").Width("80px").HeaderText("NDA Registration").Add();
            col.Field("Test_Recieved_2Months").Width("80px").HeaderText("NDA Registration").Add();
            col.Field("Test_Used_2Months").Width("80px").HeaderText("NDA Registration").Add();
            col.Field("Loss_Adjustment").Width("80px").HeaderText("NDA Registration").Add();
            col.Field("Test_Remaining").Width("80px").HeaderText("NDA Registration").Add();
            col.Field("Maximum_Stock").Width("80px").HeaderText("NDA Registration").Add();
            col.Field("Qunatity_On_Order").Width("80px").HeaderText("NDA Registration").Add();
            col.Field("Quantity_Required").Width("80px").HeaderText("NDA Registration").Add();
            col.Field("Quantity_To_Ship").Width("80px").HeaderText("NDA Registration").Add();
            col.Field("Quantity_Allocated").Width("80px").HeaderText("NDA Registration").Add();
            col.Field("EditedBy").HeaderText("Edited By").Width("80px").Add();
            col.Field("EditedDate").HeaderText("Edited Date").Width("80px").Format("{0:dd/MM/yyyy}").Add();
            col.Field("FinalSubmission").HeaderText("Final Submission").Width("80px").Add();
            col.Field("Facility_UserName").HeaderText("Facility UserName").Width("80px").Add();
            col.Field("RFSO_SentBackTofacility").HeaderText("RFSO Sent Back To Facility").Width("80px").Add();
            col.Field("RFSO_SentBackBy").HeaderText("RFSO Sent Back By").Width("80px").Add();
            col.Field("RFSO_SentBackDate").HeaderText("RFSO Sent Back Date").Width("80px").Add();
            col.Field("RFSO_ApproveOrder").HeaderText("RFSO Approve Order").Width("80px").Add();
            col.Field("RFSO_ApprovedBy").HeaderText("RFSO Approved By").Width("80px").Add();
            col.Field("RFSO_DateOfApproval").HeaderText("RFSO Date Of Approval").Width("80px").Add();
        })
        .ClientSideEvents(eve => { eve.ActionComplete("complete"); })
)

<script>
    $(function () {
        $("#dp_start_date").ejDatePicker(
            {
                width: '240px',
                dateFormat: "dd/MM/yyyy"}
        );
        $("#dp_end_date").ejDatePicker(
            {
                width: '240px',
                dateFormat: "dd/MM/yyyy"}
        );
    });
</script>