
@{
    ViewBag.Title = "CCU";
    if (User.IsInRole("MonitoringAndEvaluationOfficer"))
    {
        Layout = "~/Views/Shared/_LayoutHSIP.cshtml";
    }
    else if (User.IsInRole("CCU"))
    {
        Layout = "~/Views/Shared/_LayoutCCU.cshtml";
    }
    else if(User.IsInRole("SCTO"))
    {
        Layout = "~/Views/Shared/_LayoutRFSO.cshtml";
    }
    else if (User.IsInRole("ComplaintHandling"))
    {
        Layout = "~/Views/Shared/_LayoutComplaintHandling.cshtml";
    }
    
}
@using Syncfusion.JavaScript
@using Syncfusion.MVC.EJ
<script type="text/x-jsrender" id="columnTemplate">
    <img style="width: 75px; height: 70px" src="../content/images/grid/Employees/{{:EmployeeID}}.png" alt="{{:EmployeeID }}" />
</script>
<script id="tempx" type="text/x-template">
    <a rel='nofollow' href=" DownloadFile?fileNamePath={{:Required_Evidence}}">{{:Required_Evidence}}</a>
</script>


<script id="FileURLtemplate" type="text/x-template">
    <a rel='nofollow' href=" DownloadFile?fileNamePath={{:FileURL}}">{{:Details}}</a>
</script>
<script>
    window.batchno = '';
    window.productcode = '';
    window.regcode = '';
    window.product_comp_code = '';
    window.Complaint_No = '';
    window.Quarantine = 0;
    window.DetailedQuarantine = 0;
</script>




<script type="text/x-jsrender" id="columnTemplate">
    <img style="width: 75px; height: 70px" src="../content/images/grid/Employees/{{:EmployeeID}}.png" alt="{{: EmployeeID }}" />
</script>
<h2>Complaint Handling</h2>

<div id="ControlRegion">
    @(Html.EJ().Dialog("ErrorList").Title("Exception Thrown").ShowOnInit(false))
    @(Html.EJ().Dialog("SuccessDial").Title("Record Saved").ShowFooter(true).FooterTemplateId("sample").ShowOnInit(false))
    @(Html.EJ().Dialog("CancelDial").Title("Record Not Saved").ShowFooter(true).FooterTemplateId("cancelfooter").ShowOnInit(false))


    @(Html.EJ().Grid<object>("Grid").AllowRowDragAndDrop()
          .Datasource(datasource => datasource.URL("GetComplaints").RemoveURL("ComplaintDialogDelete").Adaptor(AdaptorType.UrlAdaptor))
        .EnableAltRow()
        .EditSettings(edit => { edit.AllowAdding(false).AllowDeleting().AllowEditing().EditMode(EditMode.DialogTemplate).DialogEditorTemplateID("#template"); })
        .AllowPaging()
        .AllowFiltering()
        // .AllowTextWrap()
        // .AllowGrouping()
        .SelectionType(SelectionType.Multiple)
        .AllowScrolling()
        .IsResponsive(true)
        .AllowKeyboardNavigation(true)
        .GroupSettings(group => { group.ShowGroupedColumn(true); })
        .TextWrapSettings(wrap => { wrap.WrapMode(WrapMode.Both); })
        .FilterSettings(filter => { filter.FilterType(FilterType.Excel); })
        .AllowSearching().SearchSettings(search =>
        {
            search.Fields(fields =>
            {

            });
            search.Operator(Operator.Contains);
            search.IgnoreCase(true);
        })
        .ToolbarSettings(toolbar =>
        {
            toolbar.ShowToolbar().ToolbarItems(items =>
            {
                //items.AddTool(ToolBarItems.Add);
                items.AddTool(ToolBarItems.Edit);
                items.AddTool(ToolBarItems.Delete);
                items.AddTool(ToolBarItems.Update);
                items.AddTool(ToolBarItems.Cancel);
                items.AddTool(ToolBarItems.Search);
                //items.AddTool(ToolBarItems.ExcelExport);
                //items.AddTool(ToolBarItems.WordExport);
                //items.AddTool(ToolBarItems.PdfExport);
            });
        })
        .Columns(col =>
        {

            col.Field("e_reg_complaint_code").HeaderText("e_reg_complaint_code").IsPrimaryKey(true).Visible(false).TextAlign(TextAlign.Right).Width(70).Add();
            col.Field("e_reg_complaint_No").HeaderText("Complaint Number").IsPrimaryKey(false).Visible(true).TextAlign(TextAlign.Justify).Width(70).Add();
            col.Field("e_reg_date_recieved").Type("date").HeaderText("Date Recieved").Format("{0:dd/MMM/yyyy}").Width(70).Add();
            //col.Field("e_reg_date_complaint").Type("date").HeaderText("Date Complaint").Format("{0:dd/MMM/yyyy}").Width(100).Add();

            col.Field("e_reg_complaint_details").HeaderText("Complaint Details").ClipMode(ClipMode.EllipsisWithTooltip).Width(400).Add();
            col.Field("e_reg_complaint_category").HeaderText("Complaint Category").ForeignKeyField("complaint_category_code").ForeignKeyValue("complaint_category_desc").DataSource((IEnumerable<object>)ViewBag.e_reg_complaint_category).Width(100).Add();

            // col.Field("e_reg_date_resolved").Type("date").HeaderText("Date Resolved").Format("{0:dd/MMM/yyyy}").Width(100).Add();
            // col.Field("e_reg_contact_person_id").HeaderText("Contact Person").Width(200).Add();
            // col.Field("e_reg_complaint_accuteness").HeaderText("e_reg_complaint_accuteness").Width(200).Add();
            //col.Field("ActionTaken").HeaderText("Action Taken").IsPrimaryKey(false).Visible(true).TextAlign(TextAlign.Right).Width(100).Add();
            //col.Field("Feedback").HeaderText("Feedback").IsPrimaryKey(false).Visible(true).TextAlign(TextAlign.Right).Width(100).Add();
            //col.Field("Feedback_Communicated").HeaderText("Feedback_Communicated").IsPrimaryKey(false).Visible(true).TextAlign(TextAlign.Right).Width(100).Add();

        })
    .ClientSideEvents(evt => evt.ActionBegin("onActionBegin").ActionComplete("edit").ActionFailure("failure"))
    )

</div>
<script id="sample" type="text/x-jsrender">
    <div class="footerspan" style="float:right">

        @Html.EJ().Button("btn1").Size(ButtonSize.Medium).Height("30").Width("70").Text("Ok")

        @*@Html.EJ().Button("btn2").Size(ButtonSize.Mini).Height("30").Width("70").Text("Cancel")*@

    </div>
    @*<div class="condition" style="float:left; margin-left:15px">
            @Html.EJ().CheckBox("check1").Text("Don't ask me this again")
        </div>*@
</script>
<script id="cancelfooter" type="text/x-jsrender">
    <div class="footerspan" style="float:right">
        @Html.EJ().Button("btnOK").Size(ButtonSize.Medium).Height("30").Width("70").Text("Ok")
        @Html.EJ().Button("btnCancel").Size(ButtonSize.Mini).Height("30").Width("70").Text("Cancel")

    </div>
    <div class="condition" style="float:left; margin-left:15px">
        @Html.EJ().CheckBox("check1").Text("Don't ask me this again")
    </div>
</script>

<script>


    function CheckButtom(agrs) {

        // Create grid object.
        var gridObj = $("#Grid").data("ejGrid");
        // Gets the selected row element list
        var records = gridObj.getSelectedRows();

        if (records.length) {
            for (var i = 0; i < records.length; i++) {
                var cat = gridObj.getSelectedRecords()[i].e_reg_complaint_category;
                var code = gridObj.getSelectedRecords()[i].e_reg_complaint_code;
                var details = gridObj.getSelectedRecords()[i].e_reg_complaint_details;
                //alert(code + ' - ' + code + ' - ' + details);
            }
        }

    }

</script>
<script type="text/template" id="template" @*style="width: 100%"*@>
    @*<b>Complaints</b>*@

    <div id="defaultTab" style="width: 100%;">


        <div id="tab1">

            <div class="panel-group" id="accordion">
                <div class="panel panel-default" id="complaintHeader">
                    <div class="panel-heading">
                        <h2 class="panel-title">
                            <a data-toggle="collapse" data-parent="#accordion" href="#collapse1">
                                Complaint Header
                            </a>
                        </h2>
                    </div>
                    <div id="collapse1" class="panel-collapse collapse in">
                        <div>
                            <table @*id="table2" border="1" cellpadding="3" cellspacing="0" border-collapse="none"*@>

                                <tr>
                                    <td style="text-align:left;" @*hidden="hidden"*@>Complaint Number</td>
                                    <td style="text-align: left" hidden="hidden"> <input type="text" id="e_reg_complaint_code" name="e_reg_complaint_code" value="{{:e_reg_complaint_code}}" class="e-field e-ejinputtext valid" hidden="hidden" /> </td>
                                    <td style="text-align: left" @*hidden="hidden"*@> <input type="text" id="e_reg_complaint_No" readonly="readonly" name="e_reg_complaint_No" value="{{:e_reg_complaint_No}}" class="e-field e-ejinputtext valid" @*hidden="hidden"*@ /> </td>
                                    <td style="text-align: left;" id="ReceiivedDate">Date of Submission</td>
                                    <td style="text-align: left" id="ReceiivedDate1"> <input type="text" id="e_reg_date_recieved" name="e_reg_date_recieved" value="{{:e_reg_date_recieved}}" class="e-field e-ejinputtext valid" /></td>

                                </tr>
                                <tr>

                                    <td style="text-align: left;">Complaint category</td>
                                    <td style="text-align: left"> <input type="text" id="e_reg_complaint_category" name="e_reg_complaint_category" value="{{:e_reg_complaint_category}}" class="e-field e-ejinputtext valid" /> </td>

                                    <td style="text-align: left;">Affected Sites</td>
                                    <td style="text-align: left"> <input @*type="text"*@ id="AffectedSites" name="AffectedSites" value="{{:AffectedSites}}" /> </td>

                                </tr>
                                <tr hidden="hidden">
                                    <td style="text-align: left;">District</td>
                                    <td style="text-align: left"> <input type="text" id="ComplainantDistrict" name="ComplainantDistrict" value="{{:ComplainantDistrict}}" class="e-field e-ejinputtext valid " /> </td>
                                    <td style="text-align: left;">IP</td>
                                    <td style="text-align: left"> <input type="text" id="IP" name="IP" value="{{:IP}}" class="e-field e-ejinputtext valid" /> </td>

                                </tr>
                                <tr>
                                    <td class="redLabels">Issue/ Complaint Details</td>
                                    <td colspan="3" style="text-align: left">
                                        <textarea id="e_reg_complaint_details" name="e_reg_complaint_details" class="form-control" value="{{: e_reg_complaint_details}}" cols="95" rows="5" style="max-width:100%">{{: e_reg_complaint_details}}</textarea>
                                    </td>
                                </tr>

                                <tr>
                                    <td style="text-align: left;">Product Category</td>
                                    <td style="text-align: left"> <input type="text" id="e_reg_product_category" name="e_reg_product_category" value="{{:e_reg_product_category}}" class="e-field e-ejinputtext valid" /> </td>
                                    <td style="text-align: left;" id="Mode1">Mode of Communcation</td>
                                    <td style="text-align: left" id="Mode2"> <input type="text" id="e_reg_communication_mode" name="e_reg_communication_mode" value="{{:e_reg_communication_mode}}" class="e-field e-ejinputtext valid" /> </td>
                                </tr>

                                <tr>
                                    <td style="text-align: left;" id="ResponsibleStaff">MAUL Responsible Staff</td>
                                    <td style="text-align: left" id="ResponsibleStaff1"> <input type="text" id="e_reg_MAUL_Staff" name="e_reg_MAUL_Staff" value="{{:e_reg_MAUL_Staff}}" class="e-field e-ejinputtext valid" /> </td>

                                </tr>

                                <tr>
                                    <td style="text-align: left;" id="ExpectedDate1">Expected Date of Resolution</td>
                                    <td style="text-align: left" id="ExpectedDate2"> <input type="text" id="e_reg_expected_date_resolution" name="e_reg_expected_date_resolution" value="{{:e_reg_expected_date_resolution}}" class="e-field e-ejinputtext valid" /> </td>
                                    <td class="redLabels" id="Resolved1">Date Resolved</td>
                                    <td style="text-align: left" id="Resolved2"> <input type="text" id="e_reg_date_resolved" name="e_reg_date_resolved" value="{{:e_reg_date_resolved}}" class="e-field e-ejinputtext valid " /> </td>
                                </tr>

                            </table>




                        </div>
                    </div>
                </div>

                <div class="panel panel-default" id="complainantDetails">
                    <div class="panel-heading">
                        <h4 class="panel-title ">
                            <a data-toggle="collapse" data-parent="#accordion" href="#collapse2">
                                Complainant's Details
                            </a>
                        </h4>
                    </div>
                    <div id="collapse2">
                        <div>

                            <table>

                                <tr>
                                    <td style="text-align: left;">Category</td>
                                    <td style="text-align: left"> <input type="text" id="ComplainantCategory" name="ComplainantCategory" value="{{:ComplainantCategory}}" class="e-field e-ejinputtext valid" /> </td>

                                </tr>
                                <tr>
                                    <td style="text-align: left;">Name</td>
                                    <td style="text-align: left">
                                        <input id="ComplainantName" name="ComplainantName" value="{{: ComplainantName}}" @*class="e-field e-ejinputtext valid"*@ style="text-align: right; width: 175px; height: 28px" />
                                    </td>
                                    <td style="text-align: left;">Title</td>
                                    <td style="text-align: left"> <input type="text" id="ComplainantTitle" style="text-align:left" name="ComplainantTitle" value="{{:ComplainantTitle}}" class="e-field e-ejinputtext valid" /> </td>
                                    <td style="text-align: left;" hidden="hidden">Date & Time of Complaint</td>
                                    <td style="text-align: left" hidden="hidden"> <input type="text" id="e_reg_date_complaint" name="e_reg_date_complaint" value="{{:e_reg_date_complaint}}" class="e-field e-ejinputtext valid " /> </td>

                                </tr>
                                <tr>
                                    <td style="text-align: left;">Email Address</td>
                                    <td style="text-align: left"> <input type="text" id="ComplainantEmail" name="ComplainantEmail" value="{{:ComplainantEmail}}" class="e-field e-ejinputtext valid" /> </td>
                                    <td style="text-align: left;">Tel No.1</td>
                                    <td style="text-align: left"> <input type="text" id="ComplainantMobile" name="ComplainantMobile" value="{{:ComplainantMobile}}" class="e-field e-ejinputtext valid " /> </td>
                                    <td style="text-align: left;">Tel No.2</td>
                                    <td style="text-align: left"> <input type="text" id="ComplainantPhone" name="ComplainantPhone" value="{{:ComplainantPhone}}" class="e-field e-ejinputtext valid " /> </td>

                                </tr>
                                <tr hidden="hidden">
                                    <td style="text-align: left;">Facility Name</td>
                                    <td style="text-align: left"> <input type="text" id="ComplainantFacilityCode" name="ComplainantFacilityCode" value="{{:ComplainantFacilityCode}}" class="e-field e-ejinputtext valid " /> </td>
                                    <td style="text-align: left;">District</td>
                                    <td style="text-align: left"> @*<input type="text" id="ComplainantDistrict" name="ComplainantDistrict" value="{{:ComplainantDistrict}}" class="e-field e-ejinputtext valid " />*@ </td>
                                    <td style="text-align: left;">IP</td>
                                    <td style="text-align: left"> @*<input type="text" id="IP" name="IP" value="{{:IP}}" class="e-field e-ejinputtext valid" />*@ </td>

                                </tr>

                            </table>
                        </div>
                    </div>
                </div>

                <div class="panel panel-default" id="complaintDetails">
                    <div class="panel-heading">
                        <h4 class="panel-title">
                            <a data-toggle="collapse" data-parent="#accordion" href="#collapse3">

                                Supporting Documentation and Evidence Received
                            </a>
                        </h4>
                    </div>
                    <div id="collapse3" class="panel-collapse collapse collapse in">
                        <div class="panel-body">

                            <table>
                                <tr>
                                    <td colspan="4" style="text-align: justify;">

                                        <div id="partialPlaceHolder" style="width:100%"> </div>
                                    </td>
                                </tr>
                                <tr>

                                    <td colspan="4">


                                        <div class="posupload">
                                            <div id="UploadInput"></div>
                                        </div>

                                        <ul id="uploaded"></ul>

                                    </td>
                                </tr>


                                <tr>
                                    <td style="text-align: left;">Was Evidence provided</td>

                                    <td style="text-align: left">
                                        {{if Sup_Doc_Evidence_Rec}}
                                        <input type="checkbox" id="Sup_Doc_Evidence_Rec" name="Sup_Doc_Evidence_Rec" checked="checked" class="e-field e-checkbox" style="width:30px" />
                                        {{else}}
                                        <input type="checkbox" id="Sup_Doc_Evidence_Rec" name="Sup_Doc_Evidence_Rec" class="e-field e-checkbox" style="width:30px" />
                                        {{/if}}
                                    </td>
                                    <td style="text-align: left;" hidden="hidden">Product Samples Provided</td>

                                    <td style="text-align: left" hidden="hidden">
                                        {{if Prod_Samples_Provided}}
                                        <input type="checkbox" id="Prod_Samples_Provided" name="Prod_Samples_Provided" checked="checked" class="e-field e-checkbox" style="width:30px" />
                                        {{else}}
                                        <input type="checkbox" id="Prod_Samples_Provided" name="Prod_Samples_Provided" class="e-field e-checkbox" style="width:30px" />
                                        {{/if}}
                                    </td>
                                </tr>
                                <tr>
                                    <td colspan="4">
                                        <div style="color: Red;">
                                            @ViewBag.Message
                                        </div>
                                    </td>
                                </tr>
                            </table>
                        </div>
                    </div>

                </div>
                <div class="panel panel-default" id="supportingDocuments" hidden="hidden">
                    <div class="panel-heading">
                        <h4 class="panel-title">
                            <a data-toggle="collapse" data-parent="#accordion" href="#collapseSupportDocs">
                                Supporting Documents
                            </a>
                        </h4>
                    </div>
                    <div id="collapseSupportDocs" class="panel-collapse collapse collapse in">
                        <div @*class="panel-body"*@>
                            <table>
                                <tr>
                                    <td colspan="4" style="text-align: justify;">

                                        @*<div id="partialPlaceHolder" style="width:100%"> </div>*@
                                    </td>
                                </tr>
                            </table>
                        </div>
                    </div>
                </div>
                <div class="panel panel-default" id="productDetails">
                    <div class="panel-heading">
                        <h4 class="panel-title ">
                            <a data-toggle="collapse" data-parent="#accordion" href="#collapseproduct">
                                Product details
                            </a>
                        </h4>
                    </div>
                    <div id="collapseproduct">
                        <div>

                            <table>

                                <tr>
                                    <td colspan="6">
                                        <div class="panel panel-default" id="complaintmedicines">
                                            <div class="panel-heading">
                                                <h4 class="panel-title">
                                                    <a data-toggle="collapse" data-parent="#accordion" href="#collapsemedicines">For Medicines</a>
                                                </h4>
                                            </div>
                                            <div id="collapsemedicines" class="panel-collapse collapse collapse in">
                                                <div>
                                                    <table>
                                                        <tr style="width:100%">
                                                            <td width="100%">
                                                                <div id="medicinesGrid" width:100%"> </div>
                                                            </td>
                                                        </tr>
                                                    </table>
                                                </div>

                                            </div>
                                        </div>

                                    </td>
                                </tr>
                                <tr>
                                    <td colspan="6">
                                        <div class="panel panel-default" id="detailedotherProducts">
                                            <div class="panel-heading">
                                                <h4 class="panel-title">
                                                    <a data-toggle="collapse" data-parent="#accordion" href="#collapseotherProducts">For Other Products </a>
                                                </h4>
                                            </div>
                                            <div id="collapseotherProducts" class="panel-collapse collapse collapse in">
                                                <div>
                                                    <table>
                                                        <tr style="width:100%">
                                                            <td width="100%">
                                                                <div id="otherProductsGrid" width:100%"> </div>
                                                            </td>
                                                        </tr>
                                                    </table>
                                                </div>
                                            </div>
                                        </div>

                                    </td>
                                </tr>



                            </table>
                        </div>
                    </div>
                </div>

                <div class="panel panel-default" id="level1Communication">
                    <div class="panel-heading">
                        <h4 class="panel-title">
                            <a data-toggle="collapse" data-parent="#accordion" href="#collapse4">
                                Level One Communication
                            </a>
                        </h4>
                    </div>
                    <div id="collapse4" class="panel-collapse collapse collapse in">
                        <div @*class="panel-body"*@>
                            <table>
                                <tr>
                                    <td style="text-align: left;">Assigned To</td>
                                    <td style="text-align: left"> <input type="text" id="Level1_Assignment" name="Level1_Assignment" value="{{:Level1_Assignment}}" class="e-field e-ejinputtext valid " @*onchange="CalcInterest(this.value)"*@ /> </td>
                                    <td style="text-align: left;" hidden="hidden">Title</td>
                                    <td style="text-align: left" hidden="hidden"> <input type="text" id="Communicated_By_Lev1Title" name="Communicated_By_Lev1Title" value="{{:Communicated_By_Lev1Title}}" class="e-field e-ejinputtext valid " /> </td>
                                    <td style="text-align: left;">Date of Assignment</td>
                                    <td style="text-align: left"> <input type="text" id="Level1_Assignment_Date" name="Level1_Assignment_Date" value="{{:Level1_Assignment_Date}}" class="e-field e-ejinputtext valid " /> </td>
                                </tr>
                                <tr hidden="hidden">
                                    <td>Assignment email sent</td>
                                    <td colspan="5">
                                        {{if Level1_Email_Sent}}
                                        <input type="checkbox" id="Level1_Email_Sent" name="Level1_Email_Sent" checked="checked" class="e-field e-checkbox" style="width:30px" />
                                        {{else}}
                                        <input type="checkbox" id="Level1_Email_Sent" name="Level1_Email_Sent" class="e-field e-checkbox" style="width:30px" />
                                        {{/if}}
                                    </td>
                                </tr>
                                <tr hidden="hidden">
                                    <td style="text-align: right;">Email to facility and/or copy of letter attached </td>

                                    <td style="text-align: left">
                                        {{if Email_letter_attached}}
                                        <input type="checkbox" id="Email_letter_attached" name="Email_letter_attached" checked="checked" class="e-field e-checkbox" style="width:30px" />
                                        {{else}}
                                        <input type="checkbox" id="Email_letter_attached" name="Email_letter_attached" class="e-field e-checkbox" style="width:30px" />
                                        {{/if}}
                                    </td>
                                </tr>
                            </table>
                        </div>
                    </div>
                </div>

                <div class="panel panel-default" id="complaintClassification">
                    <div class="panel-heading">
                        <h4 class="panel-title">
                            <a data-toggle="collapse" data-parent="#accordion" href="#collapse5">
                                Compliant Classification
                            </a>
                        </h4>
                    </div>
                    <div id="collapse5" class="panel-collapse collapse collapse in">
                        <div @*class="panel-body"*@>
                            <table>

                                <tr>
                                    <td class="redLabels">Complaint Severity</td>
                                    <td style="text-align: left"> <input type="text" id="e_reg_complaint_accuteness" name="e_reg_complaint_accuteness" value="{{:e_reg_complaint_accuteness}}" class="e-field e-ejinputtext valid " /> </td>



                                </tr>

                            </table>
                        </div>
                    </div>
                </div>


                <div class="panel panel-default" id="level2Communication">
                    <div class="panel-heading">
                        <h4 class="panel-title">
                            <a data-toggle="collapse" data-parent="#accordion" href="#collapse7">
                                Level 2 Communication (Supplier, MAUL & Facilities)
                            </a>
                        </h4>
                    </div>
                    <div id="collapse7" class="panel-collapse collapse collapse in">
                        <div @*class="panel-body"*@>
                            <table>

                                <tr style="width:100%">
                                    <td class="redLabels" style="text-align: right;">Assigned To: Name</td>
                                    <td style="text-align: left"> <input type="text" id="Level2_Assignment" name="Level2_Assignment" value="{{:Level2_Assignment}}" class="e-field e-ejinputtext valid " /> </td>
                                    <td style="text-align: right;" hidden="hidden">Title</td>
                                    <td style="text-align: left"> <input type="text" id="Communicated_By_Lev2Title" name="Communicated_By_Lev2Title" value="{{:Communicated_By_Lev2Title}}" class="e-field e-ejinputtext valid " /> </td>
                                    <td style="text-align: right;" hidden="hidden">Date</td>
                                    <td style="text-align: left"> <input type="text" id="Level2_Assignment_Date" name="Level2_Assignment_Date" value="{{:Level2_Assignment_Date}}" class="e-field e-ejinputtext valid " /> </td>

                                </tr>
                                <tr hidden="hidden">
                                    <td>Assignment email sent</td>
                                    <td colspan="5">
                                        {{if Level2_Email_Sent}}
                                        <input type="checkbox" id="Level2_Email_Sent" name="Level2_Email_Sent" checked="checked" class="e-field e-checkbox" style="width:30px" />
                                        {{else}}
                                        <input type="checkbox" id="Level2_Email_Sent" name="Level2_Email_Sent" class="e-field e-checkbox" style="width:30px" />
                                        {{/if}}
                                    </td>
                                </tr>
                                <tr hidden="hidden">
                                    <td style="text-align: right;">Email to facility and/or copy of letter attached </td>

                                    <td style="text-align: left">
                                        {{if Communicated_By_Lev2Email}}
                                        <input type="checkbox" id="Communicated_By_Lev2Email" name="Communicated_By_Lev2Email" checked="checked" class="e-field e-checkbox" style="width:30px" />
                                        {{else}}
                                        <input type="checkbox" id="Communicated_By_Lev2Email" name="Communicated_By_Lev2Email" class="e-field e-checkbox" style="width:30px" />
                                        {{/if}}
                                    </td>
                                </tr>

                            </table>
                        </div>
                    </div>
                </div>
                <div class="panel panel-default" id="level3Communication">
                    <div class="panel-heading">
                        <h4 class="panel-title">
                            <a data-toggle="collapse" data-parent="#accordion" href="#collapse8">
                                Level 3 Communication (Supplier, MAUL & Facilities)
                            </a>
                        </h4>
                    </div>
                    <div id="collapse8" class="panel-collapse collapse collapse in">
                        <div @*class="panel-body"*@>
                            <table>

                                <tr style="width:100%">
                                    <td style="text-align: left;" colspan="2">Was the Feedback Communicated to Complainant?  </td>

                                    <td style="text-align: left" colspan="2">
                                        <input type="text" id="Feedback_Communicated" name="Feedback_Communicated" value="{{:Feedback_Communicated}}" class="e-field e-ejinputtext valid " />
                                        @*{{if Communicated_Lev3Feedback}}
                                            <input type="checkbox" id="Communicated_Lev3Feedback" name="Communicated_Lev3Feedback" checked="checked" class="e-field e-checkbox" style="width:30px" />
                                            {{else}}
                                            <input type="checkbox" id="Communicated_Lev3Feedback" name="Communicated_Lev3Feedback" class="e-field e-checkbox" style="width:30px" />
                                            {{/if}}*@
                                    </td>
                                </tr>
                                <tr id="FeedBackDate">
                                    <td style="text-align: right;">Date</td>
                                    <td style="text-align: left"> <input type="text" id="Feedback_Date" name="Feedback_Date" value="{{:Feedback_Date}}" class="e-field e-ejinputtext valid " /> </td>
                                </tr>
                                <tr id="Communicated_Lev3Yes">
                                    <td colspan="6" class="redLabels" style="text-align: left;">Brief description of feedback communicated to complaint</td>
                                </tr>
                                <tr id="Communicated_Lev3No">
                                    <td colspan="6" class="redLabels" style="text-align: left;">Give a reason why it was not communicated</td>
                                </tr>
                                <tr>
                                    <td style="text-align: left" colspan="6"><textarea id="Brief_Feedback_Desc" name="Brief_Feedback_Desc" class="form-control" value="{{:Brief_Feedback_Desc}}" style="max-width:100%">{{:Brief_Feedback_Desc}}</textarea></td>
                                    @*<td style="text-align: left"> <input type="text" id="Communicated_Lev3Desc" name="Communicated_Lev3Desc" value="{{:Communicated_Lev3Desc}}" class="e-field e-ejinputtext valid " /> </td>*@
                                </tr>
                                <tr>
                                    <td style="text-align: left" colspan="6"><textarea id="No_Feedback_Reason" name="No_Feedback_Reason" class="form-control" value="{{:No_Feedback_Reason}}" style="max-width:100%">{{:No_Feedback_Reason}}</textarea></td>
                                    @*<td style="text-align: left"> <input type="text" id="Communicated_Lev3Desc" name="Communicated_Lev3Desc" value="{{:Communicated_Lev3Desc}}" class="e-field e-ejinputtext valid " /> </td>*@
                                </tr>
                                <tr id="Doc_Attached3">
                                    <td style="text-align: right;" colspan="2">Was a copy of response letter sent to the complainant Attached? </td>

                                    <td style="text-align: left">
                                        {{if Communicated_By_Lev3Email}}
                                        <input type="checkbox" id="Communicated_By_Lev3Email" name="Communicated_By_Lev3Email" checked="checked" class="e-field e-checkbox" style="width:30px" />
                                        {{else}}
                                        <input type="checkbox" id="Communicated_By_Lev3Email" name="Communicated_By_Lev3Email" class="e-field e-checkbox" style="width:30px" />
                                        {{/if}}
                                    </td>
                                </tr>
                            </table>
                        </div>
                    </div>
                </div>
                <div class="panel panel-default" id="ActionTakenPanel">
                    <div class="panel-heading">
                        <h4 class="panel-title">
                            <a data-toggle="collapse" data-parent="#accordion" href="#collapseActionTakenPanel">
                                Action taken
                            </a>
                        </h4>
                    </div>
                    <div id="collapseActionTakenPanel" class="panel-collapse collapse collapse in">
                        <div @*class="panel-body"*@>
                            <table>
                                <tr style="width:100%">
                                    <td width="100%">
                                        <div id="ActionTakenPanelGrid" width:100%"> </div>
                                    </td>
                                </tr>
                            </table>
                        </div>
                    </div>
                </div>
                <div class="panel panel-default" id="Complaint_Status">
                    <div class="panel-heading">
                        <h4 class="panel-title">
                            <a data-toggle="collapse" data-parent="#accordion" href="#collapse9">
                                Complaint Status
                            </a>
                        </h4>
                    </div>
                    <div id="collapse9" class="panel-collapse collapse collapse in">
                        <div class="panel-body">
                            <table style="width:100%">
                                <tr style="width:100%">
                                    <td class="redLabels" style="text-align: right; width:10%">Current Status</td>
                                    <td style="text-align: left"> <input type="text" id="e_reg_complaint_status" name="e_reg_complaint_status" value="{{:e_reg_complaint_status}}" class="e-field e-ejinputtext valid " /> </td>
                                </tr>
                                <tr>
                                    <td class="redLabels" style="text-align: right; width:20%">Status Comment</td>
                                    <td><textarea id="Feedback" name="Feedback" class="form-control" value="{{:Feedback}}" style="max-width:100%">{{:Feedback}}</textarea></td>
                                </tr>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
        </div>



    </div>
</script>
<script>

    function CalcInterest(args) {
        //alert(args);
    }
    function loadpics() {
        var regcode = $('#e_reg_complaint_code').val();
        //alert('Loading ... ');
        // Home is your controller, Index is your action name
        $("#partialPlaceHolder").load("@Url.Action("loadEvidence", "fo_complaint")",
            { 'e_reg_complaint_code': regcode },
                function (response, status, xhr) {
                    if (status == "error") {
                        errormessage();
                    }
                });
    };

    //selectProductQuality
    function selectProductQuality(e) {

        var Healthvalue = e.value;


        $('#Mode1').show();
        $('#Mode2').show();
        $('#Resolved1').show();
        $('#Resolved2').show();
        $('#ExpectedDate1').show();
        $('#ExpectedDate2').show();
        $('#ReceiivedDate').show();
        $('#ReceiivedDate1').show();
        $('#ResponsibleStaff1').show();
        $('#ResponsibleStaff').show();
        if (Healthvalue == 1) {

            $('#productDetails').show();
            $('#level1Communication').show();
            //var m = $("#Communicated_By_Lev1").val();
            //if (m == null || m == "") {
            //    $('#level2Communication').hide();
            //    $('#level3Communication').hide();
            //}
            //else {
            //    $('#level2Communication').show();

            //    var level2 = $("#Communicated_By_Lev2").val();
            //    if (level2 == null || level2 == "") {
            //        $('#level3Communication').hide();
            //    }
            //    else {
            //        $('#level3Communication').show();
            //    }

            //}

        }
        else if (Healthvalue > 1) {
            $('#productDetails').hide();
            $('#level1Communication').show();
            //$('#level2Communication').hide();
            //$('#level3Communication').hide();
        }

        //, change: "setOvertakenDecisiondetails",
    }
    function Level2DDChange(e) {

        var mComplainantCategory = e.value;
        var datepickObj = $("#Level2_Assignment_Date").data('ejDatePicker');
        // Set a value to the DatePicker\
        datepickObj.option('value', new Date());
        //$.ajax({
        //    url: 'GetContactTitle?cp_code=' + mComplainantCategory,
        //    contentType: "application/json; charset=utf-8",
        //    dataType: "json",
        //    type: 'GET',
        //    success: function (datadetails) {
        //        if (datadetails.length > 0) {

        //            $('#Communicated_By_Lev2Title').ejDropDownList({

        //                dataSource: datadetails,
        //                enabled: true,
        //                width: "250px",
        //                change: "setContactdetails",
        //                fields: { value: "title_code", text: "title_desc" },
        //                selectedItemIndex: 0,
        //            }).data("ejDropDownList");
        //        }
        //    },
        //});

    }

    function Level1DDChange(e) {

        var mComplainantCategory = e.value;



        var datepickObj = $("#Level1_Assignment_Date").data('ejDatePicker');
        // Set a value to the DatePicker\
        datepickObj.option('value', new Date());

        //$.ajax({
        //    url: 'GetContactTitle?cp_code=' + mComplainantCategory,
        //    contentType: "application/json; charset=utf-8",
        //    dataType: "json",
        //    type: 'GET',
        //    success: function (datadetails) {
        //        if (datadetails.length > 0) {

        //            $('#Communicated_By_Lev1Title').ejDropDownList({

        //                dataSource: datadetails,
        //                enabled: true,
        //                width: "250px",
        //                change: "setContactdetails",
        //                fields: { value: "title_code", text: "title_desc" },
        //                selectedItemIndex: 0,
        //            }).data("ejDropDownList");
        //        }
        //    },
        //});

    }
    function selectContact(e) {

        //Clear the vales
        $('#ComplainantName').val('');
        $('#ComplainantTitle').val('');
        $('#ComplainantEmail').val('');
        $('#ComplainantMobile').val('');
        $('#ComplainantPhone').val('');
        $('#ComplainantFacilityCode').val('');
        $('#ComplainantDistrict').val('');


        var mComplainantCategoryDesc = e.text; //Name
        mid = e.value;
        //alert(mid);
        var mComplainantCategory = e.value;
        $('#e_reg_complaint_details').ejDropDownList({
            dataSource: null,
            enabled: false,
            width: "250px",
            fields: { value: "cp_name", text: "cp_name" },
        }).data("ejDropDownList");

        $.ajax({
            url: 'contactPersons?cp_category=' + mComplainantCategory,
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            type: 'GET',
            success: function (datadetails) {
                if (datadetails.length > 0) {
                    // debugger;
                    //console.log(JSON.stringify(datadetails));
                    $('#ComplainantName').ejDropDownList({

                        dataSource: datadetails,
                        enabled: true,
                        width: "250px",
                        change:"setContactdetails",
                        fields: { value: "cp_code", text: "cp_name" },
                        //showCheckbox: true,
                        enableFilterSearch: true
                    }).data("ejDropDownList");
                }
            },
        });

    }
    function setCommunicated_Lev3(e) {

        mid = e.value;
        if (mid == 1) {

            $('#Communicated_Lev3Yes').show();
            $('#Communicated_Lev3No').hide();
            $('#No_Feedback_Reason').hide();
            $('#Brief_Feedback_Desc').show();
            $('#Doc_Attached3').show();
             $('#FeedBackDate').show();
            //$('#IterativeDecision_dec1').hide();

        }
        else if (mid == 2) {
            $('#Communicated_Lev3Yes').hide();
            $('#Communicated_Lev3No').show();
            $('#No_Feedback_Reason').show();
            $('#Brief_Feedback_Desc').hide();
            $('#Doc_Attached3').hide();
            $('#FeedBackDate').hide();
            //$('#IterativeDecision_dec1').hide();
        }

    }


    function  setContactdetails(e) {
        var mComplainant = e.text; //Name
        mid = e.value;
        //alert(e.value);
        var mComplainantCode = e.value;
        //Clear the vales
        //$('#ComplainantName').val('');
        $('#ComplainantTitle').val('');
        $('#ComplainantEmail').val('');
        $('#ComplainantMobile').val('');
        $('#ComplainantPhone').val('');
        //$('#ComplainantFacilityCode').val('');
        //$('#ComplainantDistrict').val('');


        //contactPerson(int? cp_code)
        $.ajax({
            url: 'contactPerson?cp_code=' + mComplainantCode,
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            type: 'GET',
            success: function (contactdetails) {
                //console.log(JSON.stringify(contactdetails));

                 if (Object.keys(contactdetails).length > 0) {
                     //$('#ComplainantName').val(contactdetails.cp_code);
                    $('#ComplainantTitle').val(contactdetails.cp_title);
                    setTitle(contactdetails.cp_title);

                    $('#ComplainantEmail').val(contactdetails.ce_email);
                    $('#ComplainantMobile').val(contactdetails.ct_telephon);
                    $('#ComplainantPhone').val(contactdetails.ct_telephone_2);
                    //$('#ComplainantFacilityCode').val(contactdetails.cp_facility);
                    //setFacility(contactdetails.cp_facility);
                   // $('#ComplainantDistrict').val(contactdetails.cp_district);
                    //setDistrict(contactdetails.cp_district);
                }
            },
        });

    }

    function setTitle(args)
    {
        $('#ComplainantTitle').val('');
        if (args == null || args === 'undefined')
        {
            return;
        }
        $.ajax({
            url: 'contactTitle?title_code=' + args,
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            type: 'GET',
            success: function (titledetails) {
                if (Object.keys(titledetails).length > 0) {

                    // When you use .Where(c => c.title_code...  the result is an array
                    //alert(titledetails[0].title_desc);

                    //When you use .FirstOrDefault(c => c.title_code  ...
                     //alert(contactdetails.title_desc);
                    // console.log(JSON.stringify(titledetails));

                    $('#ComplainantTitle').val(titledetails.title_desc);
                }
                //else {
                //    alert('Potea');
                //}
            },
        });
    }

    function setFacility(args) {
        if (args == null || args === 'undefined') {
            return;
        }
        $.ajax({
            url: 'contactFacility?fac_code=' + args,
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            type: 'GET',
            success: function (Facilitydetails) {
               // debugger;
                // console.log(JSON.stringify(Facilitydetails));
                if (Object.keys(Facilitydetails).length > 0) {
                    $('#ComplainantFacilityCode').val(Facilitydetails.Facility);
                }
            },
        });
    }

    function setDistrict(args) {
        if (args == null || args === 'undefined') {
            return;
        }
        $.ajax({
            url: 'contactDistrict?dist_code=' + args,
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            type: 'GET',
            success: function (Districtdetails) {
                console.log(JSON.stringify(Districtdetails));
                if (Object.keys(Districtdetails).length > 0) {
                    $('#ComplainantDistrict').val(Districtdetails.District_Name);
                }
            },
        });
    }
</script>
<script id="childGridHeader" type="text/x-jsrender">
    <h2>Supporting Documents</h2>
</script>

<script>

    $.validator.setDefaults({
        //to validate all fields(hidden also)
        ignore: [],

        errorClass: 'e-validation-error',
        //it specifies the error message display position
        errorPlacement: function (error, element) {
            $(error).insertAfter(element.closest(".e-widget"));
        },
    });


    function edit(args) {

        if (args.requestType == "save") {
            var proddesc = $('#e_reg_complaint_details').val();
            var str = proddesc + " Saved Successfully!!!";
            //alert(proddesc);
            successSave();
        }
        var objDialog = $("#Grid").data("ejGrid");

       if (args.requestType == "beginedit" || args.requestType == "add") {
            $($("#EditDialog_Grid_Save").hide()).after('<button id="save" type="button" onclick="savess();" class="btn btn-success btn-sm" > <span class="glyphicon glyphicon-save"></span> Save</button>');
            $("#save").css({ "width": "100px", "height": "50px", "font-size": "17px", "float": "right", "margin-left": "10px", "margin-top": "20px", "margin-bottom": "10px" });
            $("#EditDialog_Grid_Cancel").ejButton("destroy");
            $($("#EditDialog_Grid_Cancel").hide()).after(' <button type="button" id="cancel" onclick="cancelss()" class="btn btn-danger btn-sm" ><span class="glyphicon glyphicon-remove-circle"></span> Cancel</button>');
            $("#cancel").css({ "width": "100px", "height": "50px", "float": "right", "margin-left": "10px", "margin-top": "20px", "margin-bottom": "10px" });
            $('#productDetails').hide();
            $('#complaintClassification').hide();
            $('#level1Communication').hide();
            $('#level2Communication').hide();
            $('#level3Communication').hide();
            $('#Communicated_Lev3Yes').hide();
            $('#FeedBackDate').hide();
            $('#Communicated_Lev3No').hide();
            $('#Brief_Feedback_Desc').hide();
            $('#No_Feedback_Reason').hide();
            $('#Doc_Attached3').hide();
            //$('#ReceiivedDate').hide();
            //$('#ReceiivedDate1').hide();
            $('#ResponsibleStaff1').hide();
            $('#ResponsibleStaff').hide();

            // $("#EditDialog_Grid_Save").addClass('btn btn-success btn-sm');
            //$("#EditDialog_Grid_Save").css({ "width": "100px", "height": "50px", "font-size": "17px", "margin-left": "190px" });

            //$("#" + this._id + "_dialogEdit").ejDialog({ open: "open" })
            $("#" + objDialog._id + "_dialogEdit").ejDialog({ open: "open" })
            //$("#defaultTab").ejTab({ selectedItemIndex: 0 }).ejTab({ showRoundedCorner: true });;


            //A Global var to track and hold file uploading info
            window.uploadData = {};
            // Date of Visit
            $("#e_reg_date_recieved").ejDatePicker(
                {
                    maxDate: new Date(), value: new Date(new Date($("#e_reg_date_recieved").attr("value"))),
                    dateFormat: "dd/MM/yyyy",
                    validationRules: {
                        required: true
                    },
                    validationMessage: {
                        required: "Date recieved is Required"
                    },
                }
            );
            var YesNo =@Html.Raw(Json.Encode(ViewBag.YesNo));
            var Facilities =@Html.Raw(Json.Encode(ViewBag.Facilities ));
            var contacts =@Html.Raw(Json.Encode(ViewBag.Contacts));
            var products =@Html.Raw(Json.Encode(ViewBag.Products));
            var productsOP =@Html.Raw(Json.Encode(ViewBag.ProductsOP));
            var Dosage =@Html.Raw(Json.Encode(ViewBag.Dosage));

            var maul_staff =@Html.Raw(Json.Encode(ViewBag.MAUL_Staff));
            var authorized_representative =@Html.Raw(Json.Encode(ViewBag.fo_a_authorized_representative));
            var productCategories =@Html.Raw(Json.Encode(ViewBag.Product_Category));
            var CommunicationModes =@Html.Raw(Json.Encode(ViewBag.e_reg_communication_mode));
            var Action_Taken =@Html.Raw(Json.Encode(ViewBag.fo_a_action_taken));
            var fo_a_status =@Html.Raw(Json.Encode(ViewBag.fo_a_status));
            var Contact_Person = @Html.Raw(Json.Encode(ViewBag.Contact_Person));

            $('#Feedback_Communicated').ejDropDownList({

                dataSource: YesNo,
                enabled: true,
                width: "250px",
                change: "setCommunicated_Lev3",
                fields: { value: "yes_no_id", text: "yes_no_desc" },
            }).data("ejDropDownList");
          

            var Feed_back_Communicated = $('#Feedback_Communicated').val();
            if (Feed_back_Communicated == 1) {

                $('#Communicated_Lev3Yes').show();
                $('#Communicated_Lev3No').hide();
                $('#No_Feedback_Reason').hide();
                $('#Brief_Feedback_Desc').show();
                $('#Doc_Attached3').show();
                $('#FeedBackDate').show();
                //$('#IterativeDecision_dec1').hide();

            }
            else if (Feed_back_Communicated == 2) {
                $('#Communicated_Lev3Yes').hide();
                $('#Communicated_Lev3No').show();
                $('#No_Feedback_Reason').show();
                $('#Brief_Feedback_Desc').hide();
                $('#Doc_Attached3').hide();
                $('#FeedBackDate').hide();
                //$('#IterativeDecision_dec1').hide();
            }



            var DD_MS = $('#e_reg_MAUL_Staff').ejDropDownList({
                dataSource: maul_staff,
                width: "250px",
                enableFilterSearch: true,
                fields: { value: "cp_code", text: "cp_name" },
                //change: "selectContact",
            }).data("ejDropDownList");

            
            //$.ajax({
            //    url: 'GetContactTitle?cp_code=' + $("#Communicated_By_Lev1").val(),
            //    contentType: "application/json; charset=utf-8",
            //    dataType: "json",
            //    type: 'GET',
            //    success: function (datadetails) {
            //        if (datadetails.length > 0) {

            //            $('#Communicated_By_Lev1Title').ejDropDownList({

            //                dataSource: datadetails,
            //                enabled: true,
            //                width: "250px",
            //                change: "setContactdetails",
            //                fields: { value: "title_code", text: "title_desc" },
            //                selectedItemIndex: 0,
            //            }).data("ejDropDownList");
            //        }
            //    },
            //});

            
            //$.ajax({
            //    url: 'GetContactTitle?cp_code=' + $("#Communicated_By_Lev2").val(),
            //    contentType: "application/json; charset=utf-8",
            //    dataType: "json",
            //    type: 'GET',
            //    success: function (datadetails) {
            //        if (datadetails.length > 0) {

            //            $('#Communicated_By_Lev2Title').ejDropDownList({

            //                dataSource: datadetails,
            //                enabled: true,
            //                width: "250px",
            //                change: "setContactdetails",
            //                fields: { value: "title_code", text: "title_desc" },
            //                selectedItemIndex: 0,
            //            }).data("ejDropDownList");
            //        }
            //    },
            //});

            var Complainant_Category = $('#e_reg_complaint_category').val();
            //alert(Complainant_Category);
            if (Complainant_Category == 1) {

                $('#productDetails').show();
                $('#level1Communication').show();
                $('#complaintClassification').show();
                //$('#level2Communication').show();
                //$('#level3Communication').show();
                //$('#IterativeDecision_dec1').hide();

            }
            else if (Complainant_Category > 1) {
                $('#productDetails').hide();
                $('#level1Communication').show();
                $('#complaintClassification').hide();
                //$('#level2Communication').hide();
                //$('#level3Communication').hide();
                //$('#IterativeDecision_dec1').hide();
            }
            $("#e_reg_date_complaint").ejDatePicker({ maxDate: new Date(), dateFormat: "dd/MM/yyyy" });
            
            $("#e_reg_date_resolved").ejDatePicker({ maxDate: new Date(), dateFormat: "dd/MM/yyyy" });
            $("#Level1_Assignment_Date").ejDatePicker({ maxDate: new Date(), dateFormat: "dd/MM/yyyy" });
            $("#Level1_Assignment_Date").ejDatePicker("disable");
            //$("#Communicated_By_Lev1Date").attr("readonly", true);
            $("#e_reg_expected_date_resolution").ejDatePicker({ /*maxDate: new Date(),*/ dateFormat: "dd/MM/yyyy" });
            $("#Feedback_Date").ejDatePicker({ maxDate: new Date(), dateFormat: "dd/MM/yyyy" });
            
            $("#Level2_Assignment_Date").ejDatePicker({ maxDate: new Date(), dateFormat: "dd/MM/yyyy" });
            $("#Level2_Assignment_Date").ejDatePicker("disable");
            $("#Communicated_By_Lev2Date").ejDatePicker({ maxDate: new Date(), dateFormat: "dd/MM/yyyy" });
            $("#Communicated_By_Lev2Date").ejDatePicker("disable");
            $("#e_reg_contact_person_id").ejAutocomplete();
            //if ($("#e_reg_date_resolved").val() == "1/1/1970") {
            //    alert($("#e_reg_date_resolved").val());
            //}
            //else {
            //    alert("No");
            //    $("#e_reg_date_resolved").val("")
            //}
            var dateTimeObj2 = $("#e_reg_date_recieved").ejDatePicker('getValue');
            var date_recieved = new Date();
            if (dateTimeObj2 == null) {
                // Creating an object to the DatePicker Element
                var datepickObj = $("#e_reg_date_recieved").data('ejDatePicker');
                // Set a value to the DatePicker

                datepickObj.option('value', new Date());
            }
           
            $('#e_reg_complaint_accuteness').ejDropDownList({
                dataSource: @Html.Raw(Json.Encode(ViewBag.Accuteness)),
                width: "200px",
                fields: { value: "accuteness_code", text: "accuteness_desc" },
            }).data("ejDropDownList");

            $('#IP').ejDropDownList({
                dataSource: @Html.Raw(Json.Encode(ViewBag.A_ImplimentingPartners)),
                fields: { value: "ImplimentingPartnerCode", text: "ImplementingPartnerDescription" },
            }).data("ejDropDownList");


            if (args.requestType == "add") {
                $('#productDetails').hide();
                $('#complaintClassification').hide();
                $('#level1Communication').hide();
                $('#level2Communication').hide();
                $('#level3Communication').hide();

                $.ajax({
                    type: 'GET',
                    url: "complaintCode",
                    success: function (result) {
                        $('#e_reg_complaint_code').val(++result);
                    },
                });

                $.ajax({
                    type: "POST",
                    url: "ComplaintCodeString",
                    data: {},
                    datatype: "html",
                    contentType: 'application/x-www-form-urlencoded',
                    success: function (data) {
                        $('#e_reg_complaint_No').val(data.msg);
                        window.Complaint_No = data.msg;
                        var grid = $("#medicinesGrid").ejGrid("instance");
                        grid.dataSource(ej.DataManager({ url: 'Quality_Complaints?e_reg_complaint_code=' + $('#e_reg_complaint_No').val(), batchUrl: "BatchUpdateQualityIssues", adaptor: "UrlAdaptor" }));
                        var grid1 = $("#otherProductsGrid").ejGrid("instance");
                        grid1.dataSource(ej.DataManager({ url: 'Quality_ComplaintsOP?e_reg_complaint_code=' + $('#e_reg_complaint_No').val(), batchUrl: "BatchUpdateQualityIssues", adaptor: "UrlAdaptor" }));
                        var grid2 = $("#ActionTakenPanelGrid").ejGrid("instance");
                        grid2.dataSource(ej.DataManager({ url: 'GetActionTracker?e_reg_complaint_code=' + $('#e_reg_complaint_code').val(), batchUrl: "BatchUpdateActionTaken", adaptor: "UrlAdaptor" }));

                    },
                    error: function () {
                        alert("Error occured!!");
                    }
                });


            }
            window.e_reg_complaint_code = $('#e_reg_complaint_code').val();
            //$('#e_reg_complaint_No').val(data.msg);
            window.Complaint_No = $('#e_reg_complaint_No').val();


            // alert($('#e_reg_complaint_code').val());

            // window.uploadData = [];
            window.uploadData = {};
            //window.uploadData = [];
            window.uploadData.url = args.requestType == "add" ? "DialogInsert2" : "DialogUpdate2";

            //$('#UploadInput').ejUploadbox({
            //    saveUrl: "SaveSupportDoc",
            //    dialogAction: { closeOnComplete: true },
            //    multipleFilesSelection: true,
            //    showFileDetails: false,
            //    begin: "onbegin",
            //    success: "onsuccess",

            //});

            $('#UploadInput').ejUploadbox({
                saveUrl: "SaveSupportDoc?UploadInput_data=" + regcode,
                dialogAction: { closeOnComplete: true },
                multipleFilesSelection: true,
                showFileDetails: false,
                begin: "onbegin", //This passes the UploadInput_data value to the save method
                //success: "onsuccess",

                success: function (args) {
                    $("#ListFiles").append('<tr><td>' + args.files.name + " has been uploaded successfully" + '</td></tr>');
                },
                fileSelect: "fileselect",// function (args) { alert(args.files[0].name);},


            });

            //$("#UploadInput").ejUploadbox("disable");
            //$("#UploadInput").ejUploadbox("enable");
            $('#e_reg_complaint_code').attr('readonly', 'readonly');
            $('#e_reg_complaint_No').attr('readonly', 'readonly');

             loadpics();

            //Find the complaints that exist
            var compcode = $('#e_reg_complaint_code').val();


            //var fileDesc = $('#Details').val();
            //alert(window.e_reg_complaint_code);

            $("#ActionTakenPanelGrid").ejGrid({
                //dataSource: ej.DataManager({ url: 'Quality_ComplaintsOP?e_reg_complaint_code=' + window.e_reg_complaint_code, batchUrl: "BatchUpdateQualityIssues", adaptor: "UrlAdaptor" }),

                //detailsTemplate: "#tabGridContents",
                //detailsDataBound: "detailGridData",
                //cellSave: "OtherMedicinecellsave",
                allowGrouping: false,
                isResponsive: true,
                enableAltRow: true,
                allowTextWrap: true,
                textWrapSettings: { wrapMode: "both" },
                allowResizeToFit: true,
                showStackedHeader: true,
                enableResponsiveRow: true,

                toolbarSettings: {
                    showToolbar: true,
                    toolbarItems: ["add", "edit", "delete", "update", "cancel"]

                },
                editSettings: {
                    allowEditing: true,
                    allowAdding: true,
                    allowDeleting: true,
                    rowPosition: "bottom"
                },
                allowPaging: true,
                cellEdit: "cellEditTakenPanelGrid",
                editSettings: { allowEditing: true, allowAdding: true, allowDeleting: true, editMode: 'batch' },
                allowResizeToFit: true,
                columns: [
                    { field: "Action_id", visible: false, allowEditing: false, headerText: "ID", width: 80/*, isPrimaryKey: true*/ },
                    //{ field: "e_reg_complaint_code", visible: true, headerText: "QualityIssue_code", width: 100 },
                    { field: "e_reg_complaint_code", visible: false, headerText: "complaint code", width: 80/*, isPrimaryKey: true*/ },
                    { field: "e_reg_complaint_No", visible: false, headerText: "complaint no", /*change: "ValChangeProdcutType",*/ width: 80 },
                    { field: "AddedBy", visible: true, allowEditing: false, headerText: "Action Owner", /*change: "ValChangeProdcutType",*/ width: 100 },
                    { field: 'Action_date', type: "date", headerText: 'Action date', editType: "datepicker", format: "{0:dd/MM/yyyy}", editParams: { buttonText: "Now" }, width: 150 },
                    {
                        field: "Action_description", headerText: "Description", headerTooltip: "To add new line use Shift-Enter ", editTemplate: {
                            create: function () {
                                return "<textarea style='width:100%; display:block; max-width:100%;line-height:3.0;padding:15px 15px  30px; border-radius:3px; border:1px solid #F7E98D; font:13px Tahoma, cursive; transition:box-shadow 0.5s ease; box-shadow:0 4px 6px rgba(0,0,0,0.1); font-smoothing:subpixel-antialiased; background:linear-gradient(#F9EFAF, #F7E98D); background:-o-linear-gradient(#F9EFAF, #F7E98D); background:-ms-linear-gradient(#F9EFAF, #F7E98D); background:-moz-linear-gradient(#F9EFAF, #F7E98D); background:-webkit-linear-gradient(#F9EFAF, #F7E98D);'>{{:Action_description}}</textarea>";
                            },
                            write: function (args) {
                                $('.text').css("max-width", args.element.parent("td").width());
                                $('.text').css("max-height", args.element.parent("td").height());
                                null;
                            },
                            read: function (args) {
                                return args.val();
                            },
                        }
                        , width: 300,
                    },

                ],
            });
            if (args.requestType == "add")
            {

                var DDprodCat = $('#e_reg_product_category').ejDropDownList({
                    dataSource: productCategories,
                    width: "250px",
                    fields: { value: "category_code", text: "category_desc" },
                    //change: "selectContact",
                    readOnly: false
                }).data("ejDropDownList");

                var DropDownListCC = $('#e_reg_communication_mode').ejDropDownList({
                    dataSource: CommunicationModes,
                    width: "250px",
                    fields: { value: "comm_mode_code", text: "comm_mode_desc" },
                    //change: "selectContact",
                    readOnly: false
                }).data("ejDropDownList");
                // ComplainantName
                var complainantName = $('#ComplainantName').ejDropDownList({
                    dataSource: Contact_Person,
                    width: "250px",
                    fields: { value: "cp_code", text: "cp_name" },
                    change: "setContactdetails",
                    //showCheckbox: true,
                    enableFilterSearch: true,
                    readOnly: false
                }).data("ejDropDownList");

                var DropDownListCC = $('#ComplainantCategory').ejDropDownList({
                    dataSource: contacts,
                    width: "250px",
                    fields: { value: "category_id", text: "category_desc" },
                   // change: "selectContact",
                    showCheckbox: true,
                    readOnly: false
                }).data("ejDropDownList");

                 $('#e_reg_complaint_category').ejDropDownList({
                    dataSource: @Html.Raw(Json.Encode(ViewBag.e_reg_complaint_category)),
                    width: "200px",
                    validationRules: {
                        required: true
                    },
                    validationMessage: {
                        required: "Complaint Category is Required"
                    },
                    fields: { value: "complaint_category_code", text: "complaint_category_desc" },
                    change: "selectProductQuality",
                    readOnly: false
                }).data("ejDropDownList");

                 var ASDropDownList = $('#AffectedSites').ejDropDownList({
                    dataSource: Facilities,
                    width: "240px",
                    fields: { value: "FacilityCode", text: "Facility" },
                    selectItemByValue: $("#AffectedSites").val(),
                    //showCheckbox: true,
                    readOnly: false,
                    change: "AffectedSiteSelect",
                    enableFilterSearch: true
                }).data("ejDropDownList");

                $("#medicinesGrid").ejGrid({
                    //dataSource: ej.DataManager({ url: 'Quality_Complaints?e_reg_complaint_code=' + $('#e_reg_complaint_No').val(), batchUrl: "BatchUpdateQualityIssues", adaptor: "UrlAdaptor" }),
                    //detailsTemplate: "#tabGridContents",
                    //detailsDataBound: "detailGridData",
                    allowGrouping: false,
                    isResponsive: true,
                    enableAltRow: true,
                    allowTextWrap: true,
                    textWrapSettings: { wrapMode: "both" },
                    allowResizeToFit: true,
                    showStackedHeader: true,
                    enableResponsiveRow: true,
                    toolbarSettings: {
                        showToolbar: true,
                        toolbarItems: ["add", "edit", "delete", "update", "cancel"]
                    },
                    editSettings: {
                        allowEditing: true,
                        allowAdding: true,
                        allowDeleting: true,
                        rowPosition: "bottom"
                    },
                    allowPaging: true,
                    cellEdit: "cellEditMedicine",
                    beforeBatchSave: "SaveBatch" /*function (args) { }*/,
                    cellSave: "Medicinecellsave",
                    editSettings: { allowEditing: true, allowAdding: true, allowDeleting: true, editMode: 'batch' },
                    allowResizeToFit: true,
                    columns: [
                        { field: "e_reg_complaint_No", visible: false, allowEditing: true, headerText: "Complaint number", width: 80/*, isPrimaryKey: true*/ },
                        { field: "e_reg_complaint_code", visible: false, allowEditing: true, headerText: "complaint code", width: 50/*, isPrimaryKey: true*/ },
                        { field: "product_code", isPrimaryKey: true, editType: "dropdownedit", editParams: { enableAnimation: true }, validationRules: { required: true }, visible: true, allowEditing: true, headerText: "Generic name (& strength)", foreignKeyField: "product_code", foreignKeyValue: "product_description", dataSource: products, /*change: "ValChangeProdcutType",*/ width: 300 },
                        { field: "batch_no", isPrimaryKey: true, validationRules: { required: true }, visible: true, allowEditing: true, headerText: "Batch No.", width: 100, isPrimaryKey: true },
                        { field: "manufacturer", visible: true, headerText: "Manufacturer", width: 200 },
                        //{ field: "QualityIssue_code", visible: true, headerText: "QualityIssue_code", width: 100 },
                        { field: 'date_quality_issue_identified', type: "date", headerText: 'Date Quality issue was identified', editType: "datepicker", format: "{0:MM/dd/yyyy}", editParams: { buttonText: "Now" }, width: 150 },
                        { field: "dosage_form", visible: true, allowEditing: true, headerText: "Dosage form", foreignKeyField: "dosage_id", foreignKeyValue: "dosage_desc", dataSource: Dosage, width: 100 },
                        {
                            field: "description_of_quality_issue", headerText: "Describe quality issue", headerTooltip: "To add new line use Shift-Enter ", editTemplate: {
                                create: function () {
                                    return "<textarea style='width:100%; display:block; max-width:100%;line-height:3.0;padding:15px 15px  30px; border-radius:3px; border:1px solid #F7E98D; font:13px Tahoma, cursive; transition:box-shadow 0.5s ease; box-shadow:0 4px 6px rgba(0,0,0,0.1); font-smoothing:subpixel-antialiased; background:linear-gradient(#F9EFAF, #F7E98D); background:-o-linear-gradient(#F9EFAF, #F7E98D); background:-ms-linear-gradient(#F9EFAF, #F7E98D); background:-moz-linear-gradient(#F9EFAF, #F7E98D); background:-webkit-linear-gradient(#F9EFAF, #F7E98D);'>{{:description_of_quality_issue}}</textarea>";
                                },
                                write: function (args) {
                                    $('.text').css("max-width", args.element.parent("td").width());
                                    $('.text').css("max-height", args.element.parent("td").height());
                                    null;
                                },
                                read: function (args) {
                                    return args.val();
                                },
                            }
                            , width: 300,
                        },
                        { field: "e_reg_Facility_action_taken", width: 200, headerText: "Action Taken", editType: "dropdownedit",/* editParams: { showCheckbox: true }, */foreignKeyValue: "action_taken_desc", foreignKeyField: "action_taken_code", dataSource: Action_Taken },
                    ],
            });
                $("#otherProductsGrid").ejGrid({
                    //dataSource: ej.DataManager({ url: 'Quality_Complaints?e_reg_complaint_code=' + $('#e_reg_complaint_No').val(), batchUrl: "BatchUpdateQualityIssues", adaptor: "UrlAdaptor" }),
                    //detailsTemplate: "#tabGridContents",
                    //detailsDataBound: "detailGridData",
                    allowGrouping: false,
                    isResponsive: true,
                    enableAltRow: true,
                    allowTextWrap: true,
                    textWrapSettings: { wrapMode: "both" },
                    allowResizeToFit: true,
                    showStackedHeader: true,
                    enableResponsiveRow: true,
                    toolbarSettings: {
                        showToolbar: true,
                        toolbarItems: ["add", "edit", "delete", "update", "cancel"]
                    },
                    editSettings: {
                        allowEditing: true,
                        allowAdding: true,
                        allowDeleting: true,
                        rowPosition: "bottom"
                    },
                    allowPaging: true,
                    cellEdit: "cellEditOtherProducts",
                    beforeBatchSave: "SaveBatch" /*function (args) { }*/,
                    cellSave: "OtherMedicinecellsave",
                    editSettings: { allowEditing: true, allowAdding: true, allowDeleting: true, editMode: 'batch' },
                    allowResizeToFit: true,
                    columns: [
                        { field: "e_reg_complaint_No", visible: false, allowEditing: true, headerText: "Complaint number", width: 80/*, isPrimaryKey: true*/ },
                        { field: "e_reg_complaint_code", visible: false, allowEditing: true, headerText: "complaint code", width: 50/*, isPrimaryKey: true*/ },
                        { field: "product_code", isPrimaryKey: true, editType: "dropdownedit", editParams: { enableAnimation: true }, validationRules: { required: true }, visible: true, allowEditing: true, headerText: "Generic name (& strength)", foreignKeyField: "product_code", foreignKeyValue: "product_description", dataSource: products, /*change: "ValChangeProdcutType",*/ width: 300 },
                        { field: "batch_no", isPrimaryKey: true, validationRules: { required: true }, visible: true, allowEditing: true, headerText: "Batch No.", width: 100, isPrimaryKey: true },
                        { field: "manufacturer", visible: true, headerText: "Manufacturer", width: 200 },
                        //{ field: "QualityIssue_code", visible: true, headerText: "QualityIssue_code", width: 100 },
                        { field: 'date_quality_issue_identified', type: "date", headerText: 'Date Quality issue was identified', editType: "datepicker", format: "{0:MM/dd/yyyy}", editParams: { buttonText: "Now" }, width: 150 },
                        { field: "dosage_form", visible: true, allowEditing: true, headerText: "Dosage form", foreignKeyField: "dosage_id", foreignKeyValue: "dosage_desc", dataSource: Dosage, width: 100 },
                        {
                            field: "description_of_quality_issue", headerText: "Describe quality issue", headerTooltip: "To add new line use Shift-Enter ", editTemplate: {
                                create: function () {
                                    return "<textarea style='width:100%; display:block; max-width:100%;line-height:3.0;padding:15px 15px  30px; border-radius:3px; border:1px solid #F7E98D; font:13px Tahoma, cursive; transition:box-shadow 0.5s ease; box-shadow:0 4px 6px rgba(0,0,0,0.1); font-smoothing:subpixel-antialiased; background:linear-gradient(#F9EFAF, #F7E98D); background:-o-linear-gradient(#F9EFAF, #F7E98D); background:-ms-linear-gradient(#F9EFAF, #F7E98D); background:-moz-linear-gradient(#F9EFAF, #F7E98D); background:-webkit-linear-gradient(#F9EFAF, #F7E98D);'>{{:description_of_quality_issue}}</textarea>";
                                },
                                write: function (args) {
                                    $('.text').css("max-width", args.element.parent("td").width());
                                    $('.text').css("max-height", args.element.parent("td").height());
                                    null;
                                },
                                read: function (args) {
                                    return args.val();
                                },
                            }
                            , width: 300,
                        },
                        { field: "e_reg_Facility_action_taken", width: 200, headerText: "Action Taken", editType: "dropdownedit",/* editParams: { showCheckbox: true }, */foreignKeyValue: "action_taken_desc", foreignKeyField: "action_taken_code", dataSource: Action_Taken },
                    ],
                });
            }

            if (args.requestType == "beginedit") {

                $('#e_reg_complaint_details').attr('readonly', 'readonly');
               // $('#e_reg_complaint_No').attr('readonly', 'readonly');

                var DDprodCat = $('#e_reg_product_category').ejDropDownList({
                    dataSource: productCategories,
                    width: "250px",
                    fields: { value: "category_code", text: "category_desc" },
                    //change: "selectContact",
                    readOnly: true
                }).data("ejDropDownList");

                var DropDownListCC = $('#e_reg_communication_mode').ejDropDownList({
                    dataSource: CommunicationModes,
                    width: "250px",
                    fields: { value: "comm_mode_code", text: "comm_mode_desc" },
                    //change: "selectContact",
                    readOnly: true
                }).data("ejDropDownList");
                // ComplainantName
                var complainantName = $('#ComplainantName').ejDropDownList({
                    dataSource: Contact_Person,
                    width: "250px",
                    fields: { value: "cp_code", text: "cp_name" },
                    change: "setContactdetails",
                    //showCheckbox: true,
                    enableFilterSearch: true,
                    readOnly: true
                }).data("ejDropDownList");

                var DropDownListCC = $('#ComplainantCategory').ejDropDownList({
                    dataSource: contacts,
                    width: "250px",
                    fields: { value: "category_id", text: "category_desc" },
                    change: "selectContact",
                    readOnly: true
                }).data("ejDropDownList");

                 $('#e_reg_complaint_category').ejDropDownList({
                dataSource: @Html.Raw(Json.Encode(ViewBag.e_reg_complaint_category)),
                width: "200px",
                validationRules: {
                    required: true
                },
                validationMessage: {
                    required: "Complaint Category is Required"
                },
                fields: { value: "complaint_category_code", text: "complaint_category_desc" },
                change: "selectProductQuality",
                readOnly: true
                }).data("ejDropDownList");

            var ASDropDownList = $('#AffectedSites').ejDropDownList({
                    dataSource: Facilities,
                    width: "240px",
                    fields: { value: "FacilityCode", text: "Facility" },
                    selectItemByValue: $("#AffectedSites"),
                    showCheckbox: true,
                    readOnly: true
                }).data("ejDropDownList");

                $("#medicinesGrid").ejGrid({
                    //dataSource: ej.DataManager({ url: 'Quality_Complaints?e_reg_complaint_code=' + $('#e_reg_complaint_No').val(), batchUrl: "BatchUpdateQualityIssues", adaptor: "UrlAdaptor" }),
                    detailsTemplate: "#tabGridContents",
                    detailsDataBound: "detailGridData",
                    allowGrouping: false,
                    isResponsive: true,
                    enableAltRow: true,
                    allowTextWrap: true,
                    textWrapSettings: { wrapMode: "both" },
                    allowResizeToFit: true,
                    showStackedHeader: true,
                    enableResponsiveRow: true,
                    toolbarSettings: {
                        showToolbar: true,
                       // toolbarItems: ["add", "edit", "delete", "update", "cancel"]
                    },
                    editSettings: {
                        allowEditing: true,
                        allowAdding: true,
                        allowDeleting: true,
                        rowPosition: "bottom"
                    },
                    allowPaging: true,
                    cellEdit: "cellEditMedicine",
                    beforeBatchSave: "SaveBatch" /*function (args) { }*/,
                    cellSave: "Medicinecellsave",
                    editSettings: { allowEditing: true, allowAdding: true, allowDeleting: true, editMode: 'batch' },
                    allowResizeToFit: true,
                    columns: [
                        { field: "e_reg_complaint_No", visible: false, allowEditing: true, headerText: "Complaint number", width: 80/*, isPrimaryKey: true*/ },
                        { field: "e_reg_complaint_code", visible: false, allowEditing: true, headerText: "complaint code", width: 50/*, isPrimaryKey: true*/ },
                        { field: "product_code", isPrimaryKey: true, editType: "dropdownedit", editParams: { enableAnimation: true }, validationRules: { required: true }, visible: true, allowEditing: false, headerText: "Generic name (& strength)", foreignKeyField: "product_code", foreignKeyValue: "product_description", dataSource: products, /*change: "ValChangeProdcutType",*/ width: 400 },
                        { field: "batch_no", isPrimaryKey: true, validationRules: { required: true }, visible: true, allowEditing: false, headerText: "Batch No.", width: 100, isPrimaryKey: true },
                        { field: "manufacturer", visible: true, allowEditing: false, headerText: "Manufacturer", width: 300 },
                        // { field: "QualityIssue_code", visible: true, headerText: "QualityIssue_code", width: 100 },
                        { field: 'date_quality_issue_identified', allowEditing: false, type: "date", headerText: 'Date Quality issue was identified', editType: "datepicker", format: "{0:MM/dd/yyyy}", editParams: { buttonText: "Now" }, width: 150 },
                        { field: "dosage_form", visible: true, allowEditing: false, headerText: "Dosage form", foreignKeyField: "dosage_id", foreignKeyValue: "dosage_desc", dataSource: Dosage, width: 100 },
                    ],
                });

                $("#otherProductsGrid").ejGrid({
                    //dataSource: ej.DataManager({ url: 'Quality_ComplaintsOP?e_reg_complaint_code=' + window.e_reg_complaint_code, batchUrl: "BatchUpdateQualityIssues", adaptor: "UrlAdaptor" }),

                    detailsTemplate: "#tabGridContents",
                    detailsDataBound: "detailGridData",
                    cellSave: "OtherMedicinecellsave",
                    allowGrouping: false,
                    isResponsive: true,
                    enableAltRow: true,
                    allowTextWrap: true,
                    textWrapSettings: { wrapMode: "both" },
                    allowResizeToFit: true,
                    showStackedHeader: true,
                    enableResponsiveRow: true,

                    toolbarSettings: {
                        showToolbar: true,
                       // toolbarItems: ["add", "edit", "delete", "update", "cancel"]

                    },
                    editSettings: {
                        allowEditing: true,
                        allowAdding: true,
                        allowDeleting: true,
                        rowPosition: "bottom"
                    },
                    allowPaging: true,
                    cellEdit: "cellEditOtherProducts",
                    editSettings: { allowEditing: true, allowAdding: true, allowDeleting: true, editMode: 'batch' },
                    allowResizeToFit: true,
                    columns: [
                        { field: "e_reg_complaint_No", visible: false, allowEditing: false, headerText: "Complaint number", width: 80/*, isPrimaryKey: true*/ },
                        { field: "QualityIssue_code", visible: false, headerText: "QualityIssue_code", width: 100 },
                        { field: "e_reg_complaint_code", visible: false, allowEditing: false, headerText: "e_reg_complaint_code", width: 50/*, isPrimaryKey: true*/ },
                        { field: "product_code", isPrimaryKey: true, validationRules: { required: true }, visible: true, allowEditing: false, headerText: "Generic name (& strength)", foreignKeyField: "product_code", foreignKeyValue: "product_description", dataSource: productsOP, /*change: "ValChangeProdcutType",*/ width: 400 },
                        { field: "batch_no", isPrimaryKey: true, validationRules: { required: true }, visible: true, allowEditing: false, headerText: "Batch No.", width: 100, isPrimaryKey: true },
                        { field: "Manufacturer", visible: true, allowEditing: false, headerText: "Manufacturer", width: 300 },
                        { field: 'date_quality_issue_identified', allowEditing: false, type: "date", headerText: 'Date Quality issue was identified', editType: "datepicker", format: "{0:MM/dd/yyyy}", editParams: { buttonText: "Now" }, width: 150 },

                    ],
                });

                var grid = $("#medicinesGrid").ejGrid("instance");
                grid.dataSource(ej.DataManager({ url: 'Quality_Complaints?e_reg_complaint_code=' + $('#e_reg_complaint_No').val(), batchUrl: "BatchUpdateQualityIssues", adaptor: "UrlAdaptor" }));
                var grid1 = $("#otherProductsGrid").ejGrid("instance");
                grid1.dataSource(ej.DataManager({ url: 'Quality_ComplaintsOP?e_reg_complaint_code=' + $('#e_reg_complaint_No').val(), batchUrl: "BatchUpdateQualityIssues", adaptor: "UrlAdaptor" }));
                var grid2 = $("#ActionTakenPanelGrid").ejGrid("instance");
                grid2.dataSource(ej.DataManager({ url: 'GetActionTracker?e_reg_complaint_code=' + $('#e_reg_complaint_code').val(), batchUrl: "BatchUpdateActionTaken", adaptor: "UrlAdaptor" }));

            }
            var current =@Html.Raw(Json.Encode(ViewBag.CurrentUser)); 
           // alert(current);
            if (current == true) {
               // alert("CCU");
                $('#e_reg_complaint_status').ejDropDownList({

                    dataSource: fo_a_status,
                    enabled: true,
                    width: "250px",
                    readOnly: false,
                    //change: "setCommunicated_Lev3",
                    fields: { value: "status_code", text: "status_desc" },
                }).data("ejDropDownList");
                var DD_MS = $('#Level1_Assignment').ejDropDownList({
                    dataSource: maul_staff,
                    width: "250px",
                    fields: { value: "cp_code", text: "cp_name" },
                    showCheckbox: true,
                    change: "Level1DDChange",
                    //showCheckbox: true,
                    selectItemByValue: $("#Level1_Assignment").val(),
                    enableFilterSearch: true
                }).data("ejDropDownList");
                var DD_MS = $('#Level2_Assignment').ejDropDownList({
                    dataSource: maul_staff,
                    width: "250px",
                    fields: { value: "cp_code", text: "cp_name" },
                    change: "Level2DDChange",
                    showCheckbox: true,
                    selectItemByValue: $("#Level2_Assignment").val(),
                    enableFilterSearch: true
                }).data("ejDropDownList");
                //$('#Feedback').attr('readonly', 'readonly');
            }
            else {
                $('#e_reg_complaint_status').ejDropDownList({

                    dataSource: fo_a_status,
                    enabled: true,
                    width: "250px",
                    readOnly: true,
                    //change: "setCommunicated_Lev3",
                    fields: { value: "status_code", text: "status_desc" },
                }).data("ejDropDownList");
                var DD_MS = $('#Level1_Assignment').ejDropDownList({
                    dataSource: maul_staff,
                    width: "250px",
                    fields: { value: "cp_code", text: "cp_name" },
                    showCheckbox: true,
                    change: "Level1DDChange",
                    readOnly: true,
                    selectItemByValue: $("#Level1_Assignment").val(),
                    enableFilterSearch: true
                }).data("ejDropDownList");
                var DD_MS = $('#Level2_Assignment').ejDropDownList({
                    dataSource: maul_staff,
                    width: "250px",
                    fields: { value: "cp_code", text: "cp_name" },
                    change: "Level2DDChange",
                    readOnly: true,
                    showCheckbox: true,
                    selectItemByValue: $("#Level2_Assignment").val(),
                    enableFilterSearch: true
                }).data("ejDropDownList");
                $('#Feedback').attr('readonly', 'readonly');
            }
        }
    }

    function setCodePreInvestGrd(args) {

        $.ajax({
            type: 'GET',
            url: "PreInvestigationGrid",
            success: function (result) {
                if (result > 0) {
                    //debugger;

                    for (i = 0; i < result; i++) {
                        $("#PreInvestGrd").ejGrid("setCellValue", i, "e_reg_complaint_code", args);
                    }
                }
            },
        });
    }
    function setCodeDetailInvestGrd(args) {
        $.ajax({
            type: 'GET',
            url: "DetailInvestigationGrid",
            success: function (result2) {
                if (result2 > 0) {
                    //debugger;
                    for (i = 0; i < result2; i++) {
                        $("#DetailInvestGrd").ejGrid("setCellValue", i, "e_reg_complaint_code", args);
                    }
                }
            },
        });
    }



    function savess(args) {

        var obj = $("#Grid").ejGrid("instance");
        obj.endEdit();
        var takentracker = $("#ActionTakenPanelGrid").ejGrid("instance");
        takentracker.batchSave();
        //var objPreInvest = $("#PreInvestGrd" + window.regcode).ejGrid("instance");
        //objPreInvest.batchSave();

        //var objDetailInvest = $("#DetailInvestGrd" + window.regcode).ejGrid("instance");
        //objDetailInvest.batchSave();

        var objMedicines = $("#medicinesGrid").ejGrid("instance");
        objMedicines.batchSave();

        var objotherProducts = $("#otherProductsGrid").ejGrid("instance");
        objotherProducts.batchSave();

        //var objActionTakenGrd = $("#ActionTakenGrd" + window.regcode).ejGrid("instance");
        //objActionTakenGrd.batchSave();

    }

    function cancelss() {
        cancelSave();

    }

    function errormessage(args) {
        $("#Grid").ejWaitingPopup("hide");
        var str = "";
        str = "Error occurred";
        $("#ErrorList").html('<p style="font-family: cursive;color: red;">' + str + '</p></br><button id="button1" style="size: large; showRoundedCorner: true; cssClass:customCss1">---OK---</button>');
        $("#button1").ejButton({

            click: function (args) {
                $("#ErrorList").ejDialog("close");
            }
        });
        $("#ErrorList").ejDialog({ enableModal: true });
        $("#ErrorList").ejDialog("open");
    }
    function open(args) {

        var objDialog = $("#Grid").data("ejGrid");
        var $dialogWrapper = objDialog.element.find("#" + objDialog._id + "_dialogEdit_wrapper");
        $dialogWrapper.css("top", "0px");
        $dialogWrapper.css("left", "0px");
    }
    function failure(args) {
        $("#Grid").ejWaitingPopup("hide");
        var str = "";
        str = ($($(args.error.responseText).find('b')[0]).text() + ":" + $(args.error.responseText).find('i').text());
        $("#ErrorList").html('<p style="font-family: cursive;color: red;">' + str + '</p></br><button id="button1" style="size: large; showRoundedCorner: true; cssClass:customCss1">---OK---</button>');
        $("#button1").ejButton({

            click: function (args) {
                $("#ErrorList").ejDialog("close");
            }
        });
        $("#ErrorList").ejDialog({ enableModal: true });
        $("#ErrorList").ejDialog("open");
    }

    function cancelSave(args) {
        $("#Grid").ejWaitingPopup("hide");
        var proddesc = $('#e_reg_complaint_details').val();
        var str = "The edits on " + proddesc + " have been Cancelled!!!";
        //$("#SuccessDial").html('<p style="font-family: cursive;color: green;">' + str + '</p></br><button id="button1" style="margin-left: 50%;size: large; showRoundedCorner: true; cssClass:customCss1">OK</button>');
        $("#CancelDial").html('<p style="font-family: cursive;color: red;">' + str /*+ '</p></br><button id="button1" style="margin-left: 50%;size: large; showRoundedCorner: true; cssClass:customCss1">OK</button>'*/);

        var obj = $("#Grid").ejGrid("instance")
        obj.cancelEdit();
        $("#btnOK").ejButton({
            cssClass: "e-danger",
            size: "large",
            showRoundedCorner: true,
            contentType: "textandimage",
            prefixIcon: "e-icon e-handup",
            visible: false,
            style: "float:right",
            click: function (args) {

                $("#CancelDial").ejDialog("close");
            }
        });

        $("#CancelDial").ejDialog({ enableModal: true });
        $("#CancelDial").ejDialog("open");
    }

    function successSave(args) {
        $("#Grid").ejWaitingPopup("hide");
        var proddesc = $('#e_reg_complaint_details').val();
        var str = proddesc + " Saved Successfully!!!";

        //$("#SuccessDial").html('<p style="font-family: cursive;color: green;">' + str + '</p></br><button id="button1" style="margin-left: 50%;size: large; showRoundedCorner: true; cssClass:customCss1">OK</button>');
        $("#SuccessDial").html('<p style="font-family: cursive;color: green;">' + str /*+ '</p></br><button id="button1" style="margin-left: 50%;size: large; showRoundedCorner: true; cssClass:customCss1">OK</button>'*/);


        $("#btn1").ejButton({
            cssClass: "e-primary",
            size: "large",
            showRoundedCorner: true,
            contentType: "textandimage",
            prefixIcon: "e-icon e-handup",
            visible: false,
            style: "float:right",
            click: function (args) {
                $("#SuccessDial").ejDialog("close");
            }
        });

        $("#button1").ejButton({
            cssClass: "e-success",
            size: "medium",
            showRoundedCorner: true,
            contentType: "textandimage",
            prefixIcon: "e-icon e-handup",

            click: function (args) {
                $("#SuccessDial").ejDialog("close");
            }
        });
        $("#SuccessDial").ejDialog({ enableModal: true });
        $("#SuccessDial").ejDialog("open");
    }

    function editWarning(args) {

        var str = "Non Editable Record";

        $("#ErrorList").html('<p style="font-family: cursive;color: red;">' + str + '</p></br><button id="button1" style="size: large; showRoundedCorner: true; cssClass:customCss1">---OK---</button>');
        $("#button1").ejButton({

            click: function (args) {
                $("#ErrorList").ejDialog("close");
            }
        });
        $("#ErrorList").ejDialog({ enableModal: true });
        $("#ErrorList").ejDialog("open");
    }






    function onbegin(args) {
        var complaintcode = $('#e_reg_complaint_code').val();
        //alert(complaintcode);
        args.data = complaintcode;
    }


    function fileselect(args) {
        //console.log(JSON.stringify(args));
        for (i = 0; i < args.files.length; i++) {
            //  alert(args.files[i].name);
            // var msg = "<li class='green'><span style='display:inline-block;'><span class='e-icon e-file-empty'></span></span><span style='display:inline-block;margin-left:20px;'><span style='display:block'>" + args.files[i].name + "</span><span style='display:block;font-size: 10px;'>" + (args.files[i].size / 1024).toFixed(2) + "KB</span></li>"
            var msg = "<li style='display:block;color:green'>" + args.files[i].name + "</span><span style='display:block;font-size: 10px;color:blue'>" + (args.files[i].size / 1024).toFixed(2) + "KB</span></li>"

            // msg = args.files[i].name;
            $("#uploaded").append(msg);
            document.getElementById("Sup_Doc_Evidence_Rec").checked = true;
            //if (args.files[i].name == "Drag-and-Drop-img1.png") // set the file name or extension based on your requirement
            //{
            //    this._removeFile(args.files[i]); // remove the file
            //    this._currentElement.find(".e-uploadinput").val("");
            //    this._resetFileInput(this._currentElement.find(".e-uploadinput")); //reset the upload box input
            //}
        }
    }
    function onsuccess(args) {

        var msg = "<li class='green'><span style='display:inline-block;'><span class='e-icon e-file-empty'></span></span><span style='display:inline-block;margin-left:20px;'><span style='display:block'>" + args.files.path +' - ' + args.files.name + "</span><span style='display:block;font-size: 10px;'>" + (args.files.size / 1024).toFixed(2) + "KB</span></li>"
        $("#uploaded").append(msg);
    }
    var Action_Taken =@Html.Raw(Json.Encode(ViewBag.fo_a_action_taken));
    var documents_Attached =@Html.Raw(Json.Encode(ViewBag.Documents_Attached));

    function QIClosequeryCellInfo(args) {

        if (args.column.field == "Documents_Attached") {
            if (args.data.e_reg_track_action_taken != null && args.data.Documents_Attached != '') {
                var sourceIds = args.data.Documents_Attached.split(',');
                var roles = [];

                for (var i = 0; i < sourceIds.length; i++) {
                    //Using the predicate you can filter using more that one search field
                    //var detaildata = ej.DataManager(data).executeLocal(ej.Query().where("Project_Code", ej.FilterOperators.equal, project_Code, false).take(10));
                    //var detaildata = ej.DataManager(fundingsourceData).executeLocal(ej.Query().where(ej.Predicate("id", ej.FilterOperators.equal, sourceIds[i], false)
                    //    .and("Volume", ej.FilterOperators.equal, volume, false)).take(10));

                    var detaildata = ej.DataManager(documents_Attached).executeLocal(ej.Query().where(ej.Predicate("Doc_Code", ej.FilterOperators.equal, sourceIds[i], false)).take(10));
                    if (detaildata != null) {
                        // console.log(JSON.stringify(detaildata));
                        roles.push(detaildata[0]["Doc_Description"])
                    }
                }
                $(args.cell).text(roles.toString());
            }
        }
    }
    function ActionTakenCellInfo(args) {

        if (args.column.field == "e_reg_track_action_taken") {
            if (args.data.e_reg_track_action_taken != null && args.data.e_reg_track_action_taken != '') {
                var sourceIds = args.data.e_reg_track_action_taken.split(',');
                var roles = [];

                for (var i = 0; i < sourceIds.length; i++) {
                    //Using the predicate you can filter using more that one search field
                    //var detaildata = ej.DataManager(data).executeLocal(ej.Query().where("Project_Code", ej.FilterOperators.equal, project_Code, false).take(10));
                    //var detaildata = ej.DataManager(fundingsourceData).executeLocal(ej.Query().where(ej.Predicate("id", ej.FilterOperators.equal, sourceIds[i], false)
                    //    .and("Volume", ej.FilterOperators.equal, volume, false)).take(10));

                    var detaildata = ej.DataManager(Action_Taken).executeLocal(ej.Query().where(ej.Predicate("action_taken_code", ej.FilterOperators.equal, sourceIds[i], false)).take(10));
                    if (detaildata != null) {
                       // console.log(JSON.stringify(detaildata));
                        roles.push(detaildata[0]["action_taken_desc"])
                    }
                }
                $(args.cell).text(roles.toString());
            }
        }
    }
    function queryCellInfo(args) {
        args.rowPosition
        if (args.column.field == "investigation_code" && (args.data.investigation_code.trim() == '4.1' || args.data.investigation_code.trim() == '4.2' ||
            args.data.investigation_code.trim() == '6.1' || args.data.investigation_code.trim() == '6.2'))
            $($(args.cell).parent()).css("backgroundColor", "white").css("color", "red").css("font-weight", "bold");/*custom css applied to the row */
        if (args.column.field == "investigation_code" && args.data.investigation_code.trim() == '4.2.7') {
            if (args.rowData.yes_no == 1){
                $("#Detailed_invest").show();
                $('#level2Communication').show();
            }
            else {
                $("#Detailed_invest").hide();
                $('#level2Communication').hide();
            }
        }
        if (args.column.field == "investigation_code" && (args.data.investigation_code.trim() == '4.2.1' || args.data.investigation_code.trim() == '4.2.2') ) {
            if (args.rowData.yes_no == 1) {
                    $("#Quarantine").show();
                    window.Quarantine = 1;
            }
            else if (args.rowData.yes_no == 2) {
                    if (window.DetailedQuarantine == 1) {
                        $("#Quarantine").show();
                        window.Quarantine = 2;
                    }
                    else {
                        $("#Quarantine").hide();
                        $("#Release").show();
                        window.Quarantine == 2
                    }

            }
            else
            {
                if (window.DetailedQuarantine == 1) {
                    $("#Quarantine").show();
                    window.Quarantine = 0;
                }
                else if (window.DetailedQuarantine == 2) {
                    $("#Quarantine").hide();
                    $("#Release").show();
                    window.Quarantine = 0;
                }
                else {
                    $("#Quarantine").hide();
                }

            }
        }
        if (args.column.field == "investigation_code" && (args.data.investigation_code.trim() == '6.2.1' || args.data.investigation_code.trim() == '6.2.2')) {
            if (args.rowData.yes_no == 1) {
                if (window.Quarantine == 1) {
                    $("#Quarantine").show();
                    window.DetailedQuarantine = 1;
                }
                else {
                    $("#Quarantine").show();
                    window.DetailedQuarantine = 1;
                }

            }
            else if (args.rowData.yes_no == 2) {
                if (window.Quarantine == 1) {
                    $("#Quarantine").show();
                    window.DetailedQuarantine = 2;
                }
                else {
                    $("#Quarantine").hide();
                    $("#Release").show();
                    window.DetailedQuarantine == 2
                }

            }
            else {
                if (window.Quarantine == 1) {
                    $("#Quarantine").show();
                    window.DetailedQuarantine = 0;
                }
                else if (window.Quarantine == 2) {
                    $("#Quarantine").hide();
                    $("#Release").show();
                    window.DetailedQuarantine = 0;
                }
                else {
                    $("#Quarantine").hide();
                }

            }
        }

    }

    function cellEdit(args) {
        var comcode = args.model.selectedRecords[0].investigation_code;
        if ((comcode.trim() == '4.1' || comcode.trim() == '4.2' ||
            comcode.trim() == '6.1' || comcode.trim() == '6.2')) {
            // alert('Nod editable');
            editWarning();
            args.cancel = true;
        }

    }
    function onDetailedGridCreate(args) {
        // Fill up the batch no, product code,
        var gridObj = $("#DetailInvestGrd{{:Id}}").data("ejGrid");
        //alert('Setting Values');
        var Rcode = $("#e_reg_complaint_code").val();
        // Gets current view data of grid control
        gridObj.getCurrentViewData();
        if (gridObj.getCurrentViewData().length > 0) {
            var gridlen = gridObj.getCurrentViewData().length;
            //Set the values of the  batch number and product code
            for (var i = 0; i < gridlen; i++) {
                $("#DetailInvestGrd").ejGrid("setCellValue", i, "e_reg_complaint_code", Rcode);
                $("#DetailInvestGrd").ejGrid("setCellValue", i, "e_reg_complaint_No", window.Complaint_No);
                $("#DetailInvestGrd").ejGrid("setCellValue", i, "batch_no", window.batchno);
                $("#DetailInvestGrd").ejGrid("setCellValue", i, "product_code", window.productcode);
            }
        }

        this.element.find(".e-gridcontent").on("click", "a", function (e) {
            e.preventDefault();
            //Do something
        });
    }
    function onGridCreate(args) {
        // Fill up the batch no, product code,
        var gridObj = $("#PreInvestGrd{{:Id}}").data("ejGrid");
       // alert('Setting Values');
        var Rcode = $("#e_reg_complaint_code").val();
        // Gets current view data of grid control
        gridObj.getCurrentViewData();
        if (gridObj.getCurrentViewData().length > 0)
        {
            var gridlen = gridObj.getCurrentViewData().length;
            //Set the values of the  batch number and product code
            for (var i = 0; i < gridlen; i++) {
                $("#PreInvestGrd").ejGrid("setCellValue", i, "e_reg_complaint_code", Rcode);
                $("#PreInvestGrd").ejGrid("setCellValue", i, "e_reg_complaint_No", window.Complaint_No);
                $("#PreInvestGrd").ejGrid("setCellValue", i, "batch_no", window.batchno);
                $("#PreInvestGrd").ejGrid("setCellValue", i, "product_code", window.productcode);
            }
        }

        this.element.find(".e-gridcontent").on("click", "a", function (e) {
            e.preventDefault();
            //Do something
        });
    }
    function onActionComplete(args) {
        {

            // Fill up the batch no, product code,
            var gridObj = $("#PreInvestGrd" + window.regcode).data("ejGrid");
            var Rcode = $("#e_reg_complaint_code").val();
            // Gets current view data of grid control
            gridObj.getCurrentViewData();
            if (gridObj.getCurrentViewData().length > 0) {
                var gridlen = gridObj.getCurrentViewData().length;
                //Set the values of the  batch number and product code
                for (var i = 0; i < gridlen; i++) {
                    $("#PreInvestGrd" + window.regcode).ejGrid("setCellValue", i, "e_reg_complaint_code", Rcode);
                    $("#PreInvestGrd" + window.regcode).ejGrid("setCellValue", i, "e_reg_complaint_No", window.Complaint_No);
                    $("#PreInvestGrd" + window.regcode).ejGrid("setCellValue", i, "batch_no", window.batchno);
                    $("#PreInvestGrd" + window.regcode).ejGrid("setCellValue", i, "product_code", window.productcode);
                }
            }
        }
        this.element.find(".e-gridcontent").on("click", "a", function (e) {
            e.preventDefault();
            //Do something
        });
    }

    function onActionCompleteDetailInvest(args) {
        {
           // alert('onActionCompleteDetailInvest');
            // Fill up the batch no, product code,
            var gridObj = $("#DetailInvestGrd" + window.regcode).data("ejGrid");
           // alert(window.Complaint_No);
            // Gets current view data of grid control
            gridObj.getCurrentViewData();
            if (gridObj.getCurrentViewData().length > 0) {
                var gridlen = gridObj.getCurrentViewData().length;
                //Set the values of the  batch number and product code
                for (var i = 0; i < gridlen; i++) {

                    $("#DetailInvestGrd" + window.regcode).ejGrid("setCellValue", i, "e_reg_complaint_code", window.regcode);
                    $("#DetailInvestGrd" + window.regcode).ejGrid("setCellValue", i, "batch_no", window.batchno);
                    $("#DetailInvestGrd" + window.regcode).ejGrid("setCellValue", i, "product_code", window.productcode);
                    $("#DetailInvestGrd" + window.regcode).ejGrid("setCellValue", i, "e_reg_complaint_No", window.Complaint_No);
                }
            }
        }
        this.element.find(".e-gridcontent").on("click", "a", function (e) {
            e.preventDefault();
            //Do something
        });
    }
    function cellEditMedicine(args) {
         var result = this.getSelectedRecords();
        var gridInstance = $("#medicinesGrid").ejGrid("instance");
        var medicineindex = gridInstance.selectedRowsIndexes;
        var grid = this._id;
        var Rcode = $("#e_reg_complaint_code").val();
        var ComplaintNo = window.Complaint_No;
        //alert(ComplaintNo);
        $("#medicinesGrid").ejGrid("setCellValue", medicineindex, "e_reg_complaint_code", Rcode);
        $("#medicinesGrid").ejGrid("setCellValue", medicineindex, "e_reg_complaint_No", ComplaintNo);
    }

    function cellEditTakenPanelGrid(args) {
        if (args.columnName == "Action_date" || args.columnName == "e_reg_complaint_code" || args.columnName == "e_reg_complaint_No"  ) {
           args.cancel = true;
        }
        var result = this.getSelectedRecords();
        var gridInstance = $("#ActionTakenPanelGrid").ejGrid("instance");
        var index = gridInstance.selectedRowsIndexes;
        var grid = this._id;
        var Rcode = $("#e_reg_complaint_code").val();
        var ComplaintNo = window.Complaint_No;
        var date = new Date();
        //alert(date);
        $("#ActionTakenPanelGrid").ejGrid("setCellValue", index, "e_reg_complaint_code", Rcode);
        $("#ActionTakenPanelGrid").ejGrid("setCellValue", index, "e_reg_complaint_No", ComplaintNo);
        $("#ActionTakenPanelGrid").ejGrid("setCellValue", index, "Action_date", date);
    }
    function cellEditOtherProducts(args) {

        var result = this.getSelectedRecords();
        var gridInstance = $("#otherProductsGrid").ejGrid("instance");
        var productindex = gridInstance.selectedRowsIndexes;
        var grid = this._id;
        var Rcode = $("#e_reg_complaint_code").val();
        var ComplaintNo = window.Complaint_No;
        $("#otherProductsGrid").ejGrid("setCellValue", productindex, "e_reg_complaint_code", Rcode);
        $("#otherProductsGrid").ejGrid("setCellValue", productindex, "e_reg_complaint_No", ComplaintNo);
    }


    function cellEditActionTaken(args) {
        //e.detailsElement.find("#ActionTakenGrd" + window.regcode).ejGrid({
        var gridInstance = $("#ActionTakenGrd" + window.regcode).ejGrid("instance");
        var actionTakenindex = gridInstance.selectedRowsIndexes;
        var grid = this._id;
        var Rcode = $("#e_reg_complaint_code").val();
        //alert(grid);
       // $("#ActionTakenGrd" + window.regcode).ejGrid("setCellValue", actionTakenindex, "e_reg_track_complaint_code", window.regcode);

        $("#ActionTakenGrd" + window.regcode).ejGrid("setCellValue", actionTakenindex, "e_reg_complaint_code", Rcode);
        $("#ActionTakenGrd" + window.regcode).ejGrid("setCellValue", actionTakenindex, "e_reg_complaint_No", window.Complaint_No);
        $("#ActionTakenGrd" + window.regcode).ejGrid("setCellValue", actionTakenindex, "batch_no", window.batchno);
        $("#ActionTakenGrd" + window.regcode).ejGrid("setCellValue", actionTakenindex, "product_code", window.productcode);


    }

    function cascadeEventSubCounty(args) {
        args.requiresDefaultFilter = false; // restrict the built-in mapping for cascading dropdown
        args.cascadeQuery = ej.Query().where("subcounty_id", "equal", args.cascadeValue); // query to filter value based id
    }

    function cascadeEventParish(args) {
        args.requiresDefaultFilter = false; // restrict the built-in mapping for cascading dropdown
        args.cascadeQuery = ej.Query().where("parish_id", "equal", args.cascadeValue); // query to filter value based id
    }
</script>
<script>

    function SaveBatch(args) {

        var message = "";
        var messageadded = "";

        if (args.batchChanges.added.length > 0) {
            console.log(JSON.stringify(args.batchChanges.added));
        }

        for (var i = 0; i < args.batchChanges.added.length; i++) {
            var messageadded = messageadded + "\n" + "Are you sure to add new records " + args.batchChanges.added[i].product_code + " Manufactured by " + args.batchChanges.added[i].Manufacturer + " in Batch " + args.batchChanges.added[i].batch_no + " identified on " + args.batchChanges.added[i].date_quality_issue_identified + " in row " + i;
            //check for validity of columns
            var date_issue_identified = args.batchChanges.added[i].date_quality_issue_identified;
            var row = i + 1;
            if (Date.parse(date_issue_identified)) {
                //Valid date
            } else {
                alert('The Date the issue was identified in row ' + row + ' is invalid!!!');
                args.cancel = true // Don't save the data'
            }
        }
        if (confirm(messageadded)) {
            //if yes ,data will save
        }


        for (var i = 0; i < args.batchChanges.changed.length; i++) {
            var message = message + "\n" + "Would you like to update the following records? " + args.batchChanges.changed[i].product_code + " Manufactured by " + args.batchChanges.changed[i].manufacturer + " in Batch " + args.batchChanges.changed[i].batch_no + " identified on " + args.batchChanges.changed[i].date_quality_issue_identified + " in row " + i
        }
        //if (isupdate) {
        //    if (confirm(message)) {
        //        //if yes ,data will save
        //    }
        //    else
        //        args.cancel = true // if no the data wount save
        //}
        //isupdate = false
    }

    //function toolbarClick(args) {
    //    var grid = document.getElementById("Grid").ej2_instances[0];
    //    if (args.item.properties.prefixIcon == "e-update") {
    //        isupdate = true
    //    }

    //}

</script>

<style>
    #targetElement {
        width: 500px;
        height: 500px;
        margin: 0 auto;
    }

    #UploadDefault {
        margin: 0 auto;
    }
</style>

<script type="text/javascript">


    $.views.helpers({
        formatDate: function (date) {
            var d = new Date(date),
                month = '' + (d.getMonth() + 1),
                day = '' + d.getDate(),
                year = d.getFullYear();

            if (month.length < 2) month = '0' + month;
            if (day.length < 2) day = '0' + day;

            return [day, month, year].join('-');
        }
    });

</script>

<script>
    function childLoad(args) {
        //var jsonResponse = JSON.parse(this.model.parentDetails.parentRowData);
        console.log(JSON.stringify(this.model.parentDetails.parentRowData));
        // console.log(JSON.stringify(this.model));
        var data = this.model.parentDetails.parentRowData.e_reg_complaint_code;
        var batch_nodata = this.model.parentDetails.parentRowData.batch_no;
        var product_codedata = this.model.parentDetails.parentRowData.product_code;
        var QualityIssue_code = this.model.parentDetails.parentRowData.QualityIssue_code;

        //Global Variables to use while saving the docs
        window.batchno = batch_nodata;
        window.productcode = product_codedata;
        window.product_comp_code = QualityIssue_code
        //window.regcode = data;

        //alert('complaint_code :' + data + ' Batch No :' + window.batchno + ' Prod No :' + window.product_comp_code);
        //  console.log(JSON.stringify(this.model.query));

        this.model.query = new ej.Query();
        this.model.query.addParams("e_reg_complaint_code", window.regcode);
        this.model.query.addParams("batchno", batch_nodata);
        this.model.query.addParams("productcode", product_codedata);
        // console.log(JSON.stringify(this.model.query));
        //alert('complaint_code :' + data + ' Batch No :' + batch_nodata + ' Prod No :' + productcode);

    }
</script>
<script>
    function SaveRecs(args) {
        alert('Ouch !!!');
    }
</script>


<script id="tabGridContents" type="text/x-jsrender">
    @*<b>Product Support Documents and Actions</b>*@
    @* @Html.EJ().Button("btnsup_Actions").Size(ButtonSize.Medium).Height("30").Width("70").Text("Ok")*@
    @*<input id="btnSupportActions" type="button" value="Save" onclick="SaveRecs()" />*@

    <div class="tabcontrol" id="defaultTab">
        <ul>
            <li style="background:blue;"><a href="#tab1{{:Id}}"><b style="color:white">Quality Issue(s) @*& Intervention*@</b></a></li>
            <li style="background:#2db833; color:black"><a href="#tab2{{:Id}}"><b style="color:white">Documents</b></a></li>
            <li style="background:black; color:black"><a href="#tabDocs{{:Id}}"><b style="color:white">Docs Checklist</b></a></li>

            <li style="background:Tomato; color:white" id="Pre_invest"><a href="#tab3{{:Id}}"><b style="color:white">Preliminary Investigation</b></a></li>
            <li style="background:#c028b9; color:white " id="Detailed_invest"><a href="#tab4{{:Id}}"><b style="color:white">Detailed Investigation</b></a></li>
            <li style="background:#f29d08; color:white " id="Quarantine"><a href="#tab5{{:Id}}"><b style="color:white">Cert of Release from Quarantine</b></a></li>
            <li style="background:#ddbf36; color:white " id="Release"><a href="#tab6{{:Id}}"><b style="color:white">Quality Issue Close Out Certificate</b></a></li>

        </ul>
        <div id="tab1{{:Id}}">
            <div id="ActionTakenGrd{{:Id}}">
            </div>

        </div>
        <div id="tab2{{:Id}}">
            <div id="detailGrid{{:Id}}">
            </div>
        </div>

        <div id="tabDocs{{:Id}}">
            <div id="docsGrid{{:Id}}">
            </div>
        </div>

        <div id="tab3{{:Id}}">
            <div id="PreInvestGrd{{:Id}}">
            </div>
        </div>
        <div id="tab4{{:Id}}">
            <div>
                <div id="DetailInvestGrd{{:Id}}"></div>
            </div>
        </div>
        <div class="Quarantine" id="tab5{{:Id}}">
            <div>
                @*<div id="ReleaseQuarantineGrd{{:Id}}"></div>*@
                <table style="width:100%">
                    <tr hidden="hidden">
                        <td><input type="text" id="Release_ID" name="Release_ID" value="{{:Release_ID}}" class="e-field e-ejinputtext valid" style="width:100%;" /></td>
                        <td></td>
                        <td></td>
                    </tr>
                    <tr>
                        <td colspan="3" style="background-color:#C62828; color:white; padding-left:5px;"><label>Summary of Quality Issue And QA Investigation</label></td>
                    </tr>
                    <tr>
                        <td style="width:15%;">
                            <label id="Release_Summary_label">Summary of Investigations</label>
                        </td>
                        <td colspan="2">
                            <textarea id="Release_Summary" name="Release_Summary" class="form-control" value="{{:Release_Summary}}" style="max-width:100%; width:100%;">{{:Release_Summary}}</textarea>
                        </td>
                    </tr>
                    <tr>
                        <td><label id="Release1_Instruction_label">Release Instruction</label></td>
                        <td colspan="2"><input type="text" id="Release1_Instruction" name="Release1_Instruction" value="{{:Release1_Instruction}}" class="e-field e-ejinputtext valid" style="width:100%;" /></td>
                    </tr>
                    <tr>
                        <td colspan="3" style="background-color:#C62828; color:white; padding-left:5px;"><label>Documents Attached</label></td>
                    </tr>
                    <tr>
                        <td><label>Documents</label></td>
                        <td><label>Yes / No / N/A</label>
                        <td><label>Comment</label></td>
                    </tr>
                    <tr>
                        <td><label>Returned Note</label></td>
                        <td><input type="text" id="Release_Returned_Note" name="Release_Returned_Note" value="{{:Release_Returned_Note}}" class="e-field e-ejinputtext valid" style="width:100%;" /></td>
                        <td><textarea id="Returned1_Note_Comment" name="Returned1_Note_Comment" class="form-control" value="{{:Returned1_Note_Comment}}" style="max-width:100%; width:100%;">{{:Returned1_Note_Comment}}</textarea></td>
                    </tr>
                    <tr>
                        <td><label>Others (Specify)</label></td>
                        <td colspan="2"><textarea id="Other1_attachment" name="Other1_attachment" class="form-control" value="{{:Other1_attachment}}" style="max-width:100%; width:100%;">{{:Other1_attachment}}</textarea></td>
                    </tr>
                    <tr>
                        <td colspan="3" style="background-color:#C62828; color:white; padding-left:5px;"><label>RELEASE DETAILS</label></td>
                    </tr>
                    <tr>
                        <td colspan="3" style="background-color:#4a26fd; color:white; padding-left:5px;"><label>Maul Staff</label></td>
                    </tr>
                    <tr>
                        <td><label>Authorised By</label></td>
                        <td><label>Date</label></td>
                        <td></td>
                    </tr>
                    <tr>
                        <td><input type="text" id="AuthorisedBy" name="AuthorisedBy" value="{{:AuthorisedBy}}" class="e-field e-ejinputtext valid" style="width:100%;" /></td>
                        <td><input type="text" id="AuthorisedBy_Date" name="AuthorisedBy_Date" value="{{:AuthorisedBy_Date}}" class="e-field e-ejinputtext valid" style="width:100%;" /></td>
                        <td></td>
                    </tr>
                    <tr>
                        <td><label>Released by</label></td>
                        <td><label></label>Date</td>
                        <td></td>
                    </tr>
                    <tr>
                        <td><input type="text" id="ReleasedBy" name="ReleasedBy" value="{{:ReleasedBy}}" class="e-field e-ejinputtext valid" style="width:100%;" /></td>
                        <td><input type="text" id="ReleasedBy_Date" name="ReleasedBy_Date" value="{{:ReleasedBy_Date}}" class="e-field e-ejinputtext valid" style="width:100%;" /></td>
                        <td></td>
                    </tr>
                    <tr>
                        <td colspan="3" style="background-color:#4a26fd; color:white; padding-left:5px;"><label>Supplier</label></td>
                    </tr>
                    <tr>
                        <td><label>Recieved By</label></td>
                        <td><label></label>Date</td>
                        <td></td>
                    </tr>
                    <tr>
                        <td><input type="text" id="ReceivedBy" name="ReceivedBy" value="{{:ReceivedBy}}" class="e-field e-ejinputtext valid" style="width:100%;" /></td>
                        <td><input type="text" id="ReceivedBy_Date" name="ReceivedBy_Date" value="{{:ReceivedBy_Date}}" class="e-field e-ejinputtext valid" style="width:100%;" /></td>
                        <td></td>
                    </tr>
                    <tr>
                        <td></td>
                        <td></td>
                        <td><a class="btn btn-primary btn-block" onclick=" SaveRelease()">Save Record</a></td>
                    </tr>
                </table>
            </div>
        </div>
        <div class="Quarantine" id="tab6{{:Id}}">
            <div>
                @*<div id="QICloseOutGrd{{:Id}}"></div>*@
                <table style="width:100%">
                    <tr hidden="hidden">
                        <td><input type="text" id="QA_ID" name="QA_ID" value="{{:QA_ID}}" class="e-field e-ejinputtext valid" style="width:100%;" /></td>
                        <td></td>
                        <td></td>
                    </tr>
                    <tr>
                        <td colspan="3" style="background-color:#C62828; color:white; padding-left:5px;"><label>Summary of Quality Issue And QA Investigation</label></td>
                    </tr>
                    <tr>
                        <td style="width:15%;">
                            <label id="Summary_of_Investigations_label">Summary of Investigations</label>
                        </td>
                        <td colspan="2">
                            <textarea id="Summary_of_Investigations" name="Summary_of_Investigations" class="form-control" value="{{:Summary_of_Investigations}}" style="max-width:100%; width:100%;">{{:Summary_of_Investigations}}</textarea>
                        </td>
                    </tr>
                    <tr>
                        <td><label id="Release_Instruction_label">Release Instruction</label></td>
                        <td colspan="2"><input type="text" id="Release_Instruction" name="Release_Instruction" value="{{:Release_Instruction}}" class="e-field e-ejinputtext valid" style="width:100%;" /></td>
                    </tr>
                    <tr>
                        <td colspan="3" style="background-color:#C62828; color:white; padding-left:5px;"><label>Documents Attached</label></td>
                    </tr>
                    <tr>
                        <td><label>Documents</label></td>
                        <td><label>Yes / No / N/A</label>
                        <td><label>Comment</label></td>
                    </tr>
                    <tr>
                        <td><label>Complaint Report Form</label></td>
                        <td><input type="text" id="Complaint_Report" name="Complaint_Report" value="{{:Complaint_Report}}" class="e-field e-ejinputtext valid" style="width:100%;" /></td>
                        <td><textarea id="Complaint_Report_Comment" name="Complaint_Report_Comment" class="form-control" value="{{:Complaint_Report_Comment}}" style="max-width:100%; width:100%;">{{:Complaint_Report_Comment}}</textarea></td>
                    </tr>
                    <tr>
                        <td><label>Notification of PAC</label></td>
                        <td><input type="text" id="Notification_PAC" name="Notification_PAC" value="{{:Notification_PAC}}" class="e-field e-ejinputtext valid" style="width:100%;" /></td>
                        <td><textarea id="Notification_PAC_Comment" name="Notification_PAC_Comment" class="form-control" value="{{:Notification_PAC_Comment}}" style="max-width:100%; width:100%;">{{:Notification_PAC_Comment}}</textarea></td>
                    </tr>
                    <tr>
                        <td><label>Notification of Vendor</label></td>
                        <td><input type="text" id="Notification_Vendor" name="Notification_Vendor" value="{{:Notification_Vendor}}" class="e-field e-ejinputtext valid" style="width:100%;" /></td>
                        <td><textarea id="Notification_Vendor_Comment" name="Notification_Vendor_Comment" class="form-control" value="{{:Notification_Vendor_Comment}}" style="max-width:100%; width:100%;">{{:Notification_Vendor_Comment}}</textarea></td>
                    </tr>
                    <tr>
                        <td><label>Product COAs(At MAUL lab)</label></td>
                        <td><input type="text" id="Product_COAs" name="Product_COAs" value="{{:Product_COAs}}" class="e-field e-ejinputtext valid" style="width:100%;" /></td>
                        <td><textarea id="Product_COAs_Comment" name="Product_COAs_Comment" class="form-control" value="{{:Product_COAs_Comment}}" style="max-width:100%; width:100%;">{{:Product_COAs_Comment}}</textarea></td>
                    </tr>
                    <tr>
                        <td><label>CAPA</label></td>
                        <td><input type="text" id="CAPA" name="CAPA" value="{{:CAPA}}" class="e-field e-ejinputtext valid" style="width:100%;" /></td>
                        <td><textarea id="CAPA_Comment" name="CAPA_Comment" class="form-control" value="{{:CAPA_Comment}}" style="max-width:100%; width:100%;">{{:CAPA_Comment}}</textarea></td>
                    </tr>
                    <tr>
                        <td><label>Returned Note(Where applicable)</label></td>
                        <td><input type="text" id="Returned_Note" name="Returned_Note" value="{{:Returned_Note}}" class="e-field e-ejinputtext valid" style="width:100%;" /></td>
                        <td><textarea id="Returned_Note_Comment" name="Returned_Note_Comment" class="form-control" value="{{:Returned_Note_Comment}}" style="max-width:100%; width:100%;">{{:Returned_Note_Comment}}</textarea></td>
                    </tr>
                    <tr>
                        <td><label>Credit Note (Where Applicable)</label></td>
                        <td><input type="text" id="Credit_Note" name="Credit_Note" value="{{:Credit_Note}}" class="e-field e-ejinputtext valid" style="width:100%;" /></td>
                        <td><textarea id="Credit_Note_Comment" name="Credit_Note_Comment" class="form-control" value="{{:Credit_Note_Comment}}" style="max-width:100%; width:100%;">{{:Credit_Note_Comment}}</textarea></td>
                    </tr>
                    <tr>
                        <td><label>Reconciliation</label></td>
                        <td><input type="text" id="Reconciliation" name="Reconciliation" value="{{:Reconciliation}}" class="e-field e-ejinputtext valid" style="width:100%;" /></td>
                        <td><textarea id="Reconciliation_Comment" name="Reconciliation_Comment" class="form-control" value="{{:Reconciliation_Comment}}" style="max-width:100%; width:100%;">{{:Reconciliation_Comment}}</textarea></td>
                    </tr>
                    <tr>
                        <td><label>NDA Notification</label></td>
                        <td><input type="text" id="NDA_Notification" name="NDA_Notification" value="{{:NDA_Notification}}" class="e-field e-ejinputtext valid" style="width:100%;" /></td>
                        <td><textarea id="NDA_Notification_Comment" name="NDA_Notification_Comment" class="form-control" value="{{:NDA_Notification_Comment}}" style="max-width:100%; width:100%;">{{:NDA_Notification_Comment}}</textarea></td>
                    </tr>
                    <tr>
                        <td><label>Others (Specify)</label></td>
                        <td colspan="2"><textarea id="Other_attachment" name="Other_attachment" class="form-control" value="{{:Other_attachment}}" style="max-width:100%; width:100%;">{{:Other_attachment}}</textarea></td>
                    </tr>
                    <tr>
                        <td colspan="3" style="background-color:#C62828; color:white; padding-left:5px;"><label>SIGN OFF DETAILS</label></td>
                    </tr>
                    <tr>
                        <td><label>Warehouse officer</label></td>
                        <td><label>Date</label></td>
                        <td></td>
                    </tr>
                    <tr>
                        <td><input type="text" id="Warehouse_Officer" name="Warehouse_Officer" value="{{:Warehouse_Officer}}" class="e-field e-ejinputtext valid" style="width:100%;" /></td>
                        <td><input type="text" id="Warehouse_Date" name="Warehouse_Date" value="{{:Warehouse_Date}}" class="e-field e-ejinputtext valid" style="width:100%;" /></td>
                        <td></td>
                    </tr>
                    <tr>
                        <td><label>Finance Manager</label></td>
                        <td><label></label>Date</td>
                        <td></td>
                    </tr>
                    <tr>
                        <td><input type="text" id="Finance_Manager" name="Finance_Manager" value="{{:Finance_Manager}}" class="e-field e-ejinputtext valid" style="width:100%;" /></td>
                        <td><input type="text" id="Finance_Date" name="Finance_Date" value="{{:Finance_Date}}" class="e-field e-ejinputtext valid" style="width:100%;" /></td>
                        <td></td>
                    </tr>
                    <tr>
                        <td><label>Director Technical operations/Quality Assurance officer</label></td>
                        <td><label>Date</label></td>
                        <td></td>
                    </tr>
                    <tr>
                        <td><input type="text" id="Director_Technical" name="Director_Technical" value="{{:Director_Technical}}" class="e-field e-ejinputtext valid" style="width:100%;" /></td>
                        <td><input type="text" id="Director_Technical_Date" name="Director_Technical_Date" value="{{:Director_Technical_Date}}" class="e-field e-ejinputtext valid" style="width:100%;" /></td>
                        <td></td>
                    </tr>
                    <tr>
                        <td><label>Executive Director/Pharmacist in charge</label></td>
                        <td><label>Date</label></td>
                        <td></td>
                    </tr>
                    <tr>
                        <td><input type="text" id="Executive_Director" name="Executive_Director" value="{{:Executive_Director}}" class="e-field e-ejinputtext valid" style="width:100%;" /></td>
                        <td><input type="text" id="Executive_Director_Date" name="Executive_Director_Date" value="{{:Executive_Director_Date}}" class="e-field e-ejinputtext valid" style="width:100%;" /></td>
                        <td></td>
                    </tr>
                    <tr>
                        <td></td>
                        <td></td>
                        <td><a class="btn btn-primary btn-block" onclick="SaveCloseOut()">Save Record</a></td>
                    </tr>
                </table>
            </div>
        </div>
    </div>
</script>

<script type="text/javascript">
    function detailGridData(e) {
        $("#Pre_invest").show();
        $("#Detailed_invest").hide();
        $("#Quarantine").hide();
        $("#Release").hide();
            var Rcode = $("#e_reg_complaint_code").val();

            var DataRelease_Instruction =@Html.Raw(Json.Encode(ViewBag.fo_a_release_instruction));
            var DDL_release_Instruction = $('#Release1_Instruction').ejDropDownList({

                dataSource: DataRelease_Instruction,
                enabled: true,
                width: "250px",
                fields: { value: "RI_code", text: "Release_Instruction_Desc" },
            }).data("ejDropDownList");

            var DDL_Release=  $('#Release_Instruction').ejDropDownList({

                dataSource: DataRelease_Instruction,
                enabled: true,
                width: "250px",
                fields: { value: "RI_code", text: "Release_Instruction_Desc" },
            }).data("ejDropDownList");
            var dataYesNo =@Html.Raw(Json.Encode(ViewBag.YesNo));
            var DDL_release_Returned = $('#Release_Returned_Note').ejDropDownList({
                dataSource: dataYesNo,
                enabled: true,
                width: "250px",
                fields: { value: "yes_no_id", text: "yes_no_desc" },
            }).data("ejDropDownList");
            var DDL_Complaint= $('#Complaint_Report').ejDropDownList({

                dataSource: dataYesNo,
                enabled: true,
                width: "250px",
                fields: { value: "yes_no_id", text: "yes_no_desc" },
         }).data("ejDropDownList");
            var DDL_PAC = $('#Notification_PAC').ejDropDownList({

                dataSource: dataYesNo,
                enabled: true,
                width: "250px",
                fields: { value: "yes_no_id", text: "yes_no_desc" },
            }).data("ejDropDownList");
            var DDL_Vendor= $('#Notification_Vendor').ejDropDownList({

                dataSource: dataYesNo,
                enabled: true,
                width: "250px",
                fields: { value: "yes_no_id", text: "yes_no_desc" },
            }).data("ejDropDownList");
            var DDL_COAs= $('#Product_COAs').ejDropDownList({

                dataSource: dataYesNo,
                enabled: true,
                width: "250px",
                fields: { value: "yes_no_id", text: "yes_no_desc" },
            }).data("ejDropDownList");
            var DDL_CAPA= $('#CAPA').ejDropDownList({

                dataSource: dataYesNo,
                enabled: true,
                width: "250px",
                fields: { value: "yes_no_id", text: "yes_no_desc" },
            }).data("ejDropDownList");
            var DDL_Returned=$('#Returned_Note').ejDropDownList({

                dataSource: dataYesNo,
                enabled: true,
                width: "250px",
                fields: { value: "yes_no_id", text: "yes_no_desc" },
            }).data("ejDropDownList");
            var DDL_Credit= $('#Credit_Note').ejDropDownList({

                dataSource: dataYesNo,
                enabled: true,
                width: "250px",
                fields: { value: "yes_no_id", text: "yes_no_desc" },
            }).data("ejDropDownList");
            var DDL_Recon= $('#Reconciliation').ejDropDownList({

                dataSource: dataYesNo,
                enabled: true,
                width: "250px",
                fields: { value: "yes_no_id", text: "yes_no_desc" },
            }).data("ejDropDownList");
            var DDL_NDA=$('#NDA_Notification').ejDropDownList({

                dataSource: dataYesNo,
                enabled: true,
                width: "250px",
                fields: { value: "yes_no_id", text: "yes_no_desc" },
         }).data("ejDropDownList");
            var maul_staff =@Html.Raw(Json.Encode(ViewBag.MAUL_Staff));
            var DDL_AuthorisedBy = $('#AuthorisedBy').ejDropDownList({

                dataSource: maul_staff,
                enabled: true,
                width: "250px",
                fields: { value: "cp_code", text: "cp_name" },
            }).data("ejDropDownList");
            var DDL_ReceivedBy = $('#ReceivedBy').ejDropDownList({

                dataSource: maul_staff,
                enabled: true,
                width: "250px",
                fields: { value: "cp_code", text: "cp_name" },
            }).data("ejDropDownList");
            var DDL_ReleasedBy = $('#ReleasedBy').ejDropDownList({

                dataSource: maul_staff,
                enabled: true,
                width: "250px",
                fields: { value: "cp_code", text: "cp_name" },
            }).data("ejDropDownList");
         var DDL_Warehouse= $('#Warehouse_Officer').ejDropDownList({

             dataSource: maul_staff,
             enabled: true,
             width: "250px",
             fields: { value: "cp_code", text: "cp_name" },
         }).data("ejDropDownList");
         var DDL_Finance= $('#Finance_Manager').ejDropDownList({

             dataSource: maul_staff,
             enabled: true,
             width: "250px",
             fields: { value: "cp_code", text: "cp_name" },
         }).data("ejDropDownList");
         var DDL_Director= $('#Director_Technical').ejDropDownList({

             dataSource: maul_staff,
             enabled: true,
             width: "250px",
             fields: { value: "cp_code", text: "cp_name" },
         }).data("ejDropDownList");
         var DDL_Exec= $('#Executive_Director').ejDropDownList({

             dataSource: maul_staff,
             enabled: true,
             width: "250px",
             fields: { value: "cp_code", text: "cp_name" },
         }).data("ejDropDownList");
         $("#AuthorisedBy_Date").ejDatePicker({ /*maxDate: new Date(),*/ dateFormat: "dd/MM/yyyy" });
         $("#ReleasedBy_Date").ejDatePicker({ /*maxDate: new Date(),*/ dateFormat: "dd/MM/yyyy" });
         $("#ReceivedBy_Date").ejDatePicker({ /*maxDate: new Date(),*/ dateFormat: "dd/MM/yyyy" });

            $("#Warehouse_Date").ejDatePicker({ /*maxDate: new Date(),*/ dateFormat: "dd/MM/yyyy" });
            $("#Finance_Date").ejDatePicker({ /*maxDate: new Date(),*/ dateFormat: "dd/MM/yyyy" });
            $("#Director_Technical_Date").ejDatePicker({ /*maxDate: new Date(),*/ dateFormat: "dd/MM/yyyy" });
            $("#Executive_Director_Date").ejDatePicker({/* maxDate: new Date(),*/ dateFormat: "dd/MM/yyyy" });

        var filteredData = e.data["QualityIssue_code"];
        var keyId = e.data["e_reg_complaint_code"];
        var batchno = e.data["batch_no"];
        var productcode = e.data["product_code"];
        var regcode = e.data["Id"];

        window.keyId = e.data["e_reg_complaint_code"];
        window.batchno = e.data["batch_no"];
        window.productcode = e.data["product_code"];
        window.regcode = e.data["Id"];
        window.product_comp_code = e.data["QualityIssue_code"];
         //QA_ID
        $.ajax({
            url: "GetQICloseOut",
            type: "GET",
            dataType: "json",
            data: {
                "e_reg_complaint_code": Rcode,
                "product_code": window.productcode,
                "batchno": window.batchno
                },
            success: function (data) {
                debugger;
                if (data != null) {
                    var formatedData = ej.parseJSON(data);
                    $("#QA_ID").val(data.Id);
                    $("#Summary_of_Investigations").val(data.Summary_of_Investigations);
                    DDL_Release.selectItemByValue(data.Release_Instruction);
                    $("#Other_attachment").val(data.Other_attachment);
                    var _warehouse = dateString(formatedData.Warehouse_Date);
                    DDL_Warehouse.selectItemByValue(data.Warehouse_Officer);
                    $("#Warehouse_Date").val(_warehouse);
                    DDL_Finance.selectItemByValue(data.Finance_Manager);
                    var _Finance_Date = dateString(formatedData.Finance_Date);
                    $("#Finance_Date").val(_Finance_Date);
                    DDL_Director.selectItemByValue(data.Director_Technical);
                    var _Technical_Date = dateString(formatedData.Director_Technical_Date);
                    $("#Director_Technical_Date").val(_Technical_Date);
                    DDL_Exec.selectItemByValue(data.Executive_Director);
                    var _Director_Date = dateString(formatedData.Executive_Director_Date);
                    $("#Executive_Director_Date").val(_Director_Date);
                    DDL_Complaint.selectItemByValue(data.Complaint_Report);
                    $("#Complaint_Report_Comment").val(data.Complaint_Report_Comment);
                    DDL_PAC.selectItemByValue(data.Notification_PAC);
                    $("#Notification_PAC_Comment").val(data.Notification_PAC_Comment);
                    DDL_Vendor.selectItemByValue(data.Notification_Vendor);
                    $("#Notification_Vendor_Comment").val(data.Notification_Vendor_Comment);
                    $("#Product_COAs").val(data.Product_COAs);
                    DDL_COAs.selectItemByValue(data.Notification_PAC);
                    $("#Product_COAs_Comment").val(data.Product_COAs_Comment);
                    $("#CAPA").val(data.CAPA);
                    DDL_CAPA.selectItemByValue(data.CAPA);
                    $("#CAPA_Comment").val(data.CAPA_Comment);
                    $("#Returned_Note").val(data.Returned_Note);
                    DDL_Returned.selectItemByValue(data.Returned_Note);
                    $("#Returned_Note_Comment").val(data.Returned_Note_Comment);
                    $("#Credit_Note").val(data.Credit_Note);
                    DDL_Credit.selectItemByValue(data.Credit_Note);
                    $("#Credit_Note_Comment").val(data.Credit_Note_Comment);
                    $("#Reconciliation").val(data.Reconciliation);
                    DDL_Recon.selectItemByValue(data.Reconciliation);
                    $("#Reconciliation_Comment").val(data.Reconciliation_Comment);
                    $("#NDA_Notification").val(data.NDA_Notification);
                    DDL_NDA.selectItemByValue(data.NDA_Notification);
                    $("#NDA_Notification_Comment").val(data.NDA_Notification_Comment);
                    $("#Release").show();
                }
            }
        });
        $.ajax({
            url: "GetQIRelease",
            type: "GET",
            dataType: "json",
            data: {
                "e_reg_complaint_code": Rcode,
                "product_code": window.productcode,
                "batchno": window.batchno
            },
            success: function (data) {
                if (data != null) {
                    var formatedData = ej.parseJSON(data);
                    $("#Release_ID").val(data.Id);
                    $("#Release_Summary").val(data.Summary_of_Investigations);
                    DDL_release_Instruction.selectItemByValue(data.Release_Instruction);
                    $("#Other1_attachment").val(data.attached_other);
                    var _AuthorisedBy = dateString(formatedData.Release_Authorized_Date);
                    DDL_AuthorisedBy.selectItemByValue(data.Release_Authorizedby);
                    $("#AuthorisedBy_Date").val(_AuthorisedBy);
                    DDL_release_Returned.selectItemByValue(data.Goods_Returned_Note);
                    var _ReleasedBy_Date = dateString(formatedData.Release_Date);
                    $("#ReleasedBy_Date").val(_ReleasedBy_Date);
                    DDL_ReleasedBy.selectItemByValue(data.Released_By);
                    var _ReceivedBy_Date = dateString(formatedData.Received_Date);
                    alert(formatedData.Received_Date);
                    $("#ReceivedBy_Date").val(_ReceivedBy_Date);
                    DDL_ReceivedBy.selectItemByValue(data.Received_by);
                    $("#Returned1_Note_Comment").val(data.Goods_Returned_Note_Commet);
                }
            }
        });

        //alert(window.Complaint_No);
        //$.ajax({
        //    url: "BatchData_QICloseOut1?regCompCode = " + 2 + " & batchno=" + 123 + " & product_code=" + 20045,
        //    type: "Get",
        //    dataType: "json",
        //    //data: {
        //    //    "startMonth": StartDate,
        //    //    "endMonth": EndDate
        //    //},
        //    success: function (dataX) {
        //        //if (dataX.length > 0) {
        //        //   // console.log(JSON.stringify(dataX));
        //        //}
        //        debugger;
        //        alert('---');
        //        alert(dataX[0].Summary_of_Investigations);
        //        //var formatData = ej.parseJSON(data);
        //        //var grid = $("#ScoringGrid").ejGrid("instance");
        //        //grid.dataSource(data);
        //        //grid.dataSource(formatData);
        //    },
        //    error: function (xhr, status, error) {
        //        debugger;
        //        //console.log(JSON.stringify(dataX));
        //        alert(error);
        //        //var err = JSON.parse(xhr.responseText);
        //        //alert(err.Message);
        //        //alert(xhr.responseText);

        //    }
        //});

        //saveUrl: "SaveSupportingDoc?regcode=" + window.regcode + "&batch_no=" + window.batchno + "&product_code=" + window.productcode + "&product_comp_code=" + window.product_comp_code,

        ////Global Variables to use while saving the docs
        //window.batchno = batch_nodata;
        //window.productcode = product_codedata;
        //window.product_comp_code = QualityIssue_code
        //window.regcode = data;
        //alert('complaint_code :' + data + ' Batch No :' + window.batchno + ' Prod No :' + window.product_comp_code);

       // alert('e_reg_complaint_code: ' + keyId + ' Id: ' + regcode + ' batchno: ' + batchno + ' productcode: ' + productcode);
       // console.log(e.data);
        //var data = ej.DataManager(window.ordersView).executeLocal(ej.Query().where("QualityIssue_code", "equal", parseInt(filteredData), true));
        var data = ej.DataManager({
            // url: 'LoadGridFiles?e_reg_complaint_code=' + window.e_reg_complaint_code + '&batchno=' + window.batchno + '&productcode=' + window.productcode,
            url: 'LoadGridFiles?e_reg_complaint_code=' + window.Complaint_No + '&batchno=' + batchno + '&productcode=' + productcode,
            updateUrl: "DialogInsertSupDoc?compcode=" + regcode,
            insertUrl: "DialogInsertSupDoc?compcode=" + regcode,
            removeUrl: "DialogDeleteSupDoc",
            adaptor: new ej.UrlAdaptor()
        });//.executeLocal(ej.Query().where("Id", "equal", filteredData, true));

        var Action_Taken =@Html.Raw(Json.Encode(ViewBag.fo_a_action_taken));

        var dataGrid2 = ej.DataManager({ url: "BatchData_Complaint_Tracker?e_reg_track_code=" + window.Complaint_No, batchUrl: "BatchUpdateComplaint_Tracker", adaptor: "UrlAdaptor" });
        var dataActionTaken = ej.DataManager({ url: 'QualityComplaints?e_reg_complaint_code=' + window.Complaint_No + "&batchno=" + batchno + "&productcode=" + productcode, batchUrl: "BatchUpdateQualityIssues", adaptor: "UrlAdaptor" });
       // console.log(dataActionTaken);
        var dataPreInvestGrd = ej.DataManager({ url: "BatchData_QI?regCompCode=" + window.Complaint_No + "&batchno=" + batchno + "&product_code=" + productcode, batchUrl: "BatchUpdate_QI", adaptor: "UrlAdaptor" });
        var dataDetailInvestGrd = ej.DataManager({ url: "BatchDataDetailInvestGrd_QI?regCompCode=" + window.Complaint_No + "&batchno=" + batchno + "&product_code=" + productcode, batchUrl: "BatchUpdate_QI", adaptor: "UrlAdaptor" });
        //var dataReleaseQuarantineGrd = ej.DataManager({ url: "BatchData_Certificate_Release_frm_Quarantine?regCompCode=" + window.Complaint_No + "&batchno=" + batchno + "&product_code=" + productcode, batchUrl: "BatchUpdate_Certificate_Release", adaptor: "UrlAdaptor" });
        //var dataQICloseOutGrd = ej.DataManager({ url: "BatchData_QICloseOut?regCompCode=" + window.Complaint_No + "&batchno=" + batchno + "&product_code=" + productcode, batchUrl: "BatchUpdateQICloseOut", adaptor: "UrlAdaptor" });


        var authorized_representative =@Html.Raw(Json.Encode(ViewBag.fo_a_authorized_representative));

        var Documents_Attached =@Html.Raw(Json.Encode(ViewBag.Documents_Attached));
        //e.detailsElement.find("#detailGrid").ejGrid({
        e.detailsElement.find("#detailGrid" + window.regcode).ejGrid({
            dataSource: data,
            cssClass: "detail",
            allowPaging: true, pageSettings: { pageSize: 2 },
            allowScrolling: true,
            scrollSettings: { width: "100%", height: "100%" },
            editSettings: {
                allowEditing: true, allowAdding: true, allowDeleting: true,
                editMode: "dialogtemplate",
                dialogEditorTemplateID: "#SupportDocUploadtemplate",
                showDeleteConfirmDialog: true
            },
            toolbarSettings: {
                showToolbar: true,
                toolbarItems: ["add", /*"edit",*/ "delete", "update"/*, "cancel"*/]
            },
            columns: [
                { field: "Id", visible: false, headerText: 'ID', textAlign: ej.TextAlign.Right, width: 85, isPrimaryKey: true },
                { headerText: "Submitted Evidence", template: "#FileURLtemplate", textAlign: "center", width: 110 },
                { field: "Details", headerText: 'Details', textAlign: ej.TextAlign.Left, width: 120 },
                { field: "e_reg_complaint_code", visible: false, headerText: 'HHCode.', textAlign: ej.TextAlign.Left, width: 100 },
                { field: "e_reg_complaint_No", visible: false, headerText: 'Complaint No.', textAlign: ej.TextAlign.Left, width: 100 },
                { field: "batch_no", visible: false, headerText: 'Batch No.', textAlign: ej.TextAlign.Left, width: 50 },
                { field: "product_code", visible: false, headerText: 'Product Code', textAlign: ej.TextAlign.Left, width: 50 },
                { field: "QualityIssue_code", visible: false, headerText: "QualityIssue_code", width: 100 },
                {
                    headerText: "Manage Records",
                    commands: [
                        { type: "edit", buttonOptions: { text: "Edit" } },
                        { type: "delete", buttonOptions: { text: "Delete" } },
                    ],
                    width: 150
                }
            ],
            actionComplete: "childGridcomplete",
            onActionBegin: "onActionBeginSupDocs"
        });
        e.detailsElement.find("#ActionTakenGrd" + window.regcode).ejGrid({
            dataSource: dataActionTaken, //dataGrid2,
            //cssClass: "gradient-green",
            allowGrouping: false,
            allowScrolling: true,
            scrollSettings: { width: "100%", height: "100%" },
            isResponsive: true,
            enableAltRow: true,
            allowTextWrap: true,
            textWrapSettings: { wrapMode: "both" },
            cellEdit: "cellEditActionTaken",
            allowResizeToFit: true,
            showStackedHeader: true,
            enableResponsiveRow: true,
            queryCellInfo: "ActionTakenCellInfo",
            toolbarSettings: {
                showToolbar: true,
                toolbarItems: ["add", "edit", "delete", "update", "cancel"]
            },
            cellSave: "ActionTakencellsave",
            editSettings: { rowPosition: "bottom", allowEditing: true, allowAdding: true, allowDeleting: true, editMode: 'batch' },
            allowResizeToFit: true,
            columns: [
                { field: "Id", visible: false, allowEditing: true, headerText: "Id", width: 100, isPrimaryKey: false },
                { field: "e_reg_complaint_code", visible: false, headerText: 'HHCode.', textAlign: ej.TextAlign.Left, width: 100 },
                { field: "e_reg_complaint_No", visible: false, headerText: 'Complaint No.', textAlign: ej.TextAlign.Left, width: 100 },
                { field: "batch_no", visible: false, headerText: 'Batch No.', textAlign: ej.TextAlign.Left, width: 50 },
                { field: "product_code", visible: false, headerText: 'Product Code', textAlign: ej.TextAlign.Left, width: 50 },
                {
                    field: "description_of_quality_issue", headerText: "Describe quality issue", headerTooltip: "To add new line use Shift-Enter ", editTemplate: {
                        create: function () {
                            return "<textarea style='width:100%; display:block; max-width:100%;line-height:3.0;padding:15px 15px  30px; border-radius:3px; border:1px solid #F7E98D; font:13px Tahoma, cursive; transition:box-shadow 0.5s ease; box-shadow:0 4px 6px rgba(0,0,0,0.1); font-smoothing:subpixel-antialiased; background:linear-gradient(#F9EFAF, #F7E98D); background:-o-linear-gradient(#F9EFAF, #F7E98D); background:-ms-linear-gradient(#F9EFAF, #F7E98D); background:-moz-linear-gradient(#F9EFAF, #F7E98D); background:-webkit-linear-gradient(#F9EFAF, #F7E98D);'>{{:description_of_quality_issue}}</textarea>";
                        },
                        write: function (args) {
                            $('.text').css("max-width", args.element.parent("td").width());
                            $('.text').css("max-height", args.element.parent("td").height());
                            null;
                        },
                        read: function (args) {
                            return args.val();
                        },
                    }
                    , width: 300,
                },
                {
                    field: "e_reg_track_action_details", headerText: "Details", headerTooltip: "To add new line use Shift-Enter ", editTemplate: {
                        create: function () {
                            return "<textarea style='width:100%; display:block; max-width:100%;line-height:3.0;padding:15px 15px  30px; border-radius:3px; border:1px solid #F7E98D; font:13px Tahoma, cursive; transition:box-shadow 0.5s ease; box-shadow:0 4px 6px rgba(0,0,0,0.1); font-smoothing:subpixel-antialiased; background:linear-gradient(#F9EFAF, #F7E98D); background:-o-linear-gradient(#F9EFAF, #F7E98D); background:-ms-linear-gradient(#F9EFAF, #F7E98D); background:-moz-linear-gradient(#F9EFAF, #F7E98D); background:-webkit-linear-gradient(#F9EFAF, #F7E98D);'>{{:e_reg_track_action_details}}</textarea>";
                        },
                        write: function (args) {
                            $('.text').css("max-width", args.element.parent("td").width());
                            $('.text').css("max-height", args.element.parent("td").height());
                            null;
                        },
                        read: function (args) {
                            return args.val();
                        },
                    }
                    , width: 300,
                },
                { field: "e_reg_track_action_taken", width: 200, headerText: "Action Taken", editType: "dropdownedit", editParams: { showCheckbox: true }, foreignKeyValue: "action_taken_desc", foreignKeyField: "action_taken_code", dataSource: Action_Taken },
                { field: "e_reg_track_date_of_action", headerText: "Date Action was taken", editType: "datepicker", format: "{0:MM/dd/yyyy}", width: 100 },
            ],
        });
        e.detailsElement.find("#docsGrid" + window.regcode).ejGrid({
            dataSource: dataActionTaken, //dataGrid2,
            //cssClass: "gradient-green",
            allowScrolling: true,
            scrollSettings: { width: "100%", height: "100%" },
            allowGrouping: false,
            isResponsive: true,
            enableAltRow: true,
            allowTextWrap: true,
            textWrapSettings: { wrapMode: "both" },
            cellEdit: "cellEditdocs",
            cellSave: "Docscellsave",
            allowResizeToFit: true,
            showStackedHeader: true,
            enableResponsiveRow: true,
            //queryCellInfo: "queryCellInfo",
            toolbarSettings: {
                showToolbar: true,
                toolbarItems: ["add", "edit", "delete", "update", "cancel"]
            },

            editSettings: { rowPosition: "bottom", allowEditing: true, allowAdding: true, allowDeleting: true, editMode: 'batch' },
            allowResizeToFit: true,
            columns: [
                { field: "Id", visible: false, allowEditing: true, headerText: "Id", width: 100, isPrimaryKey: false },
                { field: "e_reg_complaint_code", visible: false, headerText: 'HH Code.', textAlign: ej.TextAlign.Left, width: 100 },
                { field: "e_reg_complaint_No", visible: false, headerText: 'Complaint No.', textAlign: ej.TextAlign.Left, width: 100 },
                { field: "batch_no", visible: false, headerText: 'Batch No.', textAlign: ej.TextAlign.Left, width: 50 },
                { field: "product_code", visible: false, headerText: 'Product Code', textAlign: ej.TextAlign.Left, width: 50 },
                { field: "attached_picture", /*width: 200,*/ headerText: "Attached Pictures", allowEditing: true, editType: "booleanedit", editParams: { showRoundedCorner: true }},
                { field: "attached_email", /*width: 200,*/ headerText: "Attached E-mail", editType: "booleanedit", editParams: { showRoundedCorner: true } },
                { field: "attached_note_letter", /*width: 200,*/ headerText: "Written note/letter", editType: "booleanedit", editParams: { showRoundedCorner: true }},
            ],
        });
        e.detailsElement.find("#PreInvestGrd" + window.regcode).ejGrid({
            dataSource: dataPreInvestGrd,
            cssClass: "invest",
            allowGrouping: false,
            allowScrolling: true,
            scrollSettings: { width: "100%", height: "100%" },
            isResponsive: true,
            enableAltRow: true,
            allowTextWrap: true,
            textWrapSettings: { wrapMode: "both" },
            cellEdit: "PreInvestcellEdit",
            cellSave: "PreInvestcellsave",
            allowResizeToFit: true,
            showStackedHeader: true,
            enableResponsiveRow: true,
            queryCellInfo: "queryCellInfo",
            toolbarSettings: { showToolbar: true, toolbarItems: ["update","edit",'search'] },
            editSettings: { allowEditing: true, allowAdding: false, allowDeleting: false, editMode: 'batch' },
            allowResizeToFit: true,
            columns: [
                { field: "Id", visible: false, allowEditing: true, headerText: "Id", width: 100 },
                { field: "batch_no", visible: false, allowEditing: true, headerText: "batch_no", width: 100 },
                { field: "product_code", visible: false, allowEditing: true, headerText: "product_code", width: 100 },
                { field: "e_reg_complaint_No", visible: false, allowEditing: true, headerText: "Prod. Qual Complaint number", width: 100, isPrimaryKey: false },
                { field: "e_reg_complaint_code", visible: false, allowEditing: true, headerText: "Prod. Qual Complaint Code", width: 100, isPrimaryKey: false },
                { field: "investigation_code", visible: false, allowEditing: false, headerText: "", isPrimaryKey: true },
                { field: "investigation_desc", visible: true, allowEditing: false, headerText: "COMPLAINT INVESTIGATION", width: 400 },
                { field: "yes_no", visible: true, headerText: "Yes/No", width: 100, foreignKeyField: "yes_no_id", foreignKeyValue: "yes_no_desc", dataSource: dataYesNo },
                { field: "Required_Evidence", visible: true, headerText: "Required Evidence", width: 400/*, isPrimaryKey: true */ },

            ],
            create: "onGridCreate",
            actionComplete: function (args) { /*alert("YES");*/ },
            create: function (args) { },
            dataBound: "onActionComplete",// function (args) { }
        });
        e.detailsElement.find("#DetailInvestGrd" + window.regcode).ejGrid({
            dataSource: dataDetailInvestGrd,// ej.DataManager({ url: "BatchDataDetailInvestGrd?regCompCode=" + window.e_reg_complaint_code, batchUrl: "BatchUpdate", adaptor: "UrlAdaptor" }),

            cssClass: "detailinvest",
            allowGrouping: false,
            allowScrolling: true,
            scrollSettings: { width: "100%", height: "100%" },
            isResponsive: true,
            enableAltRow: true,
            allowTextWrap: true,
            textWrapSettings: { wrapMode: "both" },
            cellEdit: "DetailInvestcellEdit",
            cellSave: "DetailedIvestcellsave",
            allowResizeToFit: true,
            showStackedHeader: true,
            enableResponsiveRow: true,
            queryCellInfo: "queryCellInfo",
            toolbarSettings: { showToolbar: true, toolbarItems: ["edit", 'search'] },
            editSettings: { allowEditing: true, allowAdding: false, allowDeleting: false, editMode: 'batch' },
            allowResizeToFit: true,
            columns: [

                { field: "Id", visible: false, allowEditing: false, headerText: "Id", width: 100 },
                { field: "batch_no", visible: false, allowEditing: true, headerText: "batch_no", width: 100 },
                { field: "product_code", visible: false, allowEditing: true, headerText: "product_code", width: 100 },
                { field: "e_reg_complaint_No", visible: false, allowEditing: true, headerText: "Complaint Number", width: 100, isPrimaryKey: false },
                { field: "e_reg_complaint_code", visible: false, allowEditing: true, headerText: "HHcode", width: 50, isPrimaryKey: false },
                { field: "investigation_code", visible: false, allowEditing: false, headerText: "", isPrimaryKey: true },
                { field: "investigation_desc", visible: true, allowEditing: false, headerText: "COMPLAINT INVESTIGATION", width: 400 },
                { field: "yes_no", visible: true, headerText: "Yes/No", width: 100, foreignKeyField: "yes_no_id", foreignKeyValue: "yes_no_desc", dataSource: dataYesNo },
                { field: "Required_Evidence", visible: true, headerText: "Required Evidence", width: 400/*, isPrimaryKey: true */ },

            ],
            create: " onDetailedGridCreate",
            dataBound: "onActionCompleteDetailInvest",// function (args) { }
        });
        //e.detailsElement.find("#ReleaseQuarantineGrd" + window.regcode).ejGrid({
        //    dataSource: dataReleaseQuarantineGrd,// ej.DataManager({ url: "BatchDataDetailInvestGrd?regCompCode=" + window.e_reg_complaint_code, batchUrl: "BatchUpdate", adaptor: "UrlAdaptor" }),

        //    cssClass: "detailinvest",
        //    allowGrouping: false,
        //    isResponsive: true,
        //    enableAltRow: true,
        //    allowTextWrap: true,
        //    allowScrolling: true,
        //    scrollSettings: { width: "100%", height: "100%" },
        //    textWrapSettings: { wrapMode: "both" },
        //    cellEdit: "cellEditCertificate",
        //    cellSave: "Certificatecellsave",
        //    allowResizeToFit: true,
        //    showStackedHeader: true,
        //    enableResponsiveRow: true,
        //    //queryCellInfo: "queryCellInfo",
        //    toolbarSettings: {
        //        showToolbar: true,
        //        toolbarItems: ["add", "edit", "delete", "update", "cancel"]
        //    },

        //    editSettings: { rowPosition: "bottom", allowEditing: true, allowAdding: true, allowDeleting: true, editMode: 'batch' },
        //    allowResizeToFit: true,
        //    columns: [

        //        { field: "Id", visible: false, allowEditing: true, headerText: "Id", width: 100 },
        //        { field: "batch_no", visible: false, allowEditing: true, headerText: "batch_no", width: 100 },
        //        { field: "product_code", visible: false, allowEditing: true, headerText: "product_code", width: 100 },
        //        { field: "e_reg_complaint_code", visible: false, allowEditing: true, headerText: "HHcode", width: 50 },
        //        { field: "e_reg_complaint_No", visible: false, allowEditing: true, headerText: "Complaint Number", width: 100 },
        //        {
        //            field: "Summary_of_Investigations", headerText: "Summary of Investigations", headerTooltip: "To add new line use Shift-Enter ", editTemplate: {
        //                create: function () {
        //                    return "<textarea style='width:100%; display:block; max-width:100%;line-height:3.0;padding:15px 15px  30px; border-radius:3px; border:1px solid #F7E98D; font:13px Tahoma, cursive; transition:box-shadow 0.5s ease; box-shadow:0 4px 6px rgba(0,0,0,0.1); font-smoothing:subpixel-antialiased; background:linear-gradient(#F9EFAF, #F7E98D); background:-o-linear-gradient(#F9EFAF, #F7E98D); background:-ms-linear-gradient(#F9EFAF, #F7E98D); background:-moz-linear-gradient(#F9EFAF, #F7E98D); background:-webkit-linear-gradient(#F9EFAF, #F7E98D);'>{{:Summary_of_Investigations}}</textarea>";
        //                },
        //                write: function (args) {
        //                    $('.text').css("max-width", args.element.parent("td").width());
        //                    $('.text').css("max-height", args.element.parent("td").height());
        //                    null;
        //                },
        //                read: function (args) {
        //                    return args.val();
        //                },
        //            }
        //            , width: 200,
        //        },
        //        //{ field: "Release_Instruction", visible: true, allowEditing: true, headerText: "Release Instruction", width: 100 },
        //        { field: "Release_Instruction", visible: true, headerText: "Release Instruction", width: 100, foreignKeyField: "RI_code", foreignKeyValue: "Release_Instruction_Desc", dataSource: DataRelease_Instruction },
        //        { field: "Copy_Investigation_Report", visible: true, headerText: "Copy Investigation Report", width: 100, foreignKeyField: "yes_no_id", foreignKeyValue: "yes_no_desc", dataSource: dataYesNo },
        //        //{ field: "Goods_Returned_Note", visible: true, headerText: "Goods Returned Note", width: 100, foreignKeyField: "yes_no_id", foreignKeyValue: "yes_no_desc", dataSource: dataYesNo },
        //        {
        //            field: "Goods_Returned_Note", headerText: "Goods Returned Note", headerTooltip: "To add new line use Shift-Enter ", editTemplate: {
        //                create: function () {
        //                    return "<textarea style='width:100%; display:block; max-width:100%;line-height:3.0;padding:15px 15px  30px; border-radius:3px; border:1px solid #F7E98D; font:13px Tahoma, cursive; transition:box-shadow 0.5s ease; box-shadow:0 4px 6px rgba(0,0,0,0.1); font-smoothing:subpixel-antialiased; background:linear-gradient(#F9EFAF, #F7E98D); background:-o-linear-gradient(#F9EFAF, #F7E98D); background:-ms-linear-gradient(#F9EFAF, #F7E98D); background:-moz-linear-gradient(#F9EFAF, #F7E98D); background:-webkit-linear-gradient(#F9EFAF, #F7E98D);'>{{:Goods_Returned_Note}}</textarea>";
        //                },
        //                write: function (args) {
        //                    $('.text').css("max-width", args.element.parent("td").width());
        //                    $('.text').css("max-height", args.element.parent("td").height());
        //                    null;
        //                },
        //                read: function (args) {
        //                    return args.val();
        //                },
        //            }
        //            , width: 200,
        //        },
        //        { field: "attached_otherDoc", visible: true, headerText: "Are there other documents attached", width: 100, foreignKeyField: "yes_no_id", foreignKeyValue: "yes_no_desc", dataSource: dataYesNo },
        //        {
        //            field: "attached_other", headerText: "Specify Other Documents Attached", headerTooltip: "To add new line use Shift-Enter ", editTemplate: {
        //                create: function () {
        //                    return "<textarea style='width:100%; display:block; max-width:100%;line-height:3.0;padding:15px 15px  30px; border-radius:3px; border:1px solid #F7E98D; font:13px Tahoma, cursive; transition:box-shadow 0.5s ease; box-shadow:0 4px 6px rgba(0,0,0,0.1); font-smoothing:subpixel-antialiased; background:linear-gradient(#F9EFAF, #F7E98D); background:-o-linear-gradient(#F9EFAF, #F7E98D); background:-ms-linear-gradient(#F9EFAF, #F7E98D); background:-moz-linear-gradient(#F9EFAF, #F7E98D); background:-webkit-linear-gradient(#F9EFAF, #F7E98D);'>{{:attached_other}}</textarea>";
        //                },
        //                write: function (args) {
        //                    $('.text').css("max-width", args.element.parent("td").width());
        //                    $('.text').css("max-height", args.element.parent("td").height());
        //                    null;
        //                },
        //                read: function (args) {
        //                    return args.val();
        //                },
        //            }
        //            , width: 150,
        //        },
        //        { field: "Release_Authorizedby", visible: true, headerText: "Authorized by", width: 100, foreignKeyField: "cp_code", foreignKeyValue: "cp_name", dataSource: maul_staff },
        //        { field: "Release_Authorized_Date", editType: "datepicker", format: "{0:MM/dd/yyyy}", visible: true, allowEditing: true, headerText: "Authorized Date", width: 100 },
        //        { field: "Authorized_Representative_Category", visible: true, headerText: "Authorized Representative Category", width: 100, foreignKeyField: "AR_code", foreignKeyValue: "Authorized_Representative_Desc", dataSource: authorized_representative },
        //        { field: "Released_By", visible: true, headerText: "Released By", width: 100, foreignKeyField: "cp_code", foreignKeyValue: "cp_name", dataSource: maul_staff },
        //        { field: "Release_Date", visible: true, allowEditing: true, editType: "datepicker", format: "{0:MM/dd/yyyy}", headerText: "Release Date", width: 100 },

        //    ],
        //    //dataBound: "onActionCompleteDetailInvest",// function (args) { }
        //});
        //e.detailsElement.find("#QICloseOutGrd" + window.regcode).ejGrid({
        //    dataSource: dataQICloseOutGrd,// ej.DataManager({ url: "BatchDataDetailInvestGrd?regCompCode=" + window.e_reg_complaint_code, batchUrl: "BatchUpdate", adaptor: "UrlAdaptor" }),

        //    cssClass: "detailinvest",
        //    allowGrouping: false,
        //    isResponsive: true,
        //    enableAltRow: true,
        //    allowTextWrap: true,
        //    allowScrolling: true,
        //    scrollSettings: { width: "100%", height: "100%" },
        //    textWrapSettings: { wrapMode: "both" },
        //    cellEdit: "cellEditCloseOut",
        //    cellSave: "CloseOutcellsave",
        //    allowResizeToFit: true,
        //    showStackedHeader: true,
        //    enableResponsiveRow: true,
        //    queryCellInfo: "QIClosequeryCellInfo",
        //    toolbarSettings: {
        //        showToolbar: true,
        //        toolbarItems: ["add", "edit", "delete", "update", "cancel"]
        //    },

        //    editSettings: { rowPosition: "bottom", allowEditing: true, allowAdding: true, allowDeleting: true, editMode: 'batch' },
        //    allowResizeToFit: true,
        //    columns: [

        //        { field: "Id", isPrimaryKey: true, visible: false, allowEditing: true, headerText: "Id", width: 100 },
        //        { field: "batch_no", visible: false, allowEditing: true, headerText: "batch_no", width: 100 },
        //        { field: "product_code", visible: false, allowEditing: true, headerText: "product_code", width: 100 },
        //        { field: "e_reg_complaint_code", visible: false, allowEditing: true, headerText: "HHcode", width: 50 },
        //        { field: "e_reg_complaint_No", visible: false, allowEditing: true, headerText: "complaint No", width: 50 },
        //        {
        //            field: "Summary_of_Investigations", headerText: "Summary of Investigations", headerTooltip: "To add new line use Shift-Enter ", editTemplate: {
        //                create: function () {
        //                    return "<textarea style='width:100%; display:block; max-width:100%;line-height:3.0;padding:15px 15px  30px; border-radius:3px; border:1px solid #F7E98D; font:13px Tahoma, cursive; transition:box-shadow 0.5s ease; box-shadow:0 4px 6px rgba(0,0,0,0.1); font-smoothing:subpixel-antialiased; background:linear-gradient(#F9EFAF, #F7E98D); background:-o-linear-gradient(#F9EFAF, #F7E98D); background:-ms-linear-gradient(#F9EFAF, #F7E98D); background:-moz-linear-gradient(#F9EFAF, #F7E98D); background:-webkit-linear-gradient(#F9EFAF, #F7E98D);'>{{:Summary_of_Investigations}}</textarea>";
        //                },
        //                write: function (args) {
        //                    $('.text').css("max-width", args.element.parent("td").width());
        //                    $('.text').css("max-height", args.element.parent("td").height());
        //                    null;
        //                },
        //                read: function (args) {
        //                    return args.val();
        //                },
        //            }
        //            , width: 200,
        //        },
        //        //{ field: "Release_Instruction", visible: true, allowEditing: true, headerText: "Release Instruction", width: 100 },
        //        { field: "Release_Instruction", visible: true, headerText: "Release Instruction", width: 100, foreignKeyField: "RI_code", foreignKeyValue: "Release_Instruction_Desc", dataSource: DataRelease_Instruction },
        //        { field: "Documents_Attached", visible: true, headerText: "Documents Attached", width: 100, editType: "dropdownedit", editParams: { showCheckbox: true },  foreignKeyField: "Doc_Code", foreignKeyValue: "Doc_Description", dataSource: Documents_Attached },
        //        //{ field: "Goods_Returned_Note", visible: true, headerText: "Goods Returned Note", width: 100, foreignKeyField: "yes_no_id", foreignKeyValue: "yes_no_desc", dataSource: dataYesNo },
        //        //{
        //        //    field: "Goods_Returned_Note", headerText: "Goods Returned Note", headerTooltip: "To add new line use Shift-Enter ", editTemplate: {
        //        //        create: function () {
        //        //            return "<textarea style='width:100%; display:block; max-width:100%;line-height:3.0;padding:15px 15px  30px; border-radius:3px; border:1px solid #F7E98D; font:13px Tahoma, cursive; transition:box-shadow 0.5s ease; box-shadow:0 4px 6px rgba(0,0,0,0.1); font-smoothing:subpixel-antialiased; background:linear-gradient(#F9EFAF, #F7E98D); background:-o-linear-gradient(#F9EFAF, #F7E98D); background:-ms-linear-gradient(#F9EFAF, #F7E98D); background:-moz-linear-gradient(#F9EFAF, #F7E98D); background:-webkit-linear-gradient(#F9EFAF, #F7E98D);'>{{:Goods_Returned_Note}}</textarea>";
        //        //        },
        //        //        write: function (args) {
        //        //            $('.text').css("max-width", args.element.parent("td").width());
        //        //            $('.text').css("max-height", args.element.parent("td").height());
        //        //            null;
        //        //        },
        //        //        read: function (args) {
        //        //            return args.val();
        //        //        },
        //        //    }
        //        //    , width: 200,
        //        //},
        //        { field: "attached_otherDoc", visible: true, headerText: "Are there other documents attached", width: 100, foreignKeyField: "yes_no_id", foreignKeyValue: "yes_no_desc", dataSource: dataYesNo },
        //        {
        //            field: "Other_attachment", headerText: "Specify Other Documents Attached", headerTooltip: "To add new line use Shift-Enter ", editTemplate: {
        //                create: function () {
        //                    return "<textarea style='width:100%; display:block; max-width:100%;line-height:3.0;padding:15px 15px  30px; border-radius:3px; border:1px solid #F7E98D; font:13px Tahoma, cursive; transition:box-shadow 0.5s ease; box-shadow:0 4px 6px rgba(0,0,0,0.1); font-smoothing:subpixel-antialiased; background:linear-gradient(#F9EFAF, #F7E98D); background:-o-linear-gradient(#F9EFAF, #F7E98D); background:-ms-linear-gradient(#F9EFAF, #F7E98D); background:-moz-linear-gradient(#F9EFAF, #F7E98D); background:-webkit-linear-gradient(#F9EFAF, #F7E98D);'>{{:Other_attachment}}</textarea>";
        //                },
        //                write: function (args) {
        //                    $('.text').css("max-width", args.element.parent("td").width());
        //                    $('.text').css("max-height", args.element.parent("td").height());
        //                    null;
        //                },
        //                read: function (args) {
        //                    return args.val();
        //                },
        //            }
        //            , width: 150,
        //        },
        //        { field: "Warehouse_Officer", visible: true, headerText: "Warehouse Officer", width: 100, foreignKeyField: "cp_code", foreignKeyValue: "cp_name", dataSource: maul_staff },
        //        { field: "Warehouse_Date", editType: "datepicker", format: "{0:MM/dd/yyyy}", visible: true, allowEditing: true, headerText: "Warehouse Date", width: 100 },
        //        //{ field: "Authorized_Representative_Category", visible: true, headerText: "Authorized Representative Category", width: 100, foreignKeyField: "AR_code", foreignKeyValue: "Authorized_Representative_Desc", dataSource: authorized_representative },
        //        { field: "Finance_Manager", visible: true, headerText: "Finance Manager", width: 100, foreignKeyField: "cp_code", foreignKeyValue: "cp_name", dataSource: maul_staff },
        //        { field: "Finance_Date", visible: true, allowEditing: true, editType: "datepicker", format: "{0:MM/dd/yyyy}", headerText: "Finance Date", width: 100 },
        //        { field: "Director_Technical", visible: true, headerText: "Director Technical", width: 100, foreignKeyField: "cp_code", foreignKeyValue: "cp_name", dataSource: maul_staff },
        //        { field: "Director_Technical_Date", visible: true, allowEditing: true, editType: "datepicker", format: "{0:MM/dd/yyyy}", headerText: "Director Technical Date", width: 100 },
        //        { field: "Executive_Director", visible: true, headerText: "Executive Director", width: 100, foreignKeyField: "cp_code", foreignKeyValue: "cp_name", dataSource: maul_staff },
        //        { field: "Executive_Director_Date", visible: true, allowEditing: true, editType: "datepicker", format: "{0:MM/dd/yyyy}", headerText: "Executive Director Date", width: 100 },
        //    ],
        //   // dataBound: "onActionCompleteDetailInvest",// function (args) { }
        //});

       // e.detailsElement.find(".defaultTab").ejTab();
        //$("#defaultTab").ejTab({ selectedItemIndex: 0, cssClass: "fat-lime", collapsible: true, heightAdjustMode: "fill", height: "300px" });
        e.detailsElement.find(".tabcontrol").ejTab({ selectedItemIndex: 0, /*cssClass: "fat-lime", */collapsible: true, heightAdjustMode: "fill", height: "700px" });

        $("#btnsup_Actions").ejButton({
            cssClass: "e-success",
            size: "medium",
            showRoundedCorner: true,
            contentType: "textandimage",
            prefixIcon: "e-icon e-handup",

            click: function (args) {
                alert('Ouch!');
                //$("#SuccessDial").ejDialog("close");
            }
        });

    }
    function cellEditCertificate(args) {
        //alert("-----")
        var gridInstance = $("#ReleaseQuarantineGrd" + window.regcode).ejGrid("instance");
        var actionTakenindex = gridInstance.selectedRowsIndexes;
        var grid = this._id;
        var Rcode = $("#e_reg_complaint_code").val();
        //alert(Rcode);
        //$("#ReleaseQuarantineGrd" + window.regcode).ejGrid("setCellValue", actionTakenindex, "e_reg_track_complaint_code", window.regcode);

        $("#ReleaseQuarantineGrd" + window.regcode).ejGrid("setCellValue", actionTakenindex, "e_reg_complaint_code", Rcode);
        $("#ReleaseQuarantineGrd" + window.regcode).ejGrid("setCellValue", actionTakenindex, "e_reg_complaint_No", window.Complaint_No);
        $("#ReleaseQuarantineGrd" + window.regcode).ejGrid("setCellValue", actionTakenindex, "batch_no", window.batchno);
        $("#ReleaseQuarantineGrd" + window.regcode).ejGrid("setCellValue", actionTakenindex, "product_code", window.productcode);

    }
    function cellEditCloseOut(args) {
        //alert("-----")
        var gridInstance = $("#QICloseOutGrd" + window.regcode).ejGrid("instance");
        var actionTakenindex = gridInstance.selectedRowsIndexes;
        var grid = this._id;
        var Rcode = $("#e_reg_complaint_code").val();
        //alert(Rcode);
        //$("#ReleaseQuarantineGrd" + window.regcode).ejGrid("setCellValue", actionTakenindex, "e_reg_track_complaint_code", window.regcode);

        $("#QICloseOutGrd" + window.regcode).ejGrid("setCellValue", actionTakenindex, "e_reg_complaint_code", Rcode);
        $("#QICloseOutGrd" + window.regcode).ejGrid("setCellValue", actionTakenindex, "e_reg_complaint_No", window.Complaint_No);
        $("#QICloseOutGrd" + window.regcode).ejGrid("setCellValue", actionTakenindex, "batch_no", window.batchno);
        $("#QICloseOutGrd" + window.regcode).ejGrid("setCellValue", actionTakenindex, "product_code", window.productcode);

    }
    //PreInvestcellEdit
    function PreInvestcellEdit(args) {
        var comcode = args.model.selectedRecords[0].investigation_code;
        var value = args.model.selectedRecords[0].yes_no;
        if (comcode.trim() == '4.1' || comcode.trim() == '4.2') {
            // alert('Nod editable');
            editWarning();
            args.cancel = true;
        }
        var gridInstance = $("#PreInvestGrd" + window.regcode).ejGrid("instance");
        var actionTakenindex = gridInstance.selectedRowsIndexes;
        var grid = this._id;
        var Rcode = $("#e_reg_complaint_code").val();
        //alert(Rcode);
        //$("#ReleaseQuarantineGrd" + window.regcode).ejGrid("setCellValue", actionTakenindex, "e_reg_track_complaint_code", window.regcode);

        //$("#PreInvestGrd" + window.regcode).ejGrid("setCellValue", actionTakenindex, "e_reg_complaint_code", Rcode);
        //$("#PreInvestGrd" + window.regcode).ejGrid("setCellValue", actionTakenindex, "e_reg_complaint_No", + window.Complaint_No);
        //$("#PreInvestGrd" + window.regcode).ejGrid("setCellValue", actionTakenindex, "batch_no", window.batchno);
        //$("#PreInvestGrd" + window.regcode).ejGrid("setCellValue", actionTakenindex, "product_code", window.productcode);

    }
   // DetailInvestcellEdit
    function DetailInvestcellEdit(args) {
        var comcode = args.model.selectedRecords[0].investigation_code;
        var value = args.model.selectedRecords[0].yes_no;
        if (comcode.trim() == '6.1' || comcode.trim() == '6.2') {
            // alert('Nod editable');
            editWarning();
            args.cancel = true;
        }
        if ((comcode.trim() == '6.2.1' || comcode.trim() == '6.2.2')) {
            if (value == 1) {
                if (window.Quarantine == 1) {
                    $("#Quarantine").show();
                    window.Quarantine = 1;
                }
                else {
                    $("#Quarantine").show();
                    window.Quarantine = 1;
                }

            }
            else if (value == 2) {
                if (window.Quarantine == 1) {
                    $("#Quarantine").show();
                    window.Quarantine = 1;
                }
                else {
                    $("#Quarantine").hide();
                    $("#Release").show();
                    window.Quarantine == 2
                }

            }
            else {
                if (window.Quarantine == 1) {
                    $("#Quarantine").show();
                    window.Quarantine = 1;
                }
                else if (window.Quarantine == 2) {
                    $("#Quarantine").hide();
                    $("#Release").show();
                    window.Quarantine = 2;
                }
                else {
                    $("#Quarantine").hide();
                }

            }
        }
        var gridInstance = $("#DetailInvestGrd" + window.regcode).ejGrid("instance");
        var actionTakenindex = gridInstance.selectedRowsIndexes;
        var grid = this._id;
        var Rcode = $("#e_reg_complaint_code").val();
       // alert(window.regcode);
        //$("#ReleaseQuarantineGrd" + window.regcode).ejGrid("setCellValue", actionTakenindex, "e_reg_track_complaint_code", window.regcode);

        //$("#DetailInvestGrd" + window.regcode).ejGrid("setCellValue", actionTakenindex, "e_reg_complaint_code", Rcode);
        $("#DetailInvestGrd" + window.regcode).ejGrid("setCellValue", actionTakenindex, "e_reg_complaint_No", "1"/*window.Complaint_No*/);
        //$("#DetailInvestGrd" + window.regcode).ejGrid("setCellValue", actionTakenindex, "batch_no", window.batchno);
        //$("#DetailInvestGrd" + window.regcode).ejGrid("setCellValue", actionTakenindex, "product_code", window.productcode);

    }
    function cellEditdocs(args) {
        //alert("-----")
        var gridInstance = $("#docsGrid" + window.regcode).ejGrid("instance");
        var actionTakenindex = gridInstance.selectedRowsIndexes;
        var grid = this._id;
        var Rcode = $("#e_reg_complaint_code").val();
        //alert(Rcode);
        //$("#ReleaseQuarantineGrd" + window.regcode).ejGrid("setCellValue", actionTakenindex, "e_reg_track_complaint_code", window.regcode);

        $("#docsGrid" + window.regcode).ejGrid("setCellValue", actionTakenindex, "e_reg_complaint_code", Rcode);
        $("#docsGrid" + window.regcode).ejGrid("setCellValue", actionTakenindex, "e_reg_complaint_No", window.Complaint_No);
        $("#docsGrid" + window.regcode).ejGrid("setCellValue", actionTakenindex, "batch_no", window.batchno);
        $("#docsGrid" + window.regcode).ejGrid("setCellValue", actionTakenindex, "product_code", window.productcode);

    }
</script>

<style type="text/css">
    .detail .e-alt_row {
        background: #c6ecc6 !important;
    }

    .action .e-alt_row {
        background: #e6ecff !important; /*aqua !important;*/
    }

    .invest .e-alt_row {
        background: #ffa899 !important;
    }

    .detailinvest .e-alt_row {
        background: #f2bff0 !important; /*cadetblue !important;*/
    }
</style>
<script type="text/javascript">
    var flag = true;
    function ActionTakencellsave(args) {

        if (flag) {
            args.cancel = true;
            if ($.inArray(args.rowData, this.batchChanges.changed) == -1)
                this.batchChanges.changed.push(args.rowData);
            var batchData = this.getBatchChanges();
            if (batchData.changed.length > 0 && !$(args.cell).closest("tr").hasClass("e-insertedrow")) {
                flag = false;
                this.batchSave();
            }
            else
                flag = false;
        }
        else if (!flag)
            flag = true;

    }
    var flag1 = true;
    function Docscellsave(args) {

        if (flag1) {
            args.cancel = true;
            if ($.inArray(args.rowData, this.batchChanges.changed) == -1)
                this.batchChanges.changed.push(args.rowData);
            var batchData = this.getBatchChanges();
            if (batchData.changed.length > 0 && !$(args.cell).closest("tr").hasClass("e-insertedrow")) {
                flag1 = false;
                this.batchSave();
            }
            else
                flag1 = false;
        }
        else if (!flag1)
            flag1 = true;

    }
    var flag2 = true;
    function PreInvestcellsave(args) {

        var comcode = args.model.selectedRecords[0].investigation_code;
        var value = args.model.selectedRecords[0].yes_no;

        if (args.columnName == "yes_no") {

            if (comcode.trim() == '4.2.7') {
                if (args.value == args.previousValue) {

                }
                else {
                    //debugger;
                    var v = args.value;
                    //alert(v.value);
                    if (v.value == 1) {
                        $("#Detailed_invest").show();
                        $('#level2Communication').show();
                    }
                    else {
                        $("#Detailed_invest").hide();
                        $('#level2Communication').hide();
                    }
                }
            }
        }
        if (args.columnName == "yes_no") {

            if (comcode.trim() == '4.2.1' || comcode.trim() == '4.2.2') {
                var v = args.value;
                if (v.value == 1) {
                    $("#Quarantine").show();
                    $("#Release").hide();
                }
                else {
                    if (window.DetailedQuarantine == 1) {
                        window.Quarantine = v.value;
                        $("#Quarantine").show();
                        $("#Release").hide();
                    }
                    else {
                        window.Quarantine = v.value;
                        $("#Quarantine").hide();
                        $("#Release").show();
                    }
                }
            }
        }


        if (flag2) {
            args.cancel = true;
            if ($.inArray(args.rowData, this.batchChanges.changed) == -1)
                this.batchChanges.changed.push(args.rowData);
            var batchData = this.getBatchChanges();
            if (batchData.changed.length > 0 && !$(args.cell).closest("tr").hasClass("e-insertedrow")) {

                flag2 = false;
                this.batchSave();
            }
            else
                flag2 = false;
        }
        else if (!flag2)
            flag2 = true;

    }
    var flag3 = true;
    function DetailedIvestcellsave(args) {
        if (args.columnName == "yes_no") {

            if (comcode.trim() == '6.2.1' || comcode.trim() == '6.2.2') {
                var v = args.value;
                if (v.value == 1) {
                    $("#Quarantine").show();
                    $("#Release").hide();
                }
                else {
                    if (window.Quarantine == 1) {
                        window.DetailedQuarantine = v.value;
                        $("#Quarantine").show();
                        $("#Release").hide();
                    }
                    else {
                        window.DetailedQuarantine = v.value;
                        $("#Quarantine").hide();
                        $("#Release").show();
                    }
                }
            }
        }
        if (flag3) {
            args.cancel = true;
            if ($.inArray(args.rowData, this.batchChanges.changed) == -1)
                this.batchChanges.changed.push(args.rowData);
            var batchData = this.getBatchChanges();
            if (batchData.changed.length > 0 && !$(args.cell).closest("tr").hasClass("e-insertedrow")) {
                flag3 = false;
                this.batchSave();
            }
            else
                flag3 = false;
        }
        else if (!flag3)
            flag3 = true;

    }
    var flag4 = true;
    function Certificatecellsave(args) {

        if (flag4) {
            args.cancel = true;
            if ($.inArray(args.rowData, this.batchChanges.changed) == -1)
                this.batchChanges.changed.push(args.rowData);
            var batchData = this.getBatchChanges();
            if (batchData.changed.length > 0 && !$(args.cell).closest("tr").hasClass("e-insertedrow")) {
                flag4 = false;
                this.batchSave();
            }
            else
                flag4 = false;
        }
        else if (!flag4)
            flag4 = true;

    }
    var flag5 = true;
    function CloseOutcellsave(args) {

        if (flag5) {
            args.cancel = true;
            if ($.inArray(args.rowData, this.batchChanges.changed) == -1)
                this.batchChanges.changed.push(args.rowData);
            var batchData = this.getBatchChanges();
            if (batchData.changed.length > 0 && !$(args.cell).closest("tr").hasClass("e-insertedrow")) {
                flag5 = false;
                this.batchSave();
            }
            else
                flag5 = false;
        }
        else if (!flag5)
            flag5 = true;

    }
    var flag6 = true;
    function OtherMedicinecellsave(args) {

        if (flag6) {
            args.cancel = true;
            if ($.inArray(args.rowData, this.batchChanges.changed) == -1)
                this.batchChanges.changed.push(args.rowData);
            var batchData = this.getBatchChanges();
            if (batchData.changed.length > 0 && !$(args.cell).closest("tr").hasClass("e-insertedrow")) {
                flag6 = false;
                this.batchSave();
            }
            else
                flag6 = false;
        }
        else if (!flag6)
            flag6 = true;

    }
    var flag7 = true;
    function Medicinecellsave(args) {

        if (flag7) {
            args.cancel = true;
            if ($.inArray(args.rowData, this.batchChanges.changed) == -1)
                this.batchChanges.changed.push(args.rowData);
            var batchData = this.getBatchChanges();
            if (batchData.changed.length > 0 && !$(args.cell).closest("tr").hasClass("e-insertedrow")) {
                flag7 = false;
                this.batchSave();
            }
            else
                flag7 = false;
        }
        else if (!flag7)
            flag7 = true;

    }
</script>
<script>
    function SaveCloseOut() {

        var id = 0;
        if ($("#QA_ID").val() != null) {
            id = $("#QA_ID").val();
        }
        var Rcode = $("#e_reg_complaint_code").val();
        var _Complaint_Report_Comment = $("#Complaint_Report_Comment").val();
        var _Notification_PAC_Comment = $("#Notification_PAC_Comment").val();
        var _Notification_Vendor_Comment = $("#Notification_Vendor_Comment").val();
        var _Product_COAs_Comment = $("#Product_COAs_Comment").val();
        var _CAPA_Comment = $("#CAPA_Comment").val();
        var _Returned_Note_Comment = $("#Returned_Note_Comment").val();
        var _Credit_Note_Comment = $("#Credit_Note_Comment").val();
        var _Reconciliation_Comment = $("#Reconciliation_Comment").val();
        var _Other_attachment = $("#Other_attachment").val();
        var summary = $("#Summary_of_Investigations").val();
        var _NDA_Notification_Comment = $("#NDA_Notification_Comment").val();
        var _Release_Instruction = $('#Release_Instruction').data("ejDropDownList").option("value");
        var _Complaint_Report = $('#Complaint_Report').data("ejDropDownList").option("value");
        var _Notification_PAC = $('#Notification_PAC').data("ejDropDownList").option("value");
        var _Notification_Vendor = $('#Notification_Vendor').data("ejDropDownList").option("value");
        var _Product_COAs = $('#Product_COAs').data("ejDropDownList").option("value");
        var _CAPA = $('#CAPA').data("ejDropDownList").option("value");
        var _Returned_Note = $('#Returned_Note').data("ejDropDownList").option("value");
        var _Credit_Note = $('#Credit_Note').data("ejDropDownList").option("value");
        var _Reconciliation = $('#Reconciliation').data("ejDropDownList").option("value");
        var _NDA_Notification = $('#NDA_Notification').data("ejDropDownList").option("value");
        var _Warehouse_Officer = $('#Warehouse_Officer').data("ejDropDownList").option("value");
        var _Finance_Manager = $('#Finance_Manager').data("ejDropDownList").option("value");
        var _Director_Technical = $('#Director_Technical').data("ejDropDownList").option("value");
        var _Executive_Director = $('#Executive_Director').data("ejDropDownList").option("value");
        var _Warehouse_Date = $("#Warehouse_Date").ejDatePicker('getValue');
        var _Finance_Date = $("#Finance_Date").ejDatePicker('getValue');
        var _Technical_Date = $("#Director_Technical_Date").ejDatePicker('getValue');
        var _Director_Date = $("#Executive_Director_Date").ejDatePicker('getValue');
        $.ajax({
            url: "BatchUpdateQICloseOut2",
            type: "Get",
            dataType: "json",
            data: {
                "Id": id,
                "e_reg_complaint_code": Rcode,
                "product_code": window.productcode,
                "batchno": window.batchno,
                "e_reg_complaint_No": window.Complaint_No,
                "Summary_of_Investigations": summary,
                "Release_Instruction": _Release_Instruction,
                "Complaint_Report": _Complaint_Report,
                "Complaint_Report_Comment": _Complaint_Report_Comment,
                "Notification_PAC": _Notification_PAC,
                "Notification_PAC_Comment": _Notification_PAC_Comment,
                "Notification_Vendor": _Notification_Vendor,
                "Notification_Vendor_Comment": _Notification_Vendor_Comment,
                "Product_COAs": _Product_COAs,
                "Product_COAs_Comment": _Product_COAs_Comment,
                "CAPA": _CAPA,
                "CAPA_Comment": _CAPA_Comment,
                "Returned_Note": _Returned_Note,
                "Returned_Note_Comment": _Returned_Note_Comment,
                "Credit_Note": _Credit_Note,
                "Credit_Note_Comment": _Credit_Note_Comment,

                "Reconciliation": _Reconciliation,
                "Reconciliation_Comment": _Reconciliation_Comment,
                "NDA_Notification": _NDA_Notification,
                "NDA_Notification_Comment": _NDA_Notification_Comment,
                "Other_attachment": _Other_attachment,
                "Warehouse_Officer": _Warehouse_Officer,
                "Warehouse_Date": _Warehouse_Date,

                "Finance_Manager": _Finance_Manager,
                "Finance_Date": _Finance_Date,
                "Director_Technical": _Director_Technical,
                "Director_Technical_Date": _Technical_Date,

                "Executive_Director": _Executive_Director,
                "Executive_Director_Date": _Director_Date
            },
            success: function (data) {
                $("#Release").show();
            }
        });
    }
    function SaveRelease() {

        var id = 0;
        if ($("#Release_ID").val() != null) {
            id = $("#Release_ID").val();
        }
        var Rcode = $("#e_reg_complaint_code").val();
        var _Returned_Note_Comment = $("#Returned1_Note_Comment").val();
        var _Other_attachment = $("#Other1_attachment").val();
        var summary = $("#Release_Summary").val();
        var _Release_Instruction = $('#Release1_Instruction').data("ejDropDownList").option("value");
        var _Returned_Note = $('#Release_Returned_Note').data("ejDropDownList").option("value");

        var _AuthorisedBy = $('#AuthorisedBy').data("ejDropDownList").option("value");
        var _ReleasedBy = $('#ReleasedBy').data("ejDropDownList").option("value");
        var _ReceivedBy = $('#ReceivedBy').data("ejDropDownList").option("value");

        var _AuthorisedBy_Date = $("#AuthorisedBy_Date").ejDatePicker('getValue');
        var _ReleasedBy_Date = $("#ReleasedBy_Date").ejDatePicker('getValue');
        var _ReceivedBy_Date = $("#ReceivedBy_Date").ejDatePicker('getValue');
        alert(Rcode + " " + window.productcode + " " + window.batchno + " " + window.Complaint_No + " " + id);
        $.ajax({
            url: "BatchUpdateQIRelease2",
            type: "Get",
            dataType: "json",
            data: {
                "Id": id,
                "e_reg_complaint_code": Rcode,
                "product_code": window.productcode,
                "batchno": window.batchno,
                "e_reg_complaint_No": window.Complaint_No,
                "Summary_of_Investigations": summary,
                "Release_Instruction": _Release_Instruction,
                "Returned_Note": _Returned_Note,
                "Returned_Note_Comment": _Returned_Note_Comment,
                "Other_attachment": _Other_attachment,
                "Release_Authorizedby": _AuthorisedBy,
                "Release_Authorized_Date": _AuthorisedBy_Date,
                "Released_By": _ReleasedBy,
                "Release_Date": _ReleasedBy_Date,
                "Received_by": _ReceivedBy,
                "Received_Date": _ReceivedBy_Date
            },
            success: function (data) {
                //alert(data);
                //cancelss();
            }
        });
    }
    function dateString(args) {
        var date_complaint = new Date(args); //        date = new Date('2013-08-03T02:00:00Z');
        var year = date_complaint.getFullYear();
        var month = date_complaint.getMonth() + 1;
        var dt = date_complaint.getDate();

        if (dt < 10) {
            dt = '0' + dt;
        }
        if (month < 10) {
            month = '0' + month;
        }
        return (dt + '/' + month + '/' + year);
    }
    function onActionBegin(args) {
        if (args.requestType == "save") {
            //  alert('Save Called!!!');
            //Updating the file as one of the column data
            //args.data["UploadedFile"] = window.uploadData.files;

            // alert('(args.requestType == "save")');
            var dateTimeObj1 = $("#e_reg_date_complaint").ejDatePicker('getValue');
            args.data["e_reg_date_complaint"] = dateTimeObj1;
            args.data["date_complaint"] = dateTimeObj1;// dt + '-' + month + '-' + year; //date_complaint;// dateTimeObj1;

            var dateTimeObj2 = $("#e_reg_date_recieved").ejDatePicker('getValue');
            var date_recieved = new Date(dateTimeObj2);
            args.data["DateReceived"] = dateTimeObj2;//dt + '-' + month + '-' + year; // date_recieved;//dateTimeObj2;

            var dateTimeObj2 = $("#e_reg_date_recieved").ejDatePicker('getValue');
            var date_recieved = new Date(dateTimeObj2);
            args.data["DateReceived"] = dateTimeObj2;//dateString(dateTimeObj2);//dt + '-' + month + '-' + year; // date_recieved;//dateTimeObj2;

            args.data["e_reg_date_complaint"] = $("#e_reg_date_complaint").ejDatePicker('getValue');
            args.data["e_reg_date_resolved"] = $("#e_reg_date_resolved").ejDatePicker('getValue');
            
            args.data["Level1_Assignment_Date"] = $("#Level1_Assignment_Date").ejDatePicker('getValue');
            args.data["Communicated_By_Lev1Date"] = $("#Communicated_By_Lev1Date").ejDatePicker('getValue');
            args.data["e_reg_expected_date_resolution"] = $("#e_reg_expected_date_resolution").ejDatePicker('getValue');
            args.data["Feedback_Date"] = $("#Feedback_Date").ejDatePicker('getValue');
            
            args.data["Level2_Assignment_Date"] = $("#Level2_Assignment_Date").ejDatePicker('getValue');
            args.data["Communicated_By_Lev2Date"] = $("#Communicated_By_Lev2Date").ejDatePicker('getValue');

            var Sup_Doc = $('#Sup_Doc_Evidence_Rec:checked').val();
            var checkedValue = $('#Sup_Doc_Evidence_Rec:checked').val();

            args.data["e_reg_date_recieved"] = date_recieved;//dateTimeObj2;
            args.data["Level1_Assignment"] = $("#Level1_Assignment").val();
            args.data["Communicated_By_Lev1"] = $("#Communicated_By_Lev1").val();
            args.data["Level2_Assignment"] = $("#Level2_Assignment").val();
            
            //alert(args.data["Communicated_By_Lev1"]);
            args.data["AffectedSites"] = $("#AffectedSites").val();//
            var complaintcode = $("#e_reg_complaint_code").val();
            args.data["ComplainantName"] = $("#ComplainantName").val();
            //alert($("#ComplainantName").val());
            var level1_Email_Sent = $('#Level1_Email_Sent:checked').val();
            if (level1_Email_Sent == "on") {
                args.data["Level1_Email_Sent"] = true;
            }

            var level2_Email_Sent = $('#Level2_Email_Sent:checked').val();
            if (level2_Email_Sent == "on") {
                args.data["Level2_Email_Sent"] = true;
            }
            args.data["ComplainantCategory"] = $("#ComplainantCategory").val();

            window.uploadData["editData"] = new FormData();
            // alert(window.uploadData.url);
            //Converting the grid data to form data to send files to controller
            for (var d in args.data)
                uploadData.editData.append(d, args.data[d]);
            ////Update the child grids with the compliants code
            setCodePreInvestGrd(complaintcode);
            setCodeDetailInvestGrd(complaintcode);

            proxy = this;
            $.ajax({
                url: window.uploadData.url,
                type: 'POST',
                data: window.uploadData.editData,
                contentType: false,
                processData: false,
                success: function () {
                    proxy.refreshContent();

                    //Save the files ...............

                    var upload = $('#UploadInput').ejUploadbox("instance");
                    if (upload != null && upload != undefined) {
                        if (upload.diaObj != null && upload.diaObj != undefined) {
                            var wrapper = upload.diaObj.wrapper;
                            var fileItem = wrapper.find(".e-ul li.e-upload-file");
                            for (var i = 0; i < fileItem.length; i++) {
                                //alert('Using begin(args) ------');
                                upload._xhrPerformUpload($(fileItem[i]).data("file"));
                            }
                        }
                    }
                    //var objPreInvest = $("#PreInvestGrd" + window.regcode).ejGrid("instance");
                    //objPreInvest.batchSave();

                    //var objDetailInvest = $("#DetailInvestGrd" + window.regcode).ejGrid("instance");
                    //objDetailInvest.batchSave();

                    var objMedicines = $("#medicinesGrid").ejGrid("instance");
                    objMedicines.batchSave();

                    var objotherProducts = $("#otherProductsGrid").ejGrid("instance");
                    objotherProducts.batchSave();

                    //var objActionTakenGrd = $("#ActionTakenGrd" + window.regcode).ejGrid("instance");
                    //objActionTakenGrd.batchSave();
                }
            });

        }

    }
</script>
<script>
    function AffectedSiteSelect(e) {
        var sites = e.value;

        //var DropDownListCC = $('#ComplainantCategory').ejDropDownList({
        //    dataSource: contacts,
        //    width: "250px",
        //    fields: { value: "category_id", text: "category_desc" },
        //   // change: "selectContact",
        //    //showCheckbox: true,
        //    readOnly: false
        //}).data("ejDropDownList");

        $.ajax({
            url: 'contact_Details?affectedsite=' + sites,
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            type: 'GET',
            success: function (datadetails) {

                $('#ComplainantName').ejDropDownList({

                    dataSource: datadetails,
                    enabled: true,
                    width: "250px",
                    change: "setContactdetails",
                    fields: { value: "cp_code", text: "cp_name" },
                    //showCheckbox: true,
                    enableFilterSearch: true
                }).data("ejDropDownList");
                //if (datadetails.length > 0) {
                //    // debugger;
                //    //console.log(JSON.stringify(datadetails));
                    
                //}
            },
        });
    }
</script>
<script type="text/template" id="SupportDocUploadtemplate">
    <b>Supporting Documents Details ****</b>

    <div id="defaultTabx" @*style="width: 500px;height:200px;"*@>

        <table cellspacing="3">
            <tr hidden="hidden">
                <td style="text-align: left"> <input type="text" id="Id" name="Id" value="{{:Id}}" class="e-field e-ejinputtext valid" /></td>
                <td style="text-align: left"> <input type="text" id="e_reg_complaint_code" name="e_reg_complaint_code" value="{{:e_reg_complaint_code}}" class="e-field e-ejinputtext valid" /></td>
            </tr>
            <tr hidden="hidden">
                <td style="text-align: left"> <input type="text" id="batch_no" name="batch_no" value="{{:batch_no}}" class="e-field e-ejinputtext valid" /></td>
                <td style="text-align: left"> <input type="text" id="product_code" name="product_code" value="{{:product_code}}" class="e-field e-ejinputtext valid" /></td>
            </tr>
            <tr hidden="hidden">
                <td style="text-align: left"> <input type="text" id="QualityIssue_code" name="QualityIssue_code" value="{{:QualityIssue_code}}" class="e-field e-ejinputtext valid" /></td>
            </tr>
            <tr hidden="hidden">
                <td style="text-align: left" colspan="2"> <input type="text" id="FileURL" name="FileURL" value="{{:FileURL}}" class="e-field e-ejinputtext valid" /></td>
            </tr>
            <tr>
                <td style="text-align: right;">
                    Select File for Upload
                </td>
                <td style="text-align: justify">
                    <div id="UploadSupFile"></div>
                </td>
            </tr>
            <tr>
                <td style="text-align:justify;">
                    File Desc
                </td>
                <td style="text-align: left">
                    @*<textarea id="Details" name="Details" class="e-ejinputtext" value="{{: Details}}" style='width:100%; display:block; max-width:100%;line-height:3.0;padding:15px 15px  30px; border-radius:3px; border:1px solid #F7E98D; font:13px Tahoma, cursive; transition:box-shadow 0.5s ease; box-shadow:0 4px 6px rgba(0,0,0,0.1); font-smoothing:subpixel-antialiased; background:linear-gradient(#F9EFAF, #F7E98D); background:-o-linear-gradient(#F9EFAF, #F7E98D); background:-ms-linear-gradient(#F9EFAF, #F7E98D); background:-moz-linear-gradient(#F9EFAF, #F7E98D); background:-webkit-linear-gradient(#F9EFAF, #F7E98D);'>{{:Details}}</textarea>*@
                    <textarea id="Upload_Details" name="Upload_Details" class="form-control" value="{{:Upload_Details}}" cols="95" rows="5" style="max-width:100%">{{:Upload_Details}}</textarea>
                </td>
            </tr>

        </table>

    </div>

</script>
<script id="FileURLtemplate" type="text/x-template">
    <a rel='nofollow' href=" DownloadFile?fileNamePath={{:FileURL}}">{{:Details}}</a>
</script>

<script>
    function childGridcomplete(args) {
        if (/*args.requestType == "beginedit" || */args.requestType == "add") {
            //window.product_comp_code = result[0].Id;;
            //A Global var to track and hold file uploading info
            window.supDocuploadData = {};
            window.supDocuploadData.url = args.requestType == "add" ? "DialogInsertSupDoc" : "DialogInsertSupDoc";
            // alert(window.supDocuploadData.url);
            var regcode = $('#e_reg_complaint_code').val();
            var batch_no = $('#batch_no').val();
            var product_code = $('#product_code').val();

            $('#UploadSupFile').ejUploadbox({
                saveUrl: "SaveSupportingDoc?complaintNo=" + window.Complaint_No + "&regcode=" + window.regcode + "&batch_no=" + window.batchno + "&product_code=" + window.productcode + "&product_comp_code=" + window.product_comp_code,
                removeUrl: "DialogDeleteSupDoc",
                dialogAction: { closeOnComplete: true },
                multipleFilesSelection: false,
                showFileDetails: false,
                begin: "onbeginSupDocs",
                success: "onsuccessSupDocs",

            });
        }

        if (args.requestType == "save") {

            //var data = args.responseText; // responseText contains variables
            //// that correspond to the FileCollection Class
            //var jsonResponse = JSON.parse(data);

            //args.data["testStr"] = "Peter";
            alert($('#Upload_Details').val());
            args.data["Details"] = $('#Upload_Details').val();
            var recId = $("#Id").val();
            //Updating the file as one of the column data
            // args.data["Photo"] = window.supDocuploadData.files;
            //alert('Saving the Docs details -----' + recId);
            window.supDocuploadData["editData"] = new FormData();
            supDocuploadData.editData.append("Details", $('#Upload_Details').val())
            //Converting the grid data to form data to send files to controller
            for (var d in args.data)
                supDocuploadData.editData.append(d, args.data[d]);
            //window.supDocuploadData.url = "SaveSupportingDoc?complaintNo=" + window.Complaint_No + "&regcode=" + window.regcode + "&batch_no=" + window.batchno + "&product_code=" + window.productcode + "&product_comp_code=" + window.product_comp_code + "&Details=" + $('#Upload_Details').val();
            //console.log(JSON.stringify(window.supDocuploadData.editData));
            alert(window.supDocuploadData.url);
            proxy = this;
            $.ajax({
                //url: "SaveSupportingDoc?complaintNo=" + window.Complaint_No + "&regcode=" + window.regcode + "&batch_no=" + window.batchno + "&product_code=" + window.productcode + "&product_comp_code=" + window.product_comp_code + "&Details=" + $('#Upload_Details').val(),
                url: window.supDocuploadData.url,
                type: 'POST',
                data: window.supDocuploadData.editData,
                contentType: false,
                processData: false,
                success: function () {
                    proxy.refreshContent();

                    var upload = $('#UploadSupFile').ejUploadbox("instance");
                    if (upload != null && upload != undefined) {
                        if (upload.diaObj != null && upload.diaObj != undefined) {
                            var wrapper = upload.diaObj.wrapper;
                            var fileItem = wrapper.find(".e-ul li.e-upload-file");
                            for (var i = 0; i < fileItem.length; i++) {
                                //alert('Using begin(args) ------');
                                upload._xhrPerformUpload($(fileItem[i]).data("file"));
                            }
                        }
                    }
                }
            });
        }
    }
</script>