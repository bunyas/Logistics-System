
@{
    ViewBag.Title = "LoadMedicEvidence";
    Layout = "~/Views/Shared/_LayoutHSIP.cshtml";
}

<h2>Load Medicine Produtcs Evidence</h2>
@(Html.EJ().Grid<object>
        ("Grid")
        .Datasource(datasource => datasource.URL("Quality_Complaints_Medicine")/*.BatchURL("SaveCodinator")*/.Adaptor(AdaptorType.UrlAdaptor))
        .AllowPaging()
        .AllowFiltering()
        .AllowTextWrap()
        .AllowGrouping()
        .AllowKeyboardNavigation(true)
          .SelectionType(SelectionType.Multiple)
        .GroupSettings(group => { group.ShowGroupedColumn(true); })
        .TextWrapSettings(wrap => { wrap.WrapMode(WrapMode.Both); })
        .FilterSettings(filter => { filter.FilterType(FilterType.Excel); })
        .EditSettings(edit => { edit.AllowEditing().EditMode(EditMode.Batch); })
            .ToolbarSettings(toolbar =>
            {
                toolbar.ShowToolbar().ToolbarItems(items =>
                {
                    items.AddTool(ToolBarItems.Edit);
                    items.AddTool(ToolBarItems.Update);
                    items.AddTool(ToolBarItems.Cancel);
                    items.AddTool(ToolBarItems.Search);
                });
            })
        .Columns(col =>
        {
            col.Field("id").HeaderText("Id").IsPrimaryKey(false).Visible(true).TextAlign(TextAlign.Justify).Width(100).Add();
            col.Field("e_reg_complaint_code").HeaderText("e_reg_complaint_code").IsPrimaryKey(false).Visible(true).TextAlign(TextAlign.Justify).Width(100).Add();
            col.Field("batch_no").HeaderText("batch_no").IsPrimaryKey(false).Visible(true).TextAlign(TextAlign.Justify).Width(100).Add();
            col.Field("product_code").HeaderText("product_code").IsPrimaryKey(false).Visible(true).TextAlign(TextAlign.Justify).Width(100).Add();
            col.Field("dosage_form").HeaderText("dosage_form").IsPrimaryKey(false).Visible(true).TextAlign(TextAlign.Justify).Width(100).Add();
            col.Field("manufacturer").HeaderText("manufacturer").IsPrimaryKey(false).Visible(true).TextAlign(TextAlign.Justify).Width(100).Add();
            col.Field("date_quality_issue_identified").HeaderText("date_quality_issue_identified").IsPrimaryKey(false).Visible(true).TextAlign(TextAlign.Justify).Width(100).Add();
            col.Field("description_of_quality_issue").HeaderText("description_of_quality_issue").IsPrimaryKey(false).Visible(true).TextAlign(TextAlign.Justify).Width(100).Add();
            col.Field("QualityIssue_code").HeaderText("QualityIssue_code").TextAlign(TextAlign.Right).Add();
        })
         .ChildGrid(child =>
         {
             child.Datasource(ds => ds.Json(ViewBag.MedFiles).Adaptor(AdaptorType.RemoteSaveAdaptor))
             //child.Datasource(ds => ds.Json(ViewBag.MedFiles).Adaptor(AdaptorType.UrlAdaptor))
               .QueryString("QualityIssue_code")
                .EnableAltRow(true)
                 .Columns(col =>
                 {
                     col.Field("FileURL").HeaderText("File URL").IsPrimaryKey(true).TextAlign(TextAlign.Right).Add();
                     col.Field("Details").HeaderText("Details").TextAlign(TextAlign.Right).Add();
                     col.Field("e_reg_complaint_code").HeaderText("e_reg_complaint_code").Add();
                     col.Field("batch_no").HeaderText("batch_no").Add();
                     col.Field("QualityIssue_code").HeaderText("QualityIssue_code").TextAlign(TextAlign.Right).Add();
                 });
         })
)
 
<script>
    function childLoad(args) {
        var data = this.model.parentDetails.parentRowData.ShipCountry;
        this.model.query.addParams("Country", data);
    }
</script>


