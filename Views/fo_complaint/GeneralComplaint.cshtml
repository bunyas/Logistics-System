
@{
    ViewBag.Title = "GeneralComplaint";
    Layout = "~/Views/Shared/_LayoutHSIP.cshtml";
}

<h2>General Complaint</h2>
@using Syncfusion.JavaScript
@using Syncfusion.MVC.EJ


<div id="ControlRegion">
    @(Html.EJ().Dialog("ErrorList").Title("Exception Thrown").ShowOnInit(false))
    @(Html.EJ().Dialog("SuccessDial").Title("Record Saved").ShowFooter(true).FooterTemplateId("sample").ShowOnInit(false))
    @(Html.EJ().Dialog("CancelDial").Title("Record Not Saved").ShowFooter(true).FooterTemplateId("cancelfooter").ShowOnInit(false))
    @(Html.EJ().Dialog("warningDial").Title("Non-Editable Record").ShowOnInit(false))


    @(Html.EJ().Grid<object>("Grid").AllowRowDragAndDrop()
        .Datasource(datasource => datasource.URL("GetComplaints")/*.UpdateURL("DialogUpdate").InsertURL("DialogInsert")*/.RemoveURL("DialogDelete").Adaptor(AdaptorType.UrlAdaptor))
        .EnableAltRow()
        .EditSettings(edit => { edit.AllowAdding().AllowDeleting().AllowEditing().EditMode(EditMode.DialogTemplate).DialogEditorTemplateID("#template"); })
        .AllowPaging()
        .AllowFiltering()
        .AllowTextWrap()
        .AllowGrouping()

        .SelectionType(SelectionType.Multiple)
        .AllowScrolling()
        .IsResponsive(true)
        .AllowKeyboardNavigation(true)
        .GroupSettings(group => { group.ShowGroupedColumn(true); })
        .TextWrapSettings(wrap => { wrap.WrapMode(WrapMode.Both); })
        .FilterSettings(filter => { filter.FilterType(FilterType.Excel); })
        .AllowSearching().SearchSettings(search =>
        {
            search.Fields(fields =>
            {

            });
            search.Operator(Operator.Contains);
            search.IgnoreCase(true);
        })
        .ToolbarSettings(toolbar =>
        {
            toolbar.ShowToolbar().ToolbarItems(items =>
            {
                items.AddTool(ToolBarItems.Add);
                items.AddTool(ToolBarItems.Edit);
                items.AddTool(ToolBarItems.Delete);
                items.AddTool(ToolBarItems.Update);
                items.AddTool(ToolBarItems.Cancel);
                items.AddTool(ToolBarItems.Search);
                items.AddTool(ToolBarItems.ExcelExport);
                items.AddTool(ToolBarItems.WordExport);
                items.AddTool(ToolBarItems.PdfExport);
            });
        })
        .Columns(col =>
        {

            col.Field("e_reg_complaint_code").HeaderText("e_reg_complaint_code").IsPrimaryKey(true).Visible(false).TextAlign(TextAlign.Right).Width(100).Add();
            col.Field("e_reg_complaint_No").HeaderText("Complaint Number").IsPrimaryKey(false).Visible(true).TextAlign(TextAlign.Justify).Width(100).Add();
            col.Field("e_reg_date_recieved").Type("date").HeaderText("Date Recieved").Format("{0:dd/MMM/yyyy}").Width(100).Add();
            col.Field("e_reg_date_complaint").Type("date").HeaderText("Date Complaint").Format("{0:dd/MMM/yyyy}").Width(100).Add();

            col.Field("e_reg_complaint_category").HeaderText("Complaint Category").ForeignKeyField("complaint_category_code").ForeignKeyValue("complaint_category_desc").DataSource((IEnumerable<object>)ViewBag.e_reg_complaint_category).Width(200).Add();
            col.Field("e_reg_complaint_details").HeaderText("Complaint Details").Width(250).Add();
            //col.Field("e_reg_affected_sites").HeaderText("Sites").Width(80).Add();
            // col.Field("e_reg_product_category").HeaderText("Product Category").ForeignKeyField("category_code").ForeignKeyValue("category_desc").DataSource((IEnumerable<object>)ViewBag.Product_Category).Width(150).Add();
            // col.Field("e_reg_communication_mode").HeaderText("Communication Mode").ForeignKeyField("comm_mode_code").ForeignKeyValue("comm_mode_desc").DataSource((IEnumerable<object>)ViewBag.e_reg_communication_mode).Width(150).Add();
            col.Field("e_reg_date_resolved").Type("date").HeaderText("Date Resolved").Format("{0:dd/MMM/yyyy}").Width(100).Add();
            //col.Field("e_reg_expected_date_resolution").Type("date").HeaderText("Expected Date of Resolution").Format("{0:dd/MMM/yyyy}").Width(100).Add();
            col.Field("e_reg_contact_person_id").HeaderText("Contact Person").Width(200).Add();
            col.Field("e_reg_complaint_accuteness").HeaderText("e_reg_complaint_accuteness").Width(200).Add();
            //col.Field("DeletedRecord").HeaderText("DeletedRecord").Width(200).Add();
            //col.Field("AffectedSites").HeaderText("AffectedSites").Type("string").IsPrimaryKey(false).Visible(true).TextAlign(TextAlign.Right).Width(100).Add();
            col.Field("ActionTaken").HeaderText("Action Taken").IsPrimaryKey(false).Visible(true).TextAlign(TextAlign.Right).Width(100).Add();

            // col.Field("Sup_Doc_Evidence_Rec").HeaderText("Sup_Doc_Evidence_Rec").EditType(EditingType.BooleanEdit).Visible(true).TextAlign(TextAlign.Right).Width(100).Add();
            // col.Field("Prod_Samples_Provided").HeaderText("Prod_Samples_Provided").EditType(EditingType.BooleanEdit).IsPrimaryKey(false).Visible(true).TextAlign(TextAlign.Right).Width(100).Add();
            // col.Field("Communicated_By_Lev1").HeaderText("Communicated_By_Lev1").Visible(true).TextAlign(TextAlign.Left).Width(100).Add();
            // col.Field("Email_letter_attached").HeaderText("Email_letter_attached").EditType(EditingType.BooleanEdit).Type("").TextAlign(TextAlign.Right).Width(100).Add();
            //  col.Field("Communicated_By_Lev2").HeaderText("Communicated_By_Lev2").IsPrimaryKey(false).Visible(true).TextAlign(TextAlign.Right).Width(100).Add();
            col.Field("Feedback").HeaderText("Feedback").IsPrimaryKey(false).Visible(true).TextAlign(TextAlign.Right).Width(100).Add();
            col.Field("Feedback_Communicated").HeaderText("Feedback_Communicated").IsPrimaryKey(false).Visible(true).TextAlign(TextAlign.Right).Width(100).Add();
            // col.Field("Feedback_Date").Type("date").HeaderText("Feedback_Date").IsPrimaryKey(false).Visible(true).TextAlign(TextAlign.Right).Width(100).Add();
            // col.Field("No_Feedback_Reason").HeaderText("No_Feedback_Reason").IsPrimaryKey(false).Visible(true).TextAlign(TextAlign.Right).Width(100).Add();
            //col.Field("is_quality_issue").HeaderText("Quality Issue?").Width(200).Add();
            //col.Field("is_quality_issue").HeaderTemplateID("#headerTemplate").Template(true).Template("#checkboxTemplate")./*HeaderText("")*//*.Type("checkbox").*/Width(200).Add();

        })
    .ClientSideEvents(evt => evt.ActionBegin("onActionBegin").ActionComplete("edit").ActionFailure("failure"))

      )

</div>

<script type="text/javascript">

    ///Function to return the dd-mm-YYYY format
    function dateString(args) {
        var date_complaint = new Date(args); //        date = new Date('2013-08-03T02:00:00Z');
        var year = date_complaint.getFullYear();
        var month = date_complaint.getMonth() + 1;
        var dt = date_complaint.getDate();

        if (dt < 10) {
            dt = '0' + dt;
        }
        if (month < 10) {
            month = '0' + month;
        }
        return (dt + '-' + month + '-' + year);
    }

    function onActionBegin(args) {
        if (args.requestType == "save") {

            var dateTimeObj1 = $("#e_reg_date_complaint").ejDatePicker('getValue');
            args.data["e_reg_date_complaint"] = dateTimeObj1;
            args.data["date_complaint"] = dateString(dateTimeObj1);// dt + '-' + month + '-' + year; //date_complaint;// dateTimeObj1;

            var dateTimeObj2 = $("#e_reg_date_recieved").ejDatePicker('getValue');
            var date_recieved = new Date(dateTimeObj2);
            args.data["DateReceived"] = dateString(dateTimeObj2);//dt + '-' + month + '-' + year; // date_recieved;//dateTimeObj2;

            var dateTimeObj2 = $("#e_reg_date_recieved").ejDatePicker('getValue');
            var date_recieved = new Date(dateTimeObj2);
            args.data["DateReceived"] = dateString(dateTimeObj2);//dt + '-' + month + '-' + year; // date_recieved;//dateTimeObj2;

            args.data["e_reg_date_complaint"] = dateString($("#e_reg_date_complaint").ejDatePicker('getValue'));
            args.data["e_reg_date_resolved"] = dateString($("#e_reg_date_resolved").ejDatePicker('getValue'));
            args.data["Communicated_By_Lev1Date"] = dateString($("#Communicated_By_Lev1Date").ejDatePicker('getValue'));
            args.data["e_reg_expected_date_resolution"] = dateString($("#e_reg_expected_date_resolution").ejDatePicker('getValue'));
            args.data["Feedback_Date"] = dateString($("#Feedback_Date").ejDatePicker('getValue'));
            args.data["Communicated_By_Lev2Date"] = dateString($("#Communicated_By_Lev2Date").ejDatePicker('getValue'));

            var Sup_Doc = $('#Sup_Doc_Evidence_Rec:checked').val();
            var checkedValue = $('#Sup_Doc_Evidence_Rec:checked').val();
            //alert('Sup_Doc '+Sup_Doc);
            //alert('checkedValue ' + checkedValue);


            args.data["e_reg_date_recieved"] = date_recieved;//dateTimeObj2;
            args.data["AffectedSites"] = $("#AffectedSites").val();
            var complaintcode = $("#e_reg_complaint_code").val();

            window.uploadData["editData"] = new FormData();

            //Converting the grid data to form data to send files to controller
            for (var d in args.data)
                uploadData.editData.append(d, args.data[d]);

            proxy = this;
            $.ajax({
                url: window.uploadData.url,
                type: 'POST',
                data: window.uploadData.editData,
                contentType: false,
                processData: false,
                success: function () {
                    proxy.refreshContent();

                    ////Update the child grids with the compliants code
                    setCodeActionTakenGrd(complaintcode);

                    //Save the files ...............

                    var upload = $('#UploadInput').ejUploadbox("instance");
                    if (upload != null && upload != undefined) {
                        var wrapper = upload.diaObj.wrapper;
                        var fileItem = wrapper.find(".e-ul li.e-upload-file");
                        for (var i = 0; i < fileItem.length; i++) {
                            // alert('Using begin(args) ------');
                            upload._xhrPerformUpload($(fileItem[i]).data("file"));
                        }
                    }
                    var objPreInvest = $("#ActionTakenGrd").ejGrid("instance");
                    objPreInvest.batchSave();


                }
            });
        }

    }

</script>


<script id="sample" type="text/x-jsrender">
    <div class="footerspan" style="float:right">

        @Html.EJ().Button("btn1").Size(ButtonSize.Medium).Height("30").Width("70").Text("Ok")

        @*@Html.EJ().Button("btn2").Size(ButtonSize.Mini).Height("30").Width("70").Text("Cancel")*@

    </div>
    @*<div class="condition" style="float:left; margin-left:15px">
            @Html.EJ().CheckBox("check1").Text("Don't ask me this again")
        </div>*@
</script>

<script id="cancelfooter" type="text/x-jsrender">
    <div class="footerspan" style="float:right">
        @Html.EJ().Button("btnOK").Size(ButtonSize.Medium).Height("30").Width("70").Text("Ok")
        @Html.EJ().Button("btnCancel").Size(ButtonSize.Mini).Height("30").Width("70").Text("Cancel")

    </div>
    <div class="condition" style="float:left; margin-left:15px">
        @Html.EJ().CheckBox("check1").Text("Don't ask me this again")
    </div>
</script>

<script type="text/template" id="template" @*style="width: 100%"*@>
    <b>Complaints</b>

    <div id="defaultTab" style="width: 100%;">
        <ul>
            <li><a href="#tab1">Complaints</a></li>
            <li><a href="#tab2">Quality Issues</a></li>
        </ul>

        <div id="tab1">

            <div class="panel-group" id="accordion">
                <div class="panel panel-default" id="complaintHeader">
                    <div class="panel-heading">
                        <h2 class="panel-title">
                            <a data-toggle="collapse" data-parent="#accordion" href="#collapse1">
                                Complaint
                            </a>
                        </h2>
                    </div>
                    <div id="collapse1" class="panel-collapse collapse in">
                        <div class="panel-body">
                            <table @*id="table2" border="1" cellpadding="3" cellspacing="0" border-collapse="none"*@>

                                <tr>
                                    <td style="text-align:left;" @*hidden="hidden"*@>Complaint Number</td>
                                    <td style="text-align: left" hidden="hidden"> <input type="text" id="e_reg_complaint_code" name="e_reg_complaint_code" value="{{:e_reg_complaint_code}}" class="e-field e-ejinputtext valid" hidden="hidden" /> </td>
                                    <td style="text-align: left" @*hidden="hidden"*@> <input type="text" id="e_reg_complaint_No" name="e_reg_complaint_No" value="{{:e_reg_complaint_No}}" class="e-field e-ejinputtext valid" @*hidden="hidden"*@ /> </td>
                                    <td style="text-align: left;">Date Complaint received at MAUL</td>
                                    <td style="text-align: left"> <input type="text" id="e_reg_date_recieved" name="e_reg_date_recieved" value="{{:e_reg_date_recieved}}" class="e-field e-ejinputtext valid" /></td>

                                </tr>
                                <tr>

                                    <td style="text-align: left;">Complaint category</td>
                                    <td style="text-align: left"> <input type="text" id="e_reg_complaint_category" name="e_reg_complaint_category" value="{{:e_reg_complaint_category}}" class="e-field e-ejinputtext valid" /> </td>

                                    <td style="text-align: left;">Affected Sites</td>
                                    <td style="text-align: left"> <input @*type="text"*@ id="AffectedSites" name="AffectedSites" value="{{:AffectedSites}}" /> </td>

                                </tr>
                                <tr>
                                    <td class="redLabels">Issue/ Complaint Details</td>
                                    <td colspan="3" style="text-align: left">
                                        <textarea id="e_reg_complaint_details" name="e_reg_complaint_details" class="form-control" value="{{: e_reg_complaint_details}}" cols="95" rows="5" style="max-width:100%">{{: e_reg_complaint_details}}</textarea>
                                    </td>
                                </tr>

                                <tr>
                                    <td style="text-align: left;">Product Category</td>
                                    <td style="text-align: left"> <input type="text" id="e_reg_product_category" name="e_reg_product_category" value="{{:e_reg_product_category}}" class="e-field e-ejinputtext valid" /> </td>
                                    <td style="text-align: left;">Mode of Communcation</td>
                                    <td style="text-align: left"> <input type="text" id="e_reg_communication_mode" name="e_reg_communication_mode" value="{{:e_reg_communication_mode}}" class="e-field e-ejinputtext valid" /> </td>
                                </tr>

                                <tr>
                                    <td style="text-align: left;">MAUL Responsible Staff</td>
                                    <td style="text-align: left"> <input type="text" id="e_reg_MAUL_Staff" name="e_reg_MAUL_Staff" value="{{:e_reg_MAUL_Staff}}" class="e-field e-ejinputtext valid" /> </td>
                                    <td class="redLabels">Complaint Severity</td>
                                    <td style="text-align: left"> <input type="text" id="e_reg_complaint_accuteness" name="e_reg_complaint_accuteness" value="{{:e_reg_complaint_accuteness}}" class="e-field e-ejinputtext valid " /> </td>
                                </tr>

                                <tr>
                                    <td style="text-align: left;">Expected Date of Resolution</td>
                                    <td style="text-align: left"> <input type="text" id="e_reg_expected_date_resolution" name="e_reg_expected_date_resolution" value="{{:e_reg_expected_date_resolution}}" class="e-field e-ejinputtext valid" /> </td>
                                    <td class="redLabels">Date Resolved</td>
                                    <td style="text-align: left"> <input type="text" id="e_reg_date_resolved" name="e_reg_date_resolved" value="{{:e_reg_date_resolved}}" class="e-field e-ejinputtext valid " /> </td>
                                </tr> 

                            </table>



                        </div>
                    </div>
                </div>

                <div class="panel panel-default" id="panelActionTakenGrd">
                    <div class="panel-heading">
                        <h4 class="panel-title">
                            <a data-toggle="collapse" data-parent="#accordion" href="#collapse6">
                                Action Taken
                            </a>
                        </h4>
                    </div>
                    <div id="collapse6" class="panel-collapse collapse collapse in">
                        <div class="panel-body">
                            <table>

                                @* <tr><td style="text-align: justify;">acc</td> <td style="text-align: left"> <input type="text" id="acc" name="acc" value="{{:acc}}" class="e-field e-ejinputtext valid" /> </td></tr>*@

                                <tr style="width:100%">
                                    <td width="100%" @*style="text-align: justify;"*@>
                                        <!-- Place where you will insert your partial -->
                                        <div id="ActionTakenGrd" @*style="display:none;*@ width:100%"> </div>
                                    </td>


                                </tr>

                            </table>
                        </div>
                    </div>
                </div>


            </div>
        </div>
        @*<div id="tab1">*@

        @*</div>*@

        <div id="tab2">
        </div>
    </div>
</script>

<script>

    function loadpics() {
        var regcode = $('#e_reg_complaint_code').val();
        //alert('Loading ... ');
        // Home is your controller, Index is your action name
        $("#partialPlaceHolder").load("@Url.Action("loadEvidence", "fo_complaint")",
            { 'e_reg_complaint_code': regcode },
                function (response, status, xhr) {
                    if (status == "error") {
                    }
                });
    };



    function selectContact(e) {

        //Clear the vales
        $('#ComplainantName').val('');
        $('#ComplainantTitle').val('');
        $('#ComplainantEmail').val('');
        $('#ComplainantMobile').val('');
        $('#ComplainantPhone').val('');
        $('#ComplainantFacilityCode').val('');
        $('#ComplainantDistrict').val('');


        var mComplainantCategoryDesc = e.text; //Name
        mid = e.value;
        //alert(mid);
        var mComplainantCategory = e.value;
        $('#e_reg_complaint_details').ejDropDownList({
            dataSource: null,
            enabled: false,
            width: "150px",
            fields: { value: "cp_name", text: "cp_name" },
        }).data("ejDropDownList");

        $.ajax({
            url: 'contactPersons?cp_category=' + mComplainantCategory,
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            type: 'GET',
            success: function (datadetails) {
                if (datadetails.length > 0) {
                    //debugger;
                    //console.log(JSON.stringify(datadetails));
                    $('#ComplainantName').ejDropDownList({

                        dataSource: datadetails,
                        enabled: true,
                        width: "150px",
                        change:"setContactdetails",
                        fields: { value: "cp_code", text: "cp_name" },
                    }).data("ejDropDownList");
                }
            },
        });
    }
    function open(args) {

        var objDialog = $("#Grid").data("ejGrid");
        var $dialogWrapper = objDialog.element.find("#" + objDialog._id + "_dialogEdit_wrapper");
        $dialogWrapper.css("top", "0px");
        $dialogWrapper.css("left", "0px");
    }
    function  setContactdetails(e) {
        var mComplainant = e.text; //Name
        mid = e.value;
        //alert(e.value);
        var mComplainantCode = e.value;
        //Clear the vales
        $('#ComplainantName').val('');
        $('#ComplainantTitle').val('');
        $('#ComplainantEmail').val('');
        $('#ComplainantMobile').val('');
        $('#ComplainantPhone').val('');
        $('#ComplainantFacilityCode').val('');
        $('#ComplainantDistrict').val('');


        //contactPerson(int? cp_code)
        $.ajax({
            url: 'contactPerson?cp_code=' + mComplainantCode,
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            type: 'GET',
            success: function (contactdetails) {
                console.log(JSON.stringify(contactdetails));

                 if (Object.keys(contactdetails).length > 0) {
                     $('#ComplainantName').val(contactdetails.cp_name);
                    //$('#ComplainantTitle').val(contactdetails.cp_title);
                    setTitle(contactdetails.cp_title);

                    $('#ComplainantEmail').val(contactdetails.fo_contact_email);
                    $('#ComplainantMobile').val(contactdetails.ComplainantMobile);
                    $('#ComplainantPhone').val(contactdetails.fo_contact_telephone);
                    //$('#ComplainantFacilityCode').val(contactdetails.cp_facility);
                    setFacility(contactdetails.cp_facility);
                   // $('#ComplainantDistrict').val(contactdetails.cp_district);
                    setDistrict(contactdetails.cp_district);
                }
            },
        });

    }
    function setTitle(args)
    {
        $('#ComplainantTitle').val('');
        if (args == null || args === 'undefined')
        {
            return;
        }
        $.ajax({
            url: 'contactTitle?title_code=' + args,
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            type: 'GET',
            success: function (titledetails) {
                if (Object.keys(titledetails).length > 0) {

                    // When you use .Where(c => c.title_code...  the result is an array
                    //alert(titledetails[0].title_desc);

                    //When you use .FirstOrDefault(c => c.title_code  ...
                     //alert(contactdetails.title_desc);
                    // console.log(JSON.stringify(titledetails));

                    $('#ComplainantTitle').val(titledetails.title_desc);
                }
                //else {
                //    alert('Potea');
                //}
            },
        });
    }

    function setFacility(args) {
        if (args == null || args === 'undefined') {
            return;
        }
        $.ajax({
            url: 'contactFacility?fac_code=' + args,
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            type: 'GET',
            success: function (Facilitydetails) {
               // debugger;
                // console.log(JSON.stringify(Facilitydetails));
                if (Object.keys(Facilitydetails).length > 0) {
                    $('#ComplainantFacilityCode').val(Facilitydetails.Facility);
                }
            },
        });
    }

    function setDistrict(args) {
        if (args == null || args === 'undefined') {
            return;
        }
        $.ajax({
            url: 'contactDistrict?dist_code=' + args,
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            type: 'GET',
            success: function (Districtdetails) {
                console.log(JSON.stringify(Districtdetails));
                if (Object.keys(Districtdetails).length > 0) {
                    $('#ComplainantDistrict').val(Districtdetails.District_Name);
                }
            },
        });
    }
</script>


<script>

    $.validator.setDefaults({
        //to validate all fields(hidden also)
        ignore: [], 
        errorClass: 'e-validation-error',
        //it specifies the error message display position
        errorPlacement: function (error, element) {
            $(error).insertAfter(element.closest(".e-widget"));
        },
    });


    function edit(args) {
        var objDialog = $("#Grid").data("ejGrid"); 
        if (args.requestType == "save") {
            var proddesc = $('#e_reg_complaint_details').val();
            var str = proddesc + " Saved Successfully!!!";
            //alert(proddesc);
            successSave();
        }

        if (args.requestType == "beginedit" || args.requestType == "add") {
            $($("#EditDialog_Grid_Save").hide()).after('<button id="save" type="button" onclick="savess();" class="btn btn-success btn-sm" > <span class="glyphicon glyphicon-save"></span> Save</button>');
            $("#save").css({ "width": "100px", "height": "50px", "font-size": "17px", "float": "right", "margin-left": "10px", "margin-top": "20px", "margin-bottom": "10px" });
            $("#EditDialog_Grid_Cancel").ejButton("destroy");
            $($("#EditDialog_Grid_Cancel").hide()).after(' <button type="button" id="cancel" onclick="cancelss()" class="btn btn-danger btn-sm" ><span class="glyphicon glyphicon-remove-circle"></span> Cancel</button>');
            $("#cancel").css({ "width": "100px", "height": "50px", "float": "right", "margin-left": "10px", "margin-top": "20px", "margin-bottom": "10px" });

            $("#" + objDialog._id + "_dialogEdit").ejDialog({ open: "open" }) 
            $("#defaultTab").ejTab({ selectedItemIndex: 0 }).ejTab({ showRoundedCorner: true });; 

            window.e_reg_complaint_code = $('#e_reg_complaint_code').val();;

            //A Global var to track and hold file uploading info
            window.uploadData = {};
            // Date of Visit
            $("#e_reg_date_recieved").ejDatePicker(
                {
                    maxDate: new Date(), value: new Date(new Date($("#e_reg_date_recieved").attr("value"))),
                    validationRules: {
                        required: true
                    },
                    validationMessage: {
                        required: "Date recieved is Required"
                    },
                }
            );
            var YesNo =@Html.Raw(Json.Encode(ViewBag.YesNo));
            var Facilities =@Html.Raw(Json.Encode(ViewBag.Facilities ));
            var contacts =@Html.Raw(Json.Encode(ViewBag.Contacts));

            var maul_staff =@Html.Raw(Json.Encode(ViewBag.MAUL_Staff));
            //ViewBag.MAUL_Staff
            var productCategories =@Html.Raw(Json.Encode(ViewBag.Product_Category));
            var CommunicationModes =@Html.Raw(Json.Encode(ViewBag.e_reg_communication_mode));

           var Action_Taken =@Html.Raw(Json.Encode(ViewBag.fo_a_action_taken));


            var DDprodCat = $('#e_reg_product_category').ejDropDownList({
                dataSource: productCategories,
                width: "150px",
                fields: { value: "category_code", text: "category_desc" },
                //change: "selectContact",
            }).data("ejDropDownList");


            var DropDownListCC = $('#e_reg_communication_mode').ejDropDownList({
                dataSource: CommunicationModes,
                width: "150px",
                fields: { value: "comm_mode_code", text: "comm_mode_desc" },
                //change: "selectContact",
            }).data("ejDropDownList");

            var DD_MS = $('#e_reg_MAUL_Staff').ejDropDownList({
                dataSource: maul_staff,
                width: "150px",
                fields: { value: "cp_code", text: "cp_name" },
                //change: "selectContact",
            }).data("ejDropDownList");

            //
            $("#e_reg_date_complaint").ejDatePicker({ maxDate: new Date() });

            $("#e_reg_date_resolved").ejDatePicker({ maxDate: new Date() });
            $("#Communicated_By_Lev1Date").ejDatePicker({ maxDate: new Date() });
            $("#e_reg_expected_date_resolution").ejDatePicker();
            $("#Feedback_Date").ejDatePicker({ maxDate: new Date() });
            $("#Communicated_By_Lev2Date").ejDatePicker({ maxDate: new Date() });
            $("#e_reg_contact_person_id").ejAutocomplete();
            //$("#e_reg_complaint_details");


            $('#e_reg_complaint_category').ejDropDownList({
                dataSource: @Html.Raw(Json.Encode(ViewBag.e_reg_complaint_category)),
                width: "200px",
                validationRules: {
                    required: true
                },
                validationMessage: {
                    required: "Complaint Category is Required"
                },
                fields: { value: "complaint_category_code", text: "complaint_category_desc" },

            }).data("ejDropDownList");


            var ASDropDownList = $('#AffectedSites').ejDropDownList({
                dataSource: Facilities,
                width: "240px",
                fields: { value: "FacilityCode", text: "Facility" },
                showCheckbox: true,
            }).data("ejDropDownList");

            $('#e_reg_complaint_accuteness').ejDropDownList({
                dataSource: @Html.Raw(Json.Encode(ViewBag.Accuteness)),
                width: "200px",
                fields: { value: "accuteness_code", text: "accuteness_desc" },
            }).data("ejDropDownList");

            $('#IP').ejDropDownList({
                dataSource: @Html.Raw(Json.Encode(ViewBag.YesNo)),
                fields: { value: "yes_no_id", text: "yes_no_desc" },
            }).data("ejDropDownList");


            if (args.requestType == "add") {
                $.ajax({
                    type: 'GET',
                    url: "complaintCode",
                    success: function (result) {
                        $('#e_reg_complaint_code').val(++result);
                    },
                });

                $.ajax({
                    type: "POST",
                    url: "ComplaintCodeString",
                    data: {},
                    datatype: "html",
                    contentType: 'application/x-www-form-urlencoded',
                    success: function (data) {
                        $('#e_reg_complaint_No').val(data.msg);
                    },
                    error: function () {
                        alert("Error occured!!");
                    }
                });
            }

            // alert($('#e_reg_complaint_code').val());

            // window.uploadData = [];
            window.uploadData = {};
            //window.uploadData = [];
            window.uploadData.url = args.requestType == "add" ? "DialogInsert2" : "DialogUpdate2";

            $('#UploadInput').ejUploadbox({
                saveUrl: "SaveSupportDoc",
                dialogAction: { closeOnComplete: true },
                multipleFilesSelection: true,
                showFileDetails: false,
                begin: "onbegin",
                success: "onsuccess",
                //fileSelect : "select",/
                //fileSelect: function (args) {
                //    filecount = args["files"].length;
                //    for (var k = 0; k < filecount; k++) {
                //        uploadData.push(args["files"][k].rawFile); // for latest version
                //    }
                //}
            });



            //$("#UploadInput").ejUploadbox("disable");
            //$("#UploadInput").ejUploadbox("enable");
            $('#e_reg_complaint_code').attr('readonly', 'readonly');
            $('#e_reg_complaint_No').attr('readonly', 'readonly');

            loadpics(); 
            $("#ActionTakenGrd").ejGrid({
                dataSource: ej.DataManager({ url: "BatchData_Complaint_Tracker?e_reg_track_code=" + window.e_reg_complaint_code, batchUrl: "BatchUpdateActionsTaken", adaptor: "UrlAdaptor" }),
                allowGrouping: false,
                isResponsive: true,
                enableAltRow: true,
                allowTextWrap: true,
                textWrapSettings: { wrapMode: "both" },
                cellEdit: "cellEditActionTaken",
                allowResizeToFit: true,
                showStackedHeader: true,
                enableResponsiveRow: true,
                queryCellInfo: "queryCellInfo",
                toolbarSettings: {
                    showToolbar: true,
                    toolbarItems: ["add", "edit", "delete", "update", "cancel"]
                },

                editSettings: { rowPosition: "bottom",allowEditing: true, allowAdding: true, allowDeleting: true, editMode: 'batch' },
                allowResizeToFit: true,
                columns: [
                    { field: "e_reg_track_code", visible: true, allowEditing: true, headerText: "HHcode", width: 100, isPrimaryKey: false },
                
                    { field: "e_reg_track_complaint_code", visible: true, allowEditing: true, headerText: "Comp. Code", width: 100, isPrimaryKey: false },

                    {field: "e_reg_track_date_of_action", headerText: "Date Action was taken", editType: "datepicker", format: "{0:MM/dd/yyyy}", width: 100 },

                    {
                        field: "e_reg_track_action_details", headerText: "Details", headerTooltip: "To add new line use Shift-Enter ", editTemplate: {
                            create: function () {
                                return "<textarea style='width:100%; display:block; max-width:100%;line-height:3.0;padding:15px 15px  30px; border-radius:3px; border:1px solid #F7E98D; font:13px Tahoma, cursive; transition:box-shadow 0.5s ease; box-shadow:0 4px 6px rgba(0,0,0,0.1); font-smoothing:subpixel-antialiased; background:linear-gradient(#F9EFAF, #F7E98D); background:-o-linear-gradient(#F9EFAF, #F7E98D); background:-ms-linear-gradient(#F9EFAF, #F7E98D); background:-moz-linear-gradient(#F9EFAF, #F7E98D); background:-webkit-linear-gradient(#F9EFAF, #F7E98D);'>{{:e_reg_track_action_details}}</textarea>";
                            },
                            write: function (args) {
                                $('.text').css("max-width", args.element.parent("td").width());
                                $('.text').css("max-height", args.element.parent("td").height());
                                null;
                            },
                            read: function (args) {
                                return args.val();
                            },
                        }
                        , width: 300,
                    },
                    { field: "e_reg_track_action_taken", width: 200, headerText: "Action Taken", editType: "dropdownedit", editParams: { showCheckbox: true }, foreignKeyValue: "action_taken_desc", foreignKeyField: "action_taken_code", dataSource: Action_Taken },
                ],
            });



        }
    }

    function setCodeActionTakenGrd(args) {

        $.ajax({
            type: 'GET',
            url: "PreInvestigationGrid",
            success: function (result) {
                if (result > 0) {
                    //debugger;

                    for (i = 0; i < result; i++) {
                        $("#ActionTakenGrd").ejGrid("setCellValue", i, "e_reg_complaint_code", args);
                    }
                }
            },
        });
    }


    function savess(args) {
        var complaintcode = $("#e_reg_complaint_code").val();

        var myvalues = $("#AffectedSites").val();

        //debugger;
        var obj = $("#Grid").ejGrid("instance");
        obj.endEdit();

        ////Update the child grids with the compliants code
       // setCodeActionTakenGrd(complaintcode);


        ////Save the files ...............
        //var upload = $('#UploadInput').ejUploadbox("instance");
        //var wrapper = upload.diaObj.wrapper;
        //var fileItem = wrapper.find(".e-ul li.e-upload-file");
        //for (var i = 0; i < fileItem.length; i++) {
        //    //alert('Using begin(args) ------');
        //    upload._xhrPerformUpload($(fileItem[i]).data("file"));
        //}

        $.ajax({

            type: 'GET',
            url: 'ComplaintSaved?e_reg_complaint_code=' + complaintcode,
            success: function (result) {
                //if (Object.keys(result).length > 0)
                {
                    //$.alert('Your record exists - Whooray !!!');
                    //var complaintcode = $("#ActionTakenGrd").val();
                    alert(result.e_reg_complaint_code);
                    var objPreInvest = $("#ActionTakenGrd").ejGrid("instance");
                    objPreInvest.batchSave();


                }
            },

        });

    }


    function cancelss() {
        cancelSave();

    }

    function failure(args) {
        $("#Grid").ejWaitingPopup("hide");
        var str = "";
        str = ($($(args.error.responseText).find('b')[0]).text() + ":" + $(args.error.responseText).find('i').text());
        $("#ErrorList").html('<p style="font-family: cursive;color: red;">' + str + '</p></br><button id="button1" style="size: large; showRoundedCorner: true; cssClass:customCss1">---OK---</button>');
        $("#button1").ejButton({

            click: function (args) {
                $("#ErrorList").ejDialog("close");
            }
        });
        $("#ErrorList").ejDialog({ enableModal: true });
        $("#ErrorList").ejDialog("open");
    }

    function cancelSave(args) {
        $("#Grid").ejWaitingPopup("hide");
        var proddesc = $('#e_reg_complaint_details').val();
        var str = "The edits on " + proddesc + " have been Cancelled!!!";
        //$("#SuccessDial").html('<p style="font-family: cursive;color: green;">' + str + '</p></br><button id="button1" style="margin-left: 50%;size: large; showRoundedCorner: true; cssClass:customCss1">OK</button>');
        $("#CancelDial").html('<p style="font-family: cursive;color: red;">' + str /*+ '</p></br><button id="button1" style="margin-left: 50%;size: large; showRoundedCorner: true; cssClass:customCss1">OK</button>'*/);

        var obj = $("#Grid").ejGrid("instance")
        obj.cancelEdit();
        $("#btnOK").ejButton({
            cssClass: "e-danger",
            size: "large",
            showRoundedCorner: true,
            contentType: "textandimage",
            prefixIcon: "e-icon e-handup",
            visible: false,
            style: "float:right",
            click: function (args) {

                $("#CancelDial").ejDialog("close");
            }
        });

        $("#CancelDial").ejDialog({ enableModal: true });
        $("#CancelDial").ejDialog("open");
    }

    function editWarning(args) {

        var str = "Non Editable Record";
        $("#warningDial").html('<p style="font-family: cursive;color: red;">' + str + '</p></br><button id="button1" style="size: large; showRoundedCorner: true; cssClass:customCss1">OK</button>');
        $("#button1").ejButton({

            click: function (args) {
                $("#warningDial").ejDialog("close");
            }
        });
        $("#warningDial").ejDialog({ enableModal: true });

        $("#warningDial").ejDialog("open");
    }

    function successSave(args) {
        $("#Grid").ejWaitingPopup("hide");
        var proddesc = $('#e_reg_complaint_details').val();
        var str = proddesc + " Saved Successfully!!!";

        //$("#SuccessDial").html('<p style="font-family: cursive;color: green;">' + str + '</p></br><button id="button1" style="margin-left: 50%;size: large; showRoundedCorner: true; cssClass:customCss1">OK</button>');
        $("#SuccessDial").html('<p style="font-family: cursive;color: green;">' + str /*+ '</p></br><button id="button1" style="margin-left: 50%;size: large; showRoundedCorner: true; cssClass:customCss1">OK</button>'*/);


        $("#btn1").ejButton({
            cssClass: "e-primary",
            size: "large",
            showRoundedCorner: true,
            contentType: "textandimage",
            prefixIcon: "e-icon e-handup",
            visible: false,
            style: "float:right",
            click: function (args) {
                $("#SuccessDial").ejDialog("close");
            }
        });

        $("#button1").ejButton({
            cssClass: "e-success",
            size: "medium",
            showRoundedCorner: true,
            contentType: "textandimage",
            prefixIcon: "e-icon e-handup",

            click: function (args) {
                $("#SuccessDial").ejDialog("close");
            }
        });
        $("#SuccessDial").ejDialog({ enableModal: true });
        $("#SuccessDial").ejDialog("open");
    }
    function begin(args) {
        if (args.requestType == "save") {
          //  alert("Iam begining");
            var upload = $('#UploadInput').ejUploadbox("instance");
            var wrapper = upload.diaObj.wrapper;
            var fileItem = wrapper.find(".e-ul li.e-upload-file");
            for (var i = 0; i < fileItem.length; i++) {
               // alert('Using begin(args) ------');
                upload._xhrPerformUpload($(fileItem[i]).data("file"));
            }
            alert('Dummies saved');
        }
    }


    function onbegin(args) {
        var complaintcode = $('#e_reg_complaint_code').val();
        //alert(complaintcode);
        args.data = complaintcode;
    }

    function onsuccess(args) {
    }



    function queryCellInfo(args) {
       var action_Taken =@Html.Raw(Json.Encode(ViewBag.fo_a_action_taken));
       //console.log(JSON.stringify(action_Taken));
        //if (args.column.field == "ApprovedActivity" && !$(args.cell).find("input").hasClass("e-checkbox"))
        //{
        //    $(args.cell).find("input").ejCheckBox();//render the ejCheckbox
        //}
        if (args.column.field == "e_reg_track_action_taken")
        {
            if (args.data.e_reg_track_action_taken != null && args.data.e_reg_track_action_taken!='')
            {
                var sourceIds = args.data.e_reg_track_action_taken.split(',');
                var roles = [];
                // console.log(JSON.stringify(sourceIds));
                for (var i = 0 ; i < sourceIds.length ; i++) {
                    //Using the predicate you can filter using more that one search field
                    var detaildata = ej.DataManager(action_Taken).executeLocal(ej.Query().where(ej.Predicate("action_taken_code", ej.FilterOperators.equal, sourceIds[i], false) ).take(10));
                    if(detaildata!= null)
                    {
                        //console.log(JSON.stringify(detaildata));
                        roles.push(detaildata[0]["action_taken_desc"])
                    }
                }
                $(args.cell).text(roles.toString());
            }
        }
        //console.log(JSON.stringify(action_Taken));


    }

    function cellEdit(args) {


    }
    function cellEditActionTaken(args) {

        var gridInstance = $("#ActionTakenGrd").ejGrid("instance");
        var actionTakenindex = gridInstance.selectedRowsIndexes;
        var grid = this._id;
        var Rcode = $("#e_reg_complaint_code").val();
        $("#ActionTakenGrd").ejGrid("setCellValue", actionTakenindex, "e_reg_complaint_code", Rcode);
    }

    function cascadeEventSubCounty(args) {
        args.requiresDefaultFilter = false; // restrict the built-in mapping for cascading dropdown
        args.cascadeQuery = ej.Query().where("subcounty_id", "equal", args.cascadeValue); // query to filter value based id
    }

    function cascadeEventParish(args) {
        args.requiresDefaultFilter = false; // restrict the built-in mapping for cascading dropdown
        args.cascadeQuery = ej.Query().where("parish_id", "equal", args.cascadeValue); // query to filter value based id
    }


</script>

<script type="text/javascript">
    @*var dropData = @Html.Raw(Json.Encode(ViewData["SourceOfFunding"]))
    var participantData = @Html.Raw(Json.Encode(ViewData["CoA_Participation"]))*@
     var action_Taken =@Html.Raw(Json.Encode(ViewBag.fo_a_action_taken));
    function create(args) {
        return "<input>";
    }
    function read(args) {
        return args.ejDropDownList("getValue").split(",");
    }
    function write(args) {
        if (args.column.field == "e_reg_track_action_taken" && args.rowdata != undefined) {
            var selIndex = [];
            for (i = 0; i < args.rowdata["e_reg_track_action_taken"].length; i++)
                for (j = 0; j < dropData.length; j++) {
                    if (args.rowdata["e_reg_track_action_taken"][i] == dropData[j].value) {
                        selIndex.push(j);
                        break;
                    }
                }
            args.element.ejDropDownList({ width: "100%", dataSource: action_Taken, fields: { id: "action_taken_code", text: "action_taken_desc", value: "action_taken_code" }, showCheckbox: true, allowMultiSelection: true, selectedItems: args.rowdata !== undefined ? selIndex : "" });
        } 
    }
</script>


<style>
    .panel-default > .panel-heading {
        background-color: #451bb1 /*#3e1111*/;
        color: white;
        /*background-color:silver;*/
        /*color: white;*/
    }
</style>

<style type="text/css" class="cssStyles">
    .control {
        margin-left: 30px;
    }

    .ctrllabel {
        padding-top: 15px;
    }

    .control {
        margin-left: 20px;
    }

    .frame {
        height: 250px;
        width: 1000px;
    }

    .frame1 {
        height: 240px;
        width: 900px;
    }

    .txt {
        display: block;
        margin-bottom: 12px;
    }
</style>

<style>
    #lblComplaintTitle {
        /*font-size: 24px;*/
        background-color: white;
        color: #c9252b;
        vertical-align: top;
        /*width: 700px;*/
    }

    .redLabels {
        /*font-size: 24px;*/
        background-color: white;
        color: #ff0000;
        vertical-align: top;
        font-weight: bold;
        /*width: 700px;*/
    }

    .myDiv {
        font-size: 18px;
        background-color: white;
        color: orangered;
        vertical-align: top;
        text-align: center;
        /*width: 700px;*/
    }
</style>

<style>
    .e-grid .e-dialog .gridform .e-rowcell {
        padding: .5em;
    }

    .custom.e-js .e-header {
        background: #c9252b;
    }

    .custom.e-js .e-content {
        background: #ddd;
    }

    .custom .e-rbn-button.e-btn.e-select {
        background: #f5f5f5;
        color: #333;
    }

    .tabstyle {
        background: #F9F9F9;
        border-radius: 10px;
        border: 1px solid #99CFE3;
        display: block;
    }

    .longcolumns {
        width: 600px !important;
        margin: 0 auto !important;
        position: relative !important;
        border-right: 5px #666 outset !important;
        border-left: 5px #666 outset !important;
    }
</style>





<!--Code corresponding to columnTemplate-->
<script type="text/x-jsrender" id="checkboxTemplate">
    <input type="checkbox" class="rowCheckbox" />
</script>

<!--Code corresponding to headerTemplate-->
<script type="text/x-jsrender" id="headerTemplate">
    <input type="checkbox" id="headchk" />
</script>

<script>
    //function create(args) {
    //    $("#Grid .rowCheckbox").ejCheckBox({ "change": checkChange });
    //    $("#headchk").ejCheckBox({ "change": headCheckChange });
    //}
    function complete(args) {
        $("#Grid .rowCheckbox").ejCheckBox({ "change": checkChange });
        $("#headchk").ejCheckBox({ "change": headCheckChange, checked: false });
    }

    function checkChange(e) {
        //Simple alert
        //$.alert({
        //    title: 'Alert!',
        //    content: 'Simple alert!',
        //});
        gridObj = $("#Grid").data("ejGrid");
        var rowCheck = $(".rowCheckbox:checked");
        if (rowCheck.length == gridObj.model.pageSettings.pageSize)//check if all checkboxes in the current page are checked
            $("#headchk").ejCheckBox({ "checked": true });
        else
            $("#headchk").ejCheckBox({ "checked": false });

        if (($("#headchk").is(':checked')) && this.model.checked != true) {
            for (i = 0; i < rowCheck.length; i++) {
                gridObj.multiSelectCtrlRequest = true;
                gridObj.selectRows($(rowCheck[i]).parents("tr").index());// To prevent unselection of other rows when a checkbox is unchecked after selectAll rows
            }
            //gridObj.clearSelection($(this).parents("tr").index()); // To remove selection of current row when the checkbox is unchecked after selectAll rows
        }
        if (this.model.checked == false) {
            $("#headchk").ejCheckBox({ "checked": false });
            //$("#Grid .rowCheckbox").ejCheckBox({ "checked": false });
        }
        gridObj.multiSelectCtrlRequest = true;//For MultiSelection using Checkbox
    }

    function recordClick(args) {
        if (this.multiSelectCtrlRequest == false) {
            for (var i = 0; i < $("#Grid .rowCheckbox").length; i++)
                $($("#Grid .rowCheckbox")[i]).ejCheckBox({ "checked": false })  //To clear checkbox when we select row by recordclick rather than checkbox
            this.clearSelection();
            $("#headchk").ejCheckBox({ "checked": false });
        }
    }

    function headCheckChange(e) {
        $("#Grid .rowCheckbox").ejCheckBox({ "change": checkChange });
        gridObj = $("#Grid").data("ejGrid");
        if ($("#headchk").is(':checked')) {
            $(".rowCheckbox").ejCheckBox({ "checked": true });
            gridObj.multiSelectCtrlRequest = true;
            gridObj.selectRows(0, gridObj.model.pageSettings.pageSize);  // To Select all rows in Grid Content
        }
        else {
            $(".rowCheckbox").ejCheckBox({ "checked": false });
            gridObj.clearSelection(); // To remove selection for all rows
        }
    }
</script>

<style>
    .e-grid .e-groupdroparea, /*GroupDropArea */
    .e-grid .e-groupdroparea:hover, /*GroupDropArea Hover*/
    .e-grid .e-cloneproperties, /*Column header clone during dragging header*/
    .e-grid .e-groupheadercell:hover, /*HeaderCell in GroupDropArea*/
    .e-grid td.e-active, /*During Row Selected*/
    /*For pager items and their hover*/
    .e-pager .e-currentitem,
    .e-pager .e-currentitem:hover,
    .e-pager .e-link:hover,
    .e-pager .e-icon:hover {
        background-color: #ea1b8d;
    }

    .e-grid .e-gridheader /*For line that separates the grid header and content*/ {
        border-bottom-color: #ea1b8d;
    }

    .e-grid tr.e-hover /*For row hover*/ {
        background-color: #e66aae;
        color: #FFFFFF;
    }

    .e-grid .e-alt_row /*For Alternate row color*/ {
        background-color: #E5E4E2; /*#99CFE3;*/
    }
</style>

<style>
    .e-grid .e-dialog .gridform .e-rowcell {
        padding: .5em;
        border-bottom: 1px solid #c8c8c8;
        border-left: 1px solid #c8c8c8;
    }
</style>

<script>
    //$(function () {
    //    //Register helper to show file details
    //    $.views.helpers({ HasFile: HasFile });
    //});

    ////Helper function to check file available status
    //function HasFile() {
    //    return this.data["Photo"] != null ? "File Available" : "No File Available";
    //}

</script>

<style>
    .e-kanban .e-dialog .e-titlebar {
        /*You can change title css property background-color: #C0C0C0;*/
        color: #B22222;
        font-size: 20px;
    }
</style>

