
@{
    ViewBag.Title = "ManageRFSOFacility";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@section BreadCrumb{
    <div class="row">
        <div class="col-lg-12">
            <ol class="breadcrumb">
                <li>
                    @Html.ActionLink("Home", "IndexAdministrator", "Home")
                </li>
                <li class="active">
                    <strong>SCTO: Manage Facility SCTO</strong>
                </li>
            </ol>
        </div>
    </div>

}

@(Html.EJ().Grid<object>
        ("Grid")
        .Datasource(datasource => datasource.URL("DataSourceRFSO").BatchURL("BatchUpdate").Adaptor(AdaptorType.UrlAdaptor))
         //.AllowPaging()
         .AllowFiltering()
         .ShowColumnChooser()
        .AllowTextWrap()
        .AllowGrouping()

        //.AllowScrolling()
        //.ScrollSettings(scroll =>
        //{
        //    scroll.AllowVirtualScrolling().Height(500).Width(0).
        //    VirtualScrollMode(VirtualScrollMode.Normal);
        //})
        .AllowKeyboardNavigation(true)
        .GroupSettings(group => { group.ShowGroupedColumn(true); })
        .TextWrapSettings(wrap => { wrap.WrapMode(WrapMode.Both); })
        .FilterSettings(filter => { filter.FilterType(FilterType.Excel); })
        .ShowColumnChooser()
        .AllowScrolling()
        .AllowFiltering(true)
    .ScrollSettings(col => { col.Width(1300); })
          .EditSettings(edit => { edit.AllowEditing().EditMode(EditMode.Batch); })
        .AllowSearching().SearchSettings(search =>
        {
            search.Fields(fields =>
            {

            });
            search.Operator(Operator.Contains);
            search.IgnoreCase(true);
        })
        .EditSettings(edit => { edit.AllowAdding().AllowDeleting().AllowEditing().EditMode(EditMode.Batch); })
            .ToolbarSettings(toolbar =>
            {
                toolbar.ShowToolbar().ToolbarItems(items =>
                {
                    //items.AddTool(ToolBarItems.Add);
                    items.AddTool(ToolBarItems.Edit);
                    items.AddTool(ToolBarItems.Update);
                    items.AddTool(ToolBarItems.Cancel);
                    items.AddTool(ToolBarItems.Search);
                    items.AddTool(ToolBarItems.ExcelExport);
                });
            })
        .Columns(col =>
        {
            col.Field("FacilityCode").IsPrimaryKey(true).Width(100).HeaderText("FacilityCode").Visible(false).Add();
            col.Field("Facility").AllowEditing(false).Width(180).HeaderText("Facility").Add();
            col.Field("level_of_care_Dec").AllowEditing(false).Width(150).HeaderText("Level of Care").Add();
            col.Field("ZoneDescription").AllowEditing(false).Width(100).HeaderText("Sector").Add();
            col.Field("District_Name").AllowEditing(false).Width(150).HeaderText("District").IsPrimaryKey(true).Add();
            col.Field("ImplementingPartnerDescription").AllowEditing(false).Width(100).HeaderText("IP").Add();
            col.Field("client_type_code").HeaderText("client type").AllowEditing(false).TextAlign(TextAlign.Justify).ForeignKeyField("client_type_code").ForeignKeyValue("client_type_desc").DataSource((IEnumerable<object>)ViewBag.client_type_code).Width(150).Add();
            col.Field("OwnershipId").HeaderText("Ownership").AllowEditing(false).TextAlign(TextAlign.Justify).ForeignKeyField("OwnershipId").ForeignKeyValue("OwnershipDescription").DataSource((IEnumerable<object>)ViewBag.OwnershipId).Width(150).Add();
            col.Field("ComprehensiveImplimentingPartnerCode").AllowEditing(false).HeaderText("Comprehensive IP").TextAlign(TextAlign.Justify).ForeignKeyField("ImplimentingPartnerCode").ForeignKeyValue("ImplementingPartnerDescription").DataSource((IEnumerable<object>)ViewBag.ComprehensiveImplimentingPartnerCode).Width(150).Add();
            col.Field("RFSO_UserName").AllowEditing(true).Width(150).HeaderText("SCTO UserName").ForeignKeyField("Email").ForeignKeyValue("UserName").DataSource((IEnumerable<Object>)ViewBag.RFSO).Add();
            col.Field("CDCRegionId").Visible(false).AllowEditing(false).HeaderText("CDCRegion").TextAlign(TextAlign.Justify).ForeignKeyField("CDCRegionId").ForeignKeyValue("CDCRegion").DataSource((IEnumerable<object>)ViewBag.CDCRegionId).Width(150).Add();
            col.Field("FacilityTypeId").Visible(false).AllowEditing(false).HeaderText("Facility Type").TextAlign(TextAlign.Justify).ForeignKeyField("FacilityTypeId").ForeignKeyValue("FacilityType").DataSource((IEnumerable<object>)ViewBag.FacilityTypeId).Width(150).Add();
            col.Field("Longtitude").Visible(false).AllowEditing(false).HeaderText("Longtitude").TextAlign(TextAlign.Justify).Width(150).Add();
            col.Field("Latititude").Visible(false).AllowEditing(false).HeaderText("Latititude").TextAlign(TextAlign.Justify).Width(150).Add();
            col.Field("Village_Id").Visible(false).AllowEditing(false).HeaderText("Village").TextAlign(TextAlign.Justify)/*.ForeignKeyField("Village_Id").ForeignKeyValue("Village_Id").DataSource((IEnumerable<object>)ViewBag.Village_Id)*/.Width(150).Add();
            col.Field("PatientLoadCode").Visible(false).HeaderText("Patient Load").AllowEditing(false).TextAlign(TextAlign.Justify).ForeignKeyField("PatientLoadCode").ForeignKeyValue("PatientLoadDescription").DataSource((IEnumerable<object>)ViewBag.PatientLoads).Width(150).Add();
            col.Field("IsActive").Visible(false).HeaderText("Is Active").AllowEditing(false).TextAlign(TextAlign.Justify).Width(150).Add();
            col.Field("Nearest_Public_HF_Distance").Visible(false).AllowEditing(false).HeaderText("Nearest Public HF Distance").Width(150).Add();
            col.Field("DSDM").HeaderText("DSDM").Visible(false).AllowEditing(false).Width(150).Add();
            //col.Field("SCTO").HeaderText("SCTO").AllowEditing(true).TextAlign(TextAlign.Justify).ForeignKeyField("SCTO").ForeignKeyValue("SCTO").DataSource((IEnumerable<object>)ViewBag.SCTO).Width(150).Add();
        })
        .ClientSideEvents(eve => { eve.ActionComplete("complete").ToolbarClick("OnToolbarClick");  })
)
@*@using (Html.BeginForm("ManageRFSOFacility", "ManageRFSOFacility", FormMethod.Post))
{
    <div class="row">
        <div class="col-lg-3">
            <hr />
            @Html.EJ().Button("Export").Type(ButtonType.Submit).Size(ButtonSize.Large).Text("Save")
        </div>
    </div>
}*@
<script>
    function OnToolbarClick(args) {
        if (args.itemName.indexOf("Export") > -1) {//if no selectedRecords, currenviewdata will be exported
            this.model["RFSOFacility"] = JSON.stringify(this.model.dataSource, null, 2147483644);
            //this.model["CDCRegions"] = JSON.stringify(this.model.currentViewData);
        }
    }
</script>
<style>
    .e-grid .e-groupdroparea, /*GroupDropArea */
    .e-grid .e-groupdroparea:hover, /*GroupDropArea Hover*/
    .e-grid .e-cloneproperties, /*Column header clone during dragging header*/
    .e-grid .e-groupheadercell:hover, /*HeaderCell in GroupDropArea*/
    .e-grid td.e-active, /*During Row Selected*/
    /*For pager items and their hover*/
    .e-pager .e-currentitem,
    .e-pager .e-currentitem:hover,
    .e-pager .e-link:hover,
    .e-pager .e-icon:hover {
        background-color: #ea1b8d;
    }

    .e-grid .e-gridheader /*For line that separates the grid header and content*/ {
        border-bottom-color: #ea1b8d;
    }

    .e-grid tr.e-hover /*For row hover*/ {
        background-color: #e66aae;
        color: #FFFFFF;
    }

    .e-grid .e-alt_row /*For Alternate row color*/ {
        background-color: #E5E4E2; /*#99CFE3;*/
    }
</style>

<style>
    .e-grid .e-dialog .gridform .e-rowcell {
        padding: .5em;
        border-bottom: 1px solid #c8c8c8;
        border-left: 1px solid #c8c8c8;
    }
</style>
<style>
    .panel-default > .panel-heading {
        background-color: #451bb1 /*#3e1111*/;
        color: white;
        /*background-color:silver;*/
        /*color: white;*/
    }
</style>

<style type="text/css" class="cssStyles">
    .control {
        margin-left: 30px;
    }

    .ctrllabel {
        padding-top: 15px;
    }

    .control {
        margin-left: 20px;
    }

    .frame {
        height: 250px;
        width: 1000px;
    }

    .frame1 {
        height: 240px;
        width: 900px;
    }

    .txt {
        display: block;
        margin-bottom: 12px;
    }
</style>

<style>
    #lblComplaintTitle {
        /*font-size: 24px;*/
        background-color: white;
        color: #c9252b;
        vertical-align: top;
        /*width: 700px;*/
    }

    .redLabels {
        /*font-size: 24px;*/
        background-color: white;
        color: #ff0000;
        vertical-align: top;
        font-weight: bold;
        /*width: 700px;*/
    }

    .myDiv {
        font-size: 18px;
        background-color: white;
        color: orangered;
        vertical-align: top;
        text-align: center;
        /*width: 700px;*/
    }
</style>

<style>
    .e-grid .e-dialog .gridform .e-rowcell {
        padding: .5em;
    }

    .custom.e-js .e-header {
        background: #c9252b;
    }

    .custom.e-js .e-content {
        background: #ddd;
    }

    .custom .e-rbn-button.e-btn.e-select {
        background: #f5f5f5;
        color: #333;
    }

    .tabstyle {
        background: #F9F9F9;
        border-radius: 10px;
        border: 1px solid #99CFE3;
        display: block;
    }

    .longcolumns {
        width: 600px !important;
        margin: 0 auto !important;
        position: relative !important;
        border-right: 5px #666 outset !important;
        border-left: 5px #666 outset !important;
    }
</style>