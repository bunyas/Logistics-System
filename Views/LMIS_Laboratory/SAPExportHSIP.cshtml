
@{
    ViewBag.Title = "SAPExport";
    Layout = "~/Views/Shared/_LayoutHSIP.cshtml";
}
@section BreadCrumb{
    <div class="row">
        <div class="col-lg-12">
            <ol class="breadcrumb">
                <li>
                    @Html.ActionLink("Home", "IndexHSIP", "Home")
                </li>
                <li class="active">
                    <strong>Laboratory: HSIP SAP Export</strong>
                </li>
            </ol>
        </div>
    </div>

}

@using (Html.BeginForm("SAPExportHSIP", "LMIS_Laboratory", FormMethod.Post))
{
    <div class="row">
        <div class="col-lg-3">
            <p>Start Of Reporting Period</p>
            <p><input type="text" id="StartDate" name="StartDate" value="{{:StartDate}}" class="e-field e-ejinputtext valid" /></p>
        </div>
        <div class="col-lg-3">
            <p>End Of Reporting Period</p>
            <p><input type="text" id="EndDate" name="EndDate" value="{{:EndDate}}" class="e-field e-ejinputtext valid" /></p>
        </div>
    </div>
    <div class="row">
        <div class="col-sm-2">
            @*<hr />*@
            @Html.EJ().Button("Load").Type(ButtonType.Submit).Size(ButtonSize.Large).Text("Search")
        </div>
    </div>
}
<br />
<div id='grd'></div>
<input type="text" id="OrderCount" name="OrderCount" style="border-color:white; border-style:none; margin-top:10px; float:right;" readonly="readonly" />
@*@(Html.EJ().Grid<object>
            ("Grid")
            .Datasource(datasource => datasource.URL("DataSourceSAPExportHSIP").BatchURL("").Adaptor(AdaptorType.UrlAdaptor))
            .AllowPaging()
             .AllowFiltering().ShowColumnChooser()
            .AllowTextWrap()
            .AllowGrouping()
            .AllowKeyboardNavigation(true)
            .GroupSettings(group => { group.ShowGroupedColumn(true); })
            .TextWrapSettings(wrap => { wrap.WrapMode(WrapMode.Both); })
            .FilterSettings(filter => { filter.FilterType(FilterType.Excel); })
            .EditSettings(edit => { edit.AllowEditing().EditMode(EditMode.Batch); })
                .ToolbarSettings(toolbar =>
                {
                    toolbar.ShowToolbar().ToolbarItems(items =>
                    {
                        items.AddTool(ToolBarItems.Edit);
                        items.AddTool(ToolBarItems.Update);
                        items.AddTool(ToolBarItems.Cancel);
                        items.AddTool(ToolBarItems.Search);
                    });
                })
            .Columns(col =>
            {
                col.Type("checkbox").Width(50).Add();
                col.Field("OrderNumber").AllowEditing(false).HeaderText("Order Number").IsPrimaryKey(true).Add();
                col.Field("FacilityCode").AllowEditing(false).HeaderText("Facility").IsPrimaryKey(true).ForeignKeyField("FacilityCode").ForeignKeyValue("Facility").DataSource((IEnumerable<Object>)ViewBag.FacilityDataSource).Add();
                col.Field("start_date").AllowEditing(false).HeaderText("Start of reporting period").IsPrimaryKey(true).Format("{0:dd/MM/yyyy}").Add();
                col.Field("end_date").AllowEditing(false).HeaderText("End of reporting period").IsPrimaryKey(true).Format("{0:dd/MM/yyyy}").Add();
                col.Field("date_completed").AllowEditing(false).HeaderText("Date prepared").Format("{0:dd/MM/yyyy}").Add();
                col.Field("OrderStatusId").AllowEditing(false).HeaderText("Order Status").ForeignKeyField("StatusId").ForeignKeyValue("Status").DataSource((IEnumerable<Object>)ViewBag.OrderStatusDataSource).Add();
            })

    )*@


<script>

    var mfacility =@Html.Raw(Json.Encode(ViewBag.FacilityDataSource));
    var mStatus =@Html.Raw(Json.Encode(ViewBag.OrderStatusDataSource));
    var mOrderType = @Html.Raw(Json.Encode(ViewBag.OrderType));
    $(function () {
        $("#StartDate").ejDatePicker(
            {
                width: '240px',
                dateFormat: "dd/MM/yyyy"
            }
        );
        $("#EndDate").ejDatePicker(
            {
                width: '240px',
                dateFormat: "dd/MM/yyyy"
            }
        );
        $("#grd").ejGrid({
            dataSource: ej.DataManager({ url: "GetSAPExport", batchUrl: "SaveSAPExport", adaptor: "UrlAdaptor" }),
            toolbarSettings: { showToolbar: true, toolbarItems: [ ej.Grid.ToolBarItems.Edit, ej.Grid.ToolBarItems.Delete, ej.Grid.ToolBarItems.Update, ej.Grid.ToolBarItems.Cancel, 'search'] },
            editSettings: { allowEditing: true, editMode: 'batch' },
            isResponsive: true,
            enableResponsiveRow: true,
            //allowPaging: true,
            allowFiltering: true,
            filterSettings: {
                filterType: "excel"
            },

            allowTextWrap: true,
            allowResizeToFit: true,
            showStackedHeader: true,
            minWidth: 400,
            allowScrolling: true,
            scrollSettings: { width: "100%", height: "100%" },
            columns: [
                { type: "checkbox", width: 50 },
                { field: "OrderNumber", headerText: "Order Number", allowEditing: false, width: 150, visible: true },
                { field: "FacilityCode", width: 200, headerText: "Facility", allowEditing: false,foreignKeyField: "FacilityCode", foreignKeyValue: "Facility", dataSource: mfacility },
               // { field: "StartDate", width: 120, headerText: "Start Date", allowEditing: false, format: "{0:dd/MM/yyyy}" },
                //{ field: "EndDate", width: 120, headerText: "End Date", allowEditing: false, format: "{0:dd/MM/yyyy}" },
                { field: "DatePrepared", width: 150, headerText: "Date Prepared", allowEditing: false,  format: "{0:dd/MM/yyyy}" },
                { field: "OrderStatusId", width: 150, headerText: "Order Status", allowEditing: false, foreignKeyField: "StatusId", foreignKeyValue: "Status", dataSource: mStatus },
                { field: "OrderTypeId", width: 150, headerText: "Order Type", allowEditing: false, foreignKeyField: "OrderTypeId", foreignKeyValue: "OrderType", dataSource: mOrderType },
                { field: "EmergencyOrder", width: 150, headerText: "Emergency Order", allowEditing: false, editType: ej.Grid.EditingType.Boolean, textAlign: ej.TextAlign.Center },

            ]
        });
        $.ajax({
            url: "GetSAPOrderCount",
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            //data: { values: mymsg },
            type: 'GET',

            success: function (result) {
                $("#OrderCount").val("No of Orders: " + result);
            },
        });
    });

</script>
<br />
<div>
    <input type="button" onclick="CheckButton()" class="btn btn-danger btn-lg" value="Export to SAP" />
</div>
<script>
    function CheckButton(agrs) {
        debugger
        // Create grid object.
        var gridObj = $("#grd").data("ejGrid");
        // Gets the selected row element list
        var records = gridObj.getSelectedRows();
        var AlreadyExist = "";
        if (records.length) {
            var count = 0;
            var Record = (records.length - 1);
            for (var i = 0; i <= Record; i++) {
                var orderNo = gridObj.getSelectedRecords()[i].OrderNumber;
                //var facility = gridObj.getSelectedRecords()[i].FacilityCode;
                //var enddate = gridObj.getSelectedRecords()[i].EndDate;
                //var prepareddate = gridObj.getSelectedRecords()[i].DatePrepared;

                //alert(orderNo); //alert(prepareddate);
                $.ajax({
                    url: "SaveSAPExport?Order_Number=" + orderNo,
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    //data: { values: mymsg },
                    type: 'GET',

                    success: function (result) {
                        // alert(data.msg);
                        //successSave();
                        if (result != "Record Saved") {
                            AlreadyExist = AlreadyExist + result + ",";
                        }
                        count++;
                        if (count == records.length) {
                            if (AlreadyExist != "") {
                                alert("The following orders already exist: " + AlreadyExist);
                            }
                            successSave();
                            $.ajax({
                                url: "GetSAPOrderCount",
                                contentType: "application/json; charset=utf-8",
                                dataType: "json",
                                //data: { values: mymsg },
                                type: 'GET',

                                success: function (result) {
                                    $("#OrderCount").val("No of Orders: " + result);
                                },
                            });
                        }
                    },
                }
                )
            }
        }


    }
</script>


<script>
    function failure(args) {
        $("#grd").ejWaitingPopup("hide");
        var str = "";
        str = ($($(args.error.responseText).find('b')[0]).text() + ":" + $(args.error.responseText).find('i').text());
        $("#ErrorList").html('<p style="font-family: cursive;color: red;">' + str + '</p></br><button id="button1" style="size: large; showRoundedCorner: true; cssClass:customCss1">---OK---</button>');
        $("#button1").ejButton({

            click: function (args) {
                $("#ErrorList").ejDialog("close");
            }
        });
        $("#ErrorList").ejDialog({ enableModal: true });
        $("#ErrorList").ejDialog("open");
    }

    function successSave(args) {
        //alert(window._Event);
        if (window._Event == "beginedit" || window._Event == "add") { }
        else {

            $("#grd").ejWaitingPopup("hide");

            var proddesc = $('#ClubID').val();
            var str = "Record" + " Exported Successfully!!!";

            //$("#SuccessDial").html('<p style="font-family: cursive;color: green;">' + str + '</p></br><button id="button1" style="margin-left: 50%;size: large; showRoundedCorner: true; cssClass:customCss1">OK</button>');
            $("#SuccessDial").html('<p style="font-family: cursive;color: green;">' + str /*+ '</p></br><button id="button1" style="margin-left: 50%;size: large; showRoundedCorner: true; cssClass:customCss1">OK</button>'*/);


            $("#btn1").ejButton({
                cssClass: "e-primary",
                size: "large",
                showRoundedCorner: true,
                contentType: "textandimage",
                prefixIcon: "e-icon e-handup",
                visible: false,
                style: "float:right",
                click: function (args) {
                    $("#SuccessDial").ejDialog("close");
                }
            });

            $("#button1").ejButton({
                cssClass: "e-success",
                size: "medium",
                showRoundedCorner: true,
                contentType: "textandimage",
                prefixIcon: "e-icon e-handup",

                click: function (args) {
                    $("#SuccessDial").ejDialog("close");
                }
            });
            $("#SuccessDial").ejDialog({ enableModal: true });
            $("#SuccessDial").ejDialog("open");
        }
        var gridObj = $("#grd").data("ejGrid");
        gridObj.refreshContent(true);

    }

    function cancelSave(args) {
        $("#grd").ejWaitingPopup("hide");
        var proddesc = $('#ClubID').val();
        var str = "The edits on " + " have been Cancelled!!!";
        //$("#SuccessDial").html('<p style="font-family: cursive;color: green;">' + str + '</p></br><button id="button1" style="margin-left: 50%;size: large; showRoundedCorner: true; cssClass:customCss1">OK</button>');
        $("#CancelDial").html('<p style="font-family: cursive;color: red;">' + str /*+ '</p></br><button id="button1" style="margin-left: 50%;size: large; showRoundedCorner: true; cssClass:customCss1">OK</button>'*/);

        var obj = $("#Grid").ejGrid("instance")
        obj.cancelEdit();
        $("#btnOK").ejButton({
            cssClass: "e-danger",
            size: "large",
            showRoundedCorner: true,
            contentType: "textandimage",
            prefixIcon: "e-icon e-handup",
            visible: false,
            style: "float:right",
            click: function (args) {

                $("#CancelDial").ejDialog("close");
            }
        });

        $("#CancelDial").ejDialog({ enableModal: true });
        $("#CancelDial").ejDialog("open");
    }
</script>


    <script id="sample" type="text/x-jsrender">
        <div class="footerspan" style="float:right">

            @Html.EJ().Button("btn1").Size(ButtonSize.Medium).Height("30").Width("70").Text("Ok")

            @*@Html.EJ().Button("btn2").Size(ButtonSize.Mini).Height("30").Width("70").Text("Cancel")*@

        </div>
        @*<div class="condition" style="float:left; margin-left:15px">
                @Html.EJ().CheckBox("check1").Text("Don't ask me this again")
            </div>*@
    </script>

    <script id="cancelfooter" type="text/x-jsrender">
        <div class="footerspan" style="float:right">
            @Html.EJ().Button("btnOK").Size(ButtonSize.Medium).Height("30").Width("70").Text("Ok")
            @Html.EJ().Button("btnCancel").Size(ButtonSize.Mini).Height("30").Width("70").Text("Cancel")

        </div>
        <div class="condition" style="float:left; margin-left:15px">
            @Html.EJ().CheckBox("check1").Text("Don't ask me this again")
        </div>
    </script>
    @(Html.EJ().Dialog("ErrorList").Title("Exception Thrown").ShowOnInit(false))
    @(Html.EJ().Dialog("SuccessDial").Title("Record Saved").ShowFooter(true).FooterTemplateId("sample").ShowOnInit(false))
    @(Html.EJ().Dialog("CancelDial").Title("Record Not Saved").ShowFooter(true).FooterTemplateId("cancelfooter").ShowOnInit(false))